using System.Text;

namespace SAPTeam.Kryptor.Tests
{
    public class TransformerTests
    {
        private const string GenericaBase64Sample = "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";
        private const string GenericaBase64Sample2 = "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";
        private const string GenericaBase64Sample3 = "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";
        private const string GenericaBase64Sample4 = "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";

        private const string LiteEnBase64Sample = "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";
        private const string LiteEnBase64Sample2 = "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";
        private const string LiteEnBase64Sample3 = "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";
        private const string LiteEnBase64Sample4 = "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";

        [Fact]
        public void TokenTest()
        {
            TransformerToken token1 = TransformerToken.Parse("Generica:secret:128");
            TransformerToken token2 = TransformerToken.Parse("generica:secret:128:salt");
            TransformerToken token3 = TransformerToken.Parse("generica:secret:128:salt-64");
            TransformerToken token4 = TransformerToken.Parse("generica:secret:128-64");
            TransformerToken token5 = TransformerToken.Parse("test:secret:128");

            Assert.Throws<ArgumentException>(() => TransformerToken.Parse("generica:secret:128:salt:64"));
            Assert.Throws<ArgumentException>(() => TransformerToken.Parse("generica:secret"));
            Assert.Throws<ArgumentException>(() => TransformerToken.Parse("generica"));

            Assert.Equal("generica", token1.TransformerName);
            Assert.Equal(Encoding.UTF8.GetBytes("secret"), token1.SecretKey);
            Assert.Equal(128, token1.KeySize);
            Assert.Null(token1.Salt);
            Assert.Equal(0, token1.Rotate);

            Assert.Equal("generica", token2.TransformerName);
            Assert.Equal(Encoding.UTF8.GetBytes("secret"), token2.SecretKey);
            Assert.Equal(128, token2.KeySize);
            Assert.Equal(Encoding.UTF8.GetBytes("salt"), token2.Salt);
            Assert.Equal(0, token2.Rotate);

            Assert.Equal("generica", token3.TransformerName);
            Assert.Equal(Encoding.UTF8.GetBytes("secret"), token3.SecretKey);
            Assert.Equal(128, token3.KeySize);
            Assert.Equal(Encoding.UTF8.GetBytes("salt"), token3.Salt);
            Assert.Equal(64, token3.Rotate);

            Assert.Equal("generica", token4.TransformerName);
            Assert.Equal(Encoding.UTF8.GetBytes("secret"), token4.SecretKey);
            Assert.Equal(128, token4.KeySize);
            Assert.Null(token4.Salt);
            Assert.Equal(64, token4.Rotate);

            Assert.Throws<ArgumentException>(() => Transformers.GetTranformer(token5));
        }

        [Fact]
        public void GenericaDeterministicTest()
        {
            byte[] data = Convert.FromBase64String(GenericaBase64Sample);

            TransformerToken token = new()
            {
                TransformerName = "generica",
                SecretKey = Encoding.UTF8.GetBytes("test"),
                KeySize = 128,
                Salt = Encoding.UTF8.GetBytes("salt"),
                Rotate = 64,
            };

            ITranformer tranformer = Transformers.GetTranformer(token);
            byte[] buffer = new byte[token.KeySize * 32];
            tranformer.Generate(buffer, token.Rotate);
            Assert.Equal(data, buffer);

            byte[] data2 = Convert.FromBase64String(GenericaBase64Sample2);

            TransformerToken token2 = new()
            {
                TransformerName = "generica",
                SecretKey = Encoding.UTF8.GetBytes("test"),
                KeySize = 128,
            };

            ITranformer tranformer2 = Transformers.GetTranformer(token2);
            byte[] buffer2 = new byte[token2.KeySize * 32];
            tranformer2.Generate(buffer2, token2.Rotate);
            Assert.Equal(data2, buffer2);

            byte[] data3 = Convert.FromBase64String(GenericaBase64Sample3);

            TransformerToken token3 = new()
            {
                TransformerName = "generica",
                SecretKey = Encoding.UTF8.GetBytes("test"),
                KeySize = 128,
                Rotate = 64,
            };

            ITranformer tranformer3 = Transformers.GetTranformer(token3);
            byte[] buffer3 = new byte[token3.KeySize * 32];
            tranformer3.Generate(buffer3, token3.Rotate);
            Assert.Equal(data3, buffer3);

            byte[] data4 = Convert.FromBase64String(GenericaBase64Sample4);

            TransformerToken token4 = new()
            {
                TransformerName = "generica",
                SecretKey = Encoding.UTF8.GetBytes("test"),
                KeySize = 128,
                Salt = Encoding.UTF8.GetBytes("salt")
            };

            ITranformer tranformer4 = Transformers.GetTranformer(token4);
            byte[] buffer4 = new byte[token4.KeySize * 32];
            tranformer4.Generate(buffer4, token4.Rotate);
            Assert.Equal(data4, buffer4);
        }

        [Fact]
        public void LiteEnDeterministicTest()
        {
            byte[] data = Convert.FromBase64String(LiteEnBase64Sample);

            TransformerToken token = new()
            {
                TransformerName = "liteen",
                SecretKey = Encoding.UTF8.GetBytes("test"),
                KeySize = 128,
                Salt = Encoding.UTF8.GetBytes("salt"),
                Rotate = 64,
            };

            ITranformer tranformer = Transformers.GetTranformer(token);
            byte[] buffer = new byte[token.KeySize * 32];
            tranformer.Generate(buffer, token.Rotate);
            Assert.Equal(data, buffer);

            byte[] data2 = Convert.FromBase64String(LiteEnBase64Sample2);

            TransformerToken token2 = new()
            {
                TransformerName = "liteen",
                SecretKey = Encoding.UTF8.GetBytes("test"),
                KeySize = 128,
            };

            ITranformer tranformer2 = Transformers.GetTranformer(token2);
            byte[] buffer2 = new byte[token2.KeySize * 32];
            tranformer2.Generate(buffer2, token2.Rotate);
            Assert.Equal(data2, buffer2);

            byte[] data3 = Convert.FromBase64String(LiteEnBase64Sample3);

            TransformerToken token3 = new()
            {
                TransformerName = "liteen",
                SecretKey = Encoding.UTF8.GetBytes("test"),
                KeySize = 128,
                Rotate = 64,
            };

            ITranformer tranformer3 = Transformers.GetTranformer(token3);
            byte[] buffer3 = new byte[token3.KeySize * 32];
            tranformer3.Generate(buffer3, token3.Rotate);
            Assert.Equal(data3, buffer3);

            byte[] data4 = Convert.FromBase64String(LiteEnBase64Sample4);

            TransformerToken token4 = new()
            {
                TransformerName = "liteen",
                SecretKey = Encoding.UTF8.GetBytes("test"),
                KeySize = 128,
                Salt = Encoding.UTF8.GetBytes("salt")
            };

            ITranformer tranformer4 = Transformers.GetTranformer(token4);
            byte[] buffer4 = new byte[token4.KeySize * 32];
            tranformer4.Generate(buffer4, token4.Rotate);
            Assert.Equal(data4, buffer4);
        }

        [Fact]
        public void RotateDeterministicTest()
        {
            int[] array = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
            IEnumerable<int> emptyCollection = Enumerable.Empty<int>();

            int[] result1 = (int[])array.Clone();
            int[] result2 = (int[])array.Clone();
            int[] result3 = (int[])array.Clone();
            int[] result4 = emptyCollection.ToArray();

            int[] expect1 = { 8, 9, 1, 2, 3, 4, 5, 6, 7 };
            int[] expect2 = { 3, 4, 5, 6, 7, 8, 9, 1, 2 };

            result1 = Transformers.Rotate(result1, 2);
            result2 = Transformers.Rotate(result2, -2);
            result3 = Transformers.Rotate(result3, 0);
            result4 = Transformers.Rotate(result4, 3);

            Assert.Equal(expect1, result1);
            Assert.Equal(expect2, result2);
            Assert.Equal(array, result3);

            Assert.Empty(result4);
        }

        [Fact]
        public void PickDeterministicTest()
        {
            List<int> collection = new List<int> { 10, 20, 30, 40, 50, 60, 70, 80, 90 };
            int[] expect = { 50, 70, 20 };

            IEnumerable<int> result1 = Transformers.Pick(collection, 3, seed: 123);
            IEnumerable<int> result2 = Transformers.Pick(collection, 3, seed: 124);

            Assert.NotEqual(collection, result1); // Shuffled
            Assert.Equal(expect, result1);
            Assert.NotEqual(expect, result2);
            Assert.Equal(3, result1.Count());
        }

        [Fact]
        public void MixDeterministicTest()
        {
            List<string> collection1 = new List<string> { "A", "B", "C" };
            List<string> collection2 = new List<string> { "X", "Y", "Z" };

            string[] expect = { "Z", "Y", "B", "X", "C", "A" };

            string[] result1 = Transformers.Mix(seed: 456, collection1, collection2);
            string[] result2 = Transformers.Mix(seed: 457, collection1, collection2);

            Assert.NotEqual(collection1.Concat(collection2), result1); // Shuffled
            Assert.Equal(expect, result1);
            Assert.NotEqual(expect, result2);
            Assert.Equal(6, result1.Length);
        }

        [Fact]
        public void BitConverterDeterministicTest()
        {
            byte[] array = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 };

            int expect1 = 0xC010E04;
            long expect2 = 0x8070D0B0C010E04;

            int result1 = Transformers.ToInt32(array, 1212);
            int result2 = Transformers.ToInt32(array, 1213);
            long result3 = Transformers.ToInt64(array, 1212);
            long result4 = Transformers.ToInt64(array, 1213);

            Assert.NotEqual(result1, result3);
            Assert.Equal(expect1, result1);
            Assert.NotEqual(expect1, result2);
            Assert.Equal(expect2, result3);
            Assert.NotEqual(expect2, result4);
        }
    }
}
