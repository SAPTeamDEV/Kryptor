name: Kryptor CLI CI/CD

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/Kryptor.Client/**'
      - 'cli/**'
      - '!cli/Kryptor.Cli.Android'
    branches: [master, dev]
  pull_request:
    branches: [master]
    
permissions:
  checks: 
    write
  contents:
    write
  packages:
    write
  pull-requests:
    write

env:
  build-path: 'src/Kryptor.Client/Kryptor.Client.csproj cli/*/*.csproj'
  test-path: ''
  deploy-path: 'src/Kryptor.Client/Kryptor.Client.csproj cli/*/*.csproj'

jobs:
  dotnet:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          cache: true
          cache-dependency-path: '**/packages.lock.json'
          dotnet-version: | 
            6.0.x
            8.0.x
      - name: Install dependencies
        run: |
          dotnet sln remove cli/Kryptor.Cli.Android/Kryptor.Cli.Android.csproj
          rm -rf cli/Kryptor.Cli.Android
          dotnet restore
      - name: Build
        run: |
          for TARGET in ${{ env.build-path }}
          do
            dotnet build $TARGET --configuration Nuget --no-restore
          done
        shell: bash
      
      # Initialize CD
      - name: Create NuGet package
        if: github.event_name != 'pull_request'
        run: |
          for TARGET in ${{ env.deploy-path }}
            do
            dotnet pack $TARGET --configuration Nuget --no-build -o __out__
            done
        shell: bash
      - name: Upload build artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: Kryptor-Cli-Packages-${{ github.sha }}
          path: |
            __out__/*.*nupkg
        
  deploy:
    name: Deploy NuGet package
    needs: [dotnet]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    env:
      DO_DEPLOY: 'true'
    steps:
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: Kryptor-Cli-Packages-${{ github.sha }}
          path: packs
      - name: Check artifacts
        run: |
          [ -d packs ] && [ "$(ls -A packs)" ] || echo "DO_DEPLOY==false" >> "$GITHUB_ENV"
      - name: Deploy to Github packages
        if: env.DO_DEPLOY == 'true'
        continue-on-error: true
        run: |
          for TARGET in packs/*.*nupkg
          do
            dotnet nuget push $TARGET --api-key ${{ secrets.GITHUB_TOKEN }} --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --skip-duplicate || continue
          done
        shell: bash
      - name: Deploy to NuGet gallery
        if: env.DO_DEPLOY == 'true' && github.ref_name == 'master'
        continue-on-error: true
        run: |
          for TARGET in packs/*.*nupkg
          do
          dotnet nuget push $TARGET --api-key ${{ secrets.NUGET_API_KEY }} --source "nuget.org" --skip-duplicate || continue
          done
        shell: bash
        
  publish-debug:
    name: Publish Debug Artifacts
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          cache: true
          cache-dependency-path: '**/packages.lock.json'
          dotnet-version: | 
            6.0.x
            8.0.x
      - name: Build debug binaries
        run: |
          tools/publish.sh -d
        shell: bash
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Kryptor-Cli-Debug-${{ github.sha }}
          path: |
            bin/Publish/Cli/Debug
          compression-level: 9