{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment Kryptor  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
BETA \par
}}Kryptor}
{\comment Generated by doxygen 1.12.0.}
{\creatim \yr2024\mo9\dy10\hr16\min38\sec38}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Kryptor}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version BETA\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Tue Sep 10 2024 16:38:38 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Outdated Readme\par \pard\plain 
{\tc\tcl1 \v Outdated Readme}
{\xe \v Outdated Readme}
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
\par
This Readme file belongs to the first alpha versions of Kryptor, The public API of this library heavily changed and this file will be updated on first stable release.\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Kryptor
\par}
{\tc\tcl2 \v Kryptor}
{\f2 } {\f2 } {\f2 } {\f2 } {\f2 }\par
Kryptor is a {\b key-based encryption engine}  that currently uses the {\b KES}  encryption algorithm to encrypt and decrypt data.\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
What is the KES?
\par}
{\tc\tcl3 \v What is the KES?}
KES is a complex encryption algorithm that uses a keystore to encrypt and decrypt data.\par
A keystore can contain up to 128 keys, and each key is used to encrypt and decrypt parts of data. Every 32 bytes of data is encrypted using a different key, and the keys are used in a round-robin fashion. in other words, the first 32 bytes of data are encrypted using the first key, the next 32 bytes are encrypted using the second key, and so on. When the end of the keystore is reached, the encryption process starts over from the beginning of the keystore.\par
In this way, in a 128-key keystore, the first 128*32 bytes of data are encrypted using the first 128 keys, and then the process starts over from the beginning of the keystore.\par
so in a 1 MB file, each key is used to encrypt and decrypt 8 KB of non-consecutive data. that makes it very difficult for an attacker to decrypt the data without the keystore. because the attacker would have to guess all 128 keys in the keystore to decrypt the data.\par
Each key has a length of 256 bits, so there are 2^256 possible options to guess, just for 1 key in the keystore, which makes it impossible for an attacker to guess all the keys.\par}
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
How to use the KES?
\par}
{\tc\tcl3 \v How to use the KES?}
To use the KES, you need to create a keystore using the KES Keystore Generator, and then use the keystore to encrypt and decrypt data using the KESProvider.\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Create a keystore using the KES Keystore Generator \par
}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf21  #}\par
KESKeyStore ks = KESKeyStore.Generate();\par
}
\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Save the keystore to a file to use it later\par}
\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf21  #}\par
File.WriteAllLines({\cf22 "keystore.kks"}, {\cf17 new} {\cf18 string}[] \{ks.ToString()\});\par
}
\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Encrypt data using the KESProvider {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf21  #}\par
KESProvider kp = {\cf17 new} KESProvider(ks);\par
kp.EncryptFile({\cf22 "InputFile"}, {\cf22 "OutputFile"});\par
}
\par}
\par
and to decrypt the data, use the same keystore to decrypt the data\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Load the keystore from the file {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf21  #}\par
KESKeyStore ks = KESKeyStore.FromString(File.ReadAllText({\cf22 "keystore.kks"}));\par
}
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Decrypt the data using the KESProvider {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf21  #}\par
KESProvider kp = {\cf17 new} KESProvider(ks);\par
kp.DecryptFile({\cf22 "InputFile"}, {\cf22 "OutputFile"});\par
}
\par}
\par
Note: You can also use the KESProvider to encrypt and decrypt data in memory with the EncryptBlock and DecryptBlock methods. \par}
\par}
}}
\par \pard\plain 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Code of Conduct\par \pard\plain 
{\tc\tcl1 \v Code of Conduct}
{\xe \v Code of Conduct}
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
\par
This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community.\par
For more information, see the {\f2 .NET Foundation Code of Conduct}. \par
}}
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Contributing to this project\par \pard\plain 
{\tc\tcl1 \v Contributing to this project}
{\xe \v Contributing to this project}
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
\par
This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community. For more information see the {\f2 .NET Foundation Code of Conduct}.\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Prerequisites
\par}
{\tc\tcl2 \v Prerequisites}
This project is actively developed using the following software. It is highly recommended that anyone contributing to this library use the same software.\par
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab {\f2 Visual Studio 2022}\par}
\par
\par}
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Building
\par}
{\tc\tcl2 \v Building}
To build this repository from the command line, you could run this command in the root of the repo: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid dotnet build\par
}
\par}
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Testing
\par}
{\tc\tcl2 \v Testing}
The Visual Studio 2022 Test Explorer will list and execute all tests.\par}
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Pull requests
\par}
{\tc\tcl2 \v Pull requests}
Pull requests are welcome! They may contain additional test cases (e.g. to demonstrate a failure), and/or product changes (with bug fixes or features). All product changes should be accompanied by additional tests to cover and justify the product change unless the product change is strictly an efficiency improvement and no outwardly observable change is expected.\par
In the master branch, all tests should always pass. Added tests that fail should be marked as Skip via {\f2 [Fact(Skip = "Test does not pass yet")]}  or similar message to keep our test pass rate at 100%. \par}
}}
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
LICENSE\par \pard\plain 
{\tc\tcl1 \v LICENSE}
{\xe \v LICENSE}
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MIT License\par
Copyright (c) 2024 SAP Team\par
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Security\par \pard\plain 
{\tc\tcl1 \v Security}
{\xe \v Security}
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
\par
The maintainers of this project take security seriously, and the reporting of potential security issues. If you believe you have found a security vulnerability in code from this repository that meets {\f2 Microsoft's definition of a security vulnerability}, please report it to us as described below.\par
We are using Microsoft's vulnerability definition as it is public and familiar to .NET users.\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Reporting Security Issues
\par}
{\tc\tcl2 \v Reporting Security Issues}
{\b Please do not report security vulnerabilities through public GitHub issues.} \par
Instead, please report them to the project maintainers using {\f2 keybase} or {\f2 email}. You will typically receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message.\par
Please include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Full paths of source file(s) related to the manifestation of the issue\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The location of the affected source code (tag/branch/commit or direct URL)\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Any special configuration required to reproduce the issue\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Step-by-step instructions to reproduce the issue\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Proof-of-concept or exploit code (if possible)\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Impact of the issue, including how an attacker might exploit the issue\par}
\par
This information will help us triage your report more quickly.\par}
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Preferred Languages
\par}
{\tc\tcl2 \v Preferred Languages}
We prefer all communications to be in English or Persian.\par}
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Policy
\par}
{\tc\tcl2 \v Policy}
This project follows the {\f2 GitHub CVD process} and will use {\f2 GHSA} to manage discussion of the vulnerability and fixes, and create a public CVE advisory through github if applicable. \par}
}}

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the packages with brief descriptions (if available):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b SAPTeam} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.Wordlist} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.Security} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.CryptoProviders} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Extensions} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Generators} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Helpers} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Attribute
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
BinderBase
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.GlobalOptionsBinder\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SAPTeam.Kryptor.Cli.ConsoleFrameBuffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Context
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Client.ClientContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.CliContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
SAPTeam.Kryptor.CryptoProcess\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.DataProcessingOptions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
EventArgs
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Client.SessionUpdateEventArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCL \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Client.SessionEventArgs\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
SAPTeam.Kryptor.Cli.GlobalOptions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Header\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Client.ClientHeader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.CliHeader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
ICloneable
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.CryptoProvider\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.CryptoProviders.DynamicEncryption\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.CryptoProviders.MixedVector\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.CryptoProviders.StandaloneKey\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.CryptoProviders.TransformedKey\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.CryptoProviders.TransformedParameters\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SAPTeam.Kryptor.CryptoProviderConfiguration\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
ICollection
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Client.SessionGroup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
IEquatable
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.CryptoProviderConfiguration\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SAPTeam.Kryptor.Helpers.IProgressReport\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.IGenerator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKH \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Generators.CryptoRandom\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Generators.EntroX\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Generators.SafeRng\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Generators.UnixRandom\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SAPTeam.Kryptor.ITranformer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKN \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Generators.Generica\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Generators.LiteEn\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SAPTeam.Kryptor.Kes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SAPTeam.Kryptor.Client.ISession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Client.Session\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.DecryptionSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.EncryptionSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.FileSaveSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.KeyStoreLoadSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SAPTeam.Kryptor.Cli.Wordlist.CompileSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.Wordlist.DownloadSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.Wordlist.QuerySession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.ManagedSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
SAPTeam.Kryptor.Client.ISessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.SessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCC \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.CliSessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.DataProcessingSessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPL \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.DecryptionSessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.EncryptionSessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SAPTeam.Kryptor.Cli.HeaderReaderSessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.Wordlist.SessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVN \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUW \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
}\par
}\par
JsonConverter
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Cli.SchemaJsonConverter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SAPTeam.Kryptor.JsonWorker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.KeyChain\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.KeyChainCollection\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.KeyStore\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.PauseRequest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.Program\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Random
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SAPTeam.Kryptor.Generators.CryptoRandom\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
SAPTeam.Kryptor.Client.SessionContainer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.SessionHolder\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.SessionRequest< TResponse >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.TransformerToken\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.Security.WordlistIndex\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Cli.WordlistJsonContainer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.CliContext} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.ClientContext} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an application context with session based design model })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.ClientHeader} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a unified header for kryptor front ends })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.CliHeader} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.CliSessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.ConsoleFrameBuffer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.CryptoProcess} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds data about the crypto process })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.CryptoProvider} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the abstract base class for KES Crypto Providers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.CryptoProviderConfiguration} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides standard to hold the crypto providers configuration })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Generators.CryptoRandom} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A random number generator based on the RNGCryptoServiceProvider. Adapted from the "Tales from the CryptoRandom" article in MSDN Magazine (September 2007) but with explicit guarantee to be thread safe. Note that this implementation also includes an optional (enabled by default) random buffer which provides a significant speed boost as it greatly reduces the amount of calls into unmanaged land })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.DataProcessingOptions} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.DecryptionSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.DecryptionSessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.CryptoProviders.DynamicEncryption} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Dynamic Encryption (DE) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a dynamic key and iv generated with attention of all parameters and offers the highest security })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.EncryptionSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Generators.EntroX} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random data reinforced by the entropies })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.FileSaveSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Generators.Generica} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates bytes array populated from specified seed })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.GlobalOptions} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.GlobalOptionsBinder} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Header} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the data header })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.IGenerator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents standard to generate random output })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Helpers.IProgressReport} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to report progress of works })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.ISession} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to start, monitor and control tasks })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.ISessionHost} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to start and end program })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.ITranformer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents standard to transform specified inputs to a reproducible output })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.JsonWorker} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents methods to work with json serialization and deserialization with full support for AOT })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Kes} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides methods to encrypt and decrypt data using the {\b Kryptor} Encryption Standard (KES) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.KeyChain} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold encryption data of files })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.KeyChainCollection} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a collection to work with key chains })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.KeyStore} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores keys for the {\b Kes} class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Generators.LiteEn} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates bytes array populated from specified seed, with fast speed designed for network transmissions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.ManagedSession} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an empty session to be managed by the session host })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.CryptoProviders.MixedVector} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Mixed Vector (MV) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a different key and a mixed iv Until all the keys are used, then it continues from the first key and this process continues until the end of encryption })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.PauseRequest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.Program} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Generators.SafeRng} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random bytes array with additional safety })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.SchemaJsonConverter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.Session} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents abstraction to implement sessions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.SessionContainer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents container to store sessions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.SessionEventArgs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold session events data })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.SessionGroup} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides High-Performance session monitoring solution })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.SessionHolder} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to store session and related informations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.SessionHost} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents abstraction for session hosts })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.SessionRequest< TResponse >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a class for communicattion between the session and the user })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.SessionUpdateEventArgs} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold session updates event data })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.CryptoProviders.StandaloneKey} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Standalone Key (SK) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a different key Until all the keys are used, then it continues from the first key and this process continues until the end of encryption })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.CryptoProviders.TransformedKey} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Transformed Key (TK) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a mix-transformed key })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.CryptoProviders.TransformedParameters} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Transformed Parameters (TP) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a mix-transformed key and iv })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.TransformerToken} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses and holds transformer token data })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Generators.UnixRandom} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random data with unix standard /dev/random character device })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a performance-friendly wordlist lookup class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.Security.WordlistIndex} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlists informations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlist informations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlist informations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlists informations })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Cli.WordlistJsonContainer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents wordlist's metadata needed for verification })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b AssemblyPlatformAttribute.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BuildBranch.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BuildInformation.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BuildVariant.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CastExtentions.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CliContext.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CliHeader.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CliSessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ConsoleFrameBuffer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DataProcessingOptions.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DataProcessingSessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DecryptionSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DecryptionSessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EncryptionSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EncryptionSessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Extensions.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FileSaveSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GlobalOptions.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HeaderReaderSessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KeyChainReaderSessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CrackSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CrackSubSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cli/Kryptor.Cli.Shared/KeyStoreAnalyze/SessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b src/Kryptor.Client/SessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KeyStoreFileLoadSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KeyStoreGenerateSessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KeyStoreGenerator.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KeyStoreLoadSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KeyStoreRandomLoadSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KeyStoreTokenLoadSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PauseRequest.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Program.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RandomSubset.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SchemaJsonConverter.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CompileSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DownloadSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ImportSessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IndexSessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InstallSessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QuerySession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QuerySessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RemoveSessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WordlistJsonContainer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientContext.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientHeader.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ISession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ISessionHost.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KeyChain.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KeyChainCollection.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ManagedSession.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WordlistFragmentCollection.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WordlistIndex.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WordlistIndexEntry.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WordlistIndexEntryLegacy.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WordlistIndexLegacy.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WordlistLibrary.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WordlistVerificationMetadata.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Session.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionContainer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionEndReason.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionEventArgs.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionGroup.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionGroupStorage.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionHolder.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionManager.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionRequest.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionStatus.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionUpdateEventArgs.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Utilities.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CryptoProcess.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CryptoProvider.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CryptoProviderConfiguration.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CryptoProviderFactory.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DynamicEncryption.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MixedVector.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StandaloneKey.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TransformedKey.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TransformedParameters.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CryptoExtensions.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EnumerableExtensions.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InternalExtensions.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CryptoRandom.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EntroX.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Generica.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LiteEn.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SafeRng.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UnixRandom.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Header.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b HeaderVerbosity.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AesHelper.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AsyncCompat.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IProgressReport.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b IGenerator.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ITranformer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b JsonWorker.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Kes.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b KeyStore.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Transformers.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TransformerToken.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam}
{\xe \v SAPTeam}
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor}
{\xe \v SAPTeam.Kryptor}
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Client}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b CryptoProviders}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Extensions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Generators}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Helpers}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CryptoProcess}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds data about the crypto process. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CryptoProvider}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the abstract base class for KES Crypto Providers. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CryptoProviderConfiguration}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides standard to hold the crypto providers configuration. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CryptoProviderFactory}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents methods to create crypto provider objects. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Header}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the data header. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b IGenerator}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents standard to generate random output. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b ITranformer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents standard to transform specified inputs to a reproducible output. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b JsonWorker}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents methods to work with json serialization and deserialization with full support for AOT. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Kes}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides methods to encrypt and decrypt data using the {\b Kryptor} Encryption Standard (KES). }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b KeyStore}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores keys for the {\b Kes} class. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Transformers}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains methods to transform vlues. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TransformerToken}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses and holds transformer token data. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b HeaderVerbosity} \{ {\b Empty} = 0
, {\b Minimum} = 1
, {\b Normal} = 2
, {\b Maximum} = 3
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the level of details included in header. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v HeaderVerbosity\:SAPTeam.Kryptor}
{\xe \v SAPTeam.Kryptor\:HeaderVerbosity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b SAPTeam.Kryptor.HeaderVerbosity}}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the level of details included in header. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Empty\:SAPTeam.Kryptor}
{\xe \v SAPTeam.Kryptor\:Empty}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Empty{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates an empty header. \par
}\cell }{\row }
{\xe \v Minimum\:SAPTeam.Kryptor}
{\xe \v SAPTeam.Kryptor\:Minimum}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Minimum{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The lowest detail level, Only includes api version and engine version. \par
}\cell }{\row }
{\xe \v Normal\:SAPTeam.Kryptor}
{\xe \v SAPTeam.Kryptor\:Normal}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Normal{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Medium detail level, Includes block size besides the minimum level. \par
}\cell }{\row }
{\xe \v Maximum\:SAPTeam.Kryptor}
{\xe \v SAPTeam.Kryptor\:Maximum}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Maximum{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Highest detail level, Includes all parameters in yje header. \par
}\cell }{\row }
}
{
Definition at line {\b 6} of file {\b HeaderVerbosity.cs}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli}
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b KeyStoreAnalyze}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Wordlist}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AssemblyPlatformAttribute}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BuildInformation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CastExtensions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CliContext}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CliHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CliSessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ConsoleFrameBuffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DataProcessingOptions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DataProcessingOptionsBinder}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DataProcessingSessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DecryptionSession}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DecryptionSessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EncryptionSession}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EncryptionSessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Extensions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FileSaveSession}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GlobalOptions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GlobalOptionsBinder}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HeaderReaderSessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KeyChainReaderSessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KeyStoreFileLoadSession}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KeyStoreGenerateSessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KeyStoreLoadSession}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KeyStoreRandomLoadSession}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KeyStoreTokenLoadSession}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PauseRequest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Program}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SchemaJsonConverter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WordlistJsonContainer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BuildBranch} \{ {\b None} = 0
, {\b Debug}
, {\b Release}
, {\b Nuget}
, {\b Indexer}
, {\b Light}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BuildVariant} \{ {\b None} = 0
, {\b Standard}
, {\b Legacy}
, {\b Native}
, {\b Android}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b KeyStoreGenerator} \{ {\b CryptoRng}
, {\b Unix}
, {\b SafeRng}
, {\b EntroX}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v BuildBranch\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:BuildBranch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b SAPTeam.Kryptor.Cli.BuildBranch}}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v None\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:None}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid None{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
\cell }{\cell }{\row }
{\xe \v Debug\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:Debug}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Debug{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\cell }{\cell }{\row }
{\xe \v Release\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:Release}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Release{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\cell }{\cell }{\row }
{\xe \v Nuget\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:Nuget}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Nuget{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\cell }{\cell }{\row }
{\xe \v Indexer\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:Indexer}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Indexer{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\cell }{\cell }{\row }
{\xe \v Light\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:Light}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Light{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 3} of file {\b BuildBranch.cs}.}\par
}
{\xe \v BuildVariant\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:BuildVariant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b SAPTeam.Kryptor.Cli.BuildVariant}}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v None\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:None}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid None{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
\cell }{\cell }{\row }
{\xe \v Standard\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:Standard}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Standard{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
\cell }{\cell }{\row }
{\xe \v Legacy\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:Legacy}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Legacy{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
\cell }{\cell }{\row }
{\xe \v Native\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:Native}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Native{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\cell }{\cell }{\row }
{\xe \v Android\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:Android}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Android{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 3} of file {\b BuildVariant.cs}.}\par
}
{\xe \v KeyStoreGenerator\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:KeyStoreGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b SAPTeam.Kryptor.Cli.KeyStoreGenerator}}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CryptoRng\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:CryptoRng}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid CryptoRng{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
\cell }{\cell }{\row }
{\xe \v Unix\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:Unix}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Unix{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\cell }{\cell }{\row }
{\xe \v SafeRng\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:SafeRng}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid SafeRng{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\cell }{\cell }{\row }
{\xe \v EntroX\:SAPTeam.Kryptor.Cli}
{\xe \v SAPTeam.Kryptor.Cli\:EntroX}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid EntroX{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 3} of file {\b KeyStoreGenerator.cs}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.KeyStoreAnalyze Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze}
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CrackSession}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CrackSubSession}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SessionHost}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.Wordlist Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.Wordlist}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist}
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CompileSession}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DownloadSession}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImportSessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b IndexSessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InstallSessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QuerySession}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QuerySessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RemoveSessionHost}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SessionHost}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client}
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Security}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClientContext}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an application context with session based design model. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClientHeader}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a unified header for kryptor front ends. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b ISession}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to start, monitor and control tasks. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b ISessionHost}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to start and end program. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KeyChain}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold encryption data of files. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b KeyChainCollection}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a collection to work with key chains. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ManagedSession}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an empty session to be managed by the session host. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Session}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents abstraction to implement sessions. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SessionContainer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents container to store sessions. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SessionEventArgs}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold session events data. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SessionGroup}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides High-Performance session monitoring solution. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SessionHolder}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to store session and related informations. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SessionHost}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents abstraction for session hosts. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SessionRequest}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a class for communicattion between the session and the user. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SessionUpdateEventArgs}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold session updates event data. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Utilities}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides common utilities used by kryptor front ends. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SessionEndReason} \{ {\b None}
, {\b Completed}
, {\b Failed}
, {\b Cancelled}
, {\b Skipped}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents reason of session ending. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SessionStatus} \{ {\b NotStarted}
, {\b Running}
, {\b Managed}
, {\b Ended}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents status of the session. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v SessionEndReason\:SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client\:SessionEndReason}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b SAPTeam.Kryptor.Client.SessionEndReason}}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents reason of session ending. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v None\:SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client\:None}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid None{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The session has not ended yet. \par
}\cell }{\row }
{\xe \v Completed\:SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client\:Completed}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Completed{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The session ended successfully. \par
}\cell }{\row }
{\xe \v Failed\:SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client\:Failed}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Failed{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The session failed with an exception. \par
}\cell }{\row }
{\xe \v Cancelled\:SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client\:Cancelled}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Cancelled{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The session ended by session host cancellation request. \par
}\cell }{\row }
{\xe \v Skipped\:SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client\:Skipped}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Skipped{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The session has been skipped. \par
}\cell }{\row }
}
{
Definition at line {\b 6} of file {\b SessionEndReason.cs}.}\par
}
{\xe \v SessionStatus\:SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client\:SessionStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b SAPTeam.Kryptor.Client.SessionStatus}}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents status of the session. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NotStarted\:SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client\:NotStarted}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid NotStarted{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The session has not started yet. \par
}\cell }{\row }
{\xe \v Running\:SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client\:Running}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Running{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The session is running and can be controlled by session host. \par
}\cell }{\row }
{\xe \v Managed\:SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client\:Managed}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Managed{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The session is running but managed by session host. \par
}\cell }{\row }
{\xe \v Ended\:SAPTeam.Kryptor.Client}
{\xe \v SAPTeam.Kryptor.Client\:Ended}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Ended{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The session has ended naturally or by cancellation request. \par
}\cell }{\row }
}
{
Definition at line {\b 6} of file {\b SessionStatus.cs}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.Security Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.Security}
{\xe \v SAPTeam.Kryptor.Client.Security}
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WordlistFragmentCollection}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a performance-friendly wordlist lookup class. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WordlistIndex}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlists informations. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WordlistIndexEntry}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlist informations. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WordlistIndexEntryLegacy}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlist informations. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WordlistIndexLegacy}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlists informations. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WordlistLibrary}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WordlistVerificationMetadata}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents wordlist's metadata needed for verification. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.CryptoProviders Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.CryptoProviders}
{\xe \v SAPTeam.Kryptor.CryptoProviders}
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DynamicEncryption}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Dynamic Encryption (DE) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a dynamic key and iv generated with attention of all parameters and offers the highest security. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MixedVector}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Mixed Vector (MV) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a different key and a mixed iv Until all the keys are used, then it continues from the first key and this process continues until the end of encryption. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StandaloneKey}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Standalone Key (SK) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a different key Until all the keys are used, then it continues from the first key and this process continues until the end of encryption. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TransformedKey}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Transformed Key (TK) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a mix-transformed key. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TransformedParameters}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Transformed Parameters (TP) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a mix-transformed key and iv. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Extensions Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Extensions}
{\xe \v SAPTeam.Kryptor.Extensions}
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CryptoExtensions}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents methods to compute hashes and other crypto tranforms. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EnumerableExtensions}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents extension methods for IEnumerable<T> collections. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InternalExtensions}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Generators Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Generators}
{\xe \v SAPTeam.Kryptor.Generators}
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CryptoRandom}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A random number generator based on the RNGCryptoServiceProvider. Adapted from the "Tales from the CryptoRandom" article in MSDN Magazine (September 2007) but with explicit guarantee to be thread safe. Note that this implementation also includes an optional (enabled by default) random buffer which provides a significant speed boost as it greatly reduces the amount of calls into unmanaged land. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EntroX}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random data reinforced by the entropies. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Generica}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates bytes array populated from specified seed. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LiteEn}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates bytes array populated from specified seed, with fast speed designed for network transmissions. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SafeRng}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random bytes array with additional safety. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UnixRandom}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random data with unix standard /dev/random character device. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Helpers Namespace Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Helpers}
{\xe \v SAPTeam.Kryptor.Helpers}
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AesHelper}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides static methods to encrypt and decrypt data with AES algorithm. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AsyncCompat}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides methods to use in async-challenging situations. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b IProgressReport}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to report progress of works. }}\par}
}

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute}
{\xe \v SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute}
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
Inheritance diagram for SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d89/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_assembly_platform_attribute.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AssemblyPlatformAttribute} (string tfm, string rid)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TargetFrameworkMoniker}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b RuntimeIdentifier}{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 3} of file {\b AssemblyPlatformAttribute.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AssemblyPlatformAttribute\:SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute}
{\xe \v SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute\:AssemblyPlatformAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute.AssemblyPlatformAttribute (string tfm, string rid)}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b AssemblyPlatformAttribute.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute.RuntimeIdentifier}, and {\b SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute.TargetFrameworkMoniker}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v RuntimeIdentifier\:SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute}
{\xe \v SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute\:RuntimeIdentifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute.RuntimeIdentifier{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b AssemblyPlatformAttribute.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute.AssemblyPlatformAttribute()}.}\par
}
{\xe \v TargetFrameworkMoniker\:SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute}
{\xe \v SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute\:TargetFrameworkMoniker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute.TargetFrameworkMoniker{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b AssemblyPlatformAttribute.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute.AssemblyPlatformAttribute()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AssemblyPlatformAttribute.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.CliContext Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.CliContext}
{\xe \v SAPTeam.Kryptor.Cli.CliContext}
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
Inheritance diagram for SAPTeam.Kryptor.Cli.CliContext:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/de0/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_cli_context.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliContext} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ClientContext}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b NewSessionHost} ({\b ISessionHost} host)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session host. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b CreateContext} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b StartSessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session host. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.ClientContext}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b CreateContext} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b DisposeContext} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CatchExceptions}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ApplicationDataDirectory}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The root application data folder. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ApplicationDataDirectoryIsWritable}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b WordlistDirectory}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b CliVersion}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ClientContext}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Version {\b EngineVersion} = new Version(Assembly.GetAssembly(typeof({\b Kes})).GetCustomAttribute<AssemblyFileVersionAttribute>().Version){\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the version of the kryptor engine. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Version {\b ClientVersion} = new Version(Assembly.GetAssembly(typeof({\b ClientContext})).GetCustomAttribute<AssemblyFileVersionAttribute>().Version){\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the version of the kryptor client front-end. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ISessionHost} {\b Host}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the application session host. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 9} of file {\b CliContext.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CliContext\:SAPTeam.Kryptor.Cli.CliContext}
{\xe \v SAPTeam.Kryptor.Cli.CliContext\:CliContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.CliContext.CliContext ()}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b CliContext.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.CliContext.ApplicationDataDirectory}, and {\b SAPTeam.Kryptor.Cli.CliContext.WordlistDirectory}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateContext\:SAPTeam.Kryptor.Cli.CliContext}
{\xe \v SAPTeam.Kryptor.Cli.CliContext\:CreateContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.CliContext.CreateContext (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b CliContext.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.CliContext.ApplicationDataDirectory}, and {\b SAPTeam.Kryptor.Cli.CliContext.WordlistDirectory}.}\par
}
{\xe \v StartSessionHost\:SAPTeam.Kryptor.Cli.CliContext}
{\xe \v SAPTeam.Kryptor.Cli.CliContext\:StartSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.CliContext.StartSessionHost (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session host. }}\par
{
Reimplemented from {\b SAPTeam.Kryptor.Client.ClientContext} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 83} of file {\b CliContext.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.CliContext.CatchExceptions}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ApplicationDataDirectory\:SAPTeam.Kryptor.Cli.CliContext}
{\xe \v SAPTeam.Kryptor.Cli.CliContext\:ApplicationDataDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.CliContext.ApplicationDataDirectory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The root application data folder. }}\par
{
Definition at line {\b 18} of file {\b CliContext.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliContext.CliContext()}, and {\b SAPTeam.Kryptor.Cli.CliContext.CreateContext()}.}\par
}
{\xe \v ApplicationDataDirectoryIsWritable\:SAPTeam.Kryptor.Cli.CliContext}
{\xe \v SAPTeam.Kryptor.Cli.CliContext\:ApplicationDataDirectoryIsWritable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.CliContext.ApplicationDataDirectoryIsWritable{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b CliContext.cs}.}\par
}
{\xe \v CatchExceptions\:SAPTeam.Kryptor.Cli.CliContext}
{\xe \v SAPTeam.Kryptor.Cli.CliContext\:CatchExceptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.CliContext.CatchExceptions{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b CliContext.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliContext.StartSessionHost()}.}\par
}
{\xe \v CliVersion\:SAPTeam.Kryptor.Cli.CliContext}
{\xe \v SAPTeam.Kryptor.Cli.CliContext\:CliVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.CliContext.CliVersion{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
\par
\par
\par
        BuildInformation.ApplicationVersion.ToString(3)\par
}
{
Definition at line {\b 42} of file {\b CliContext.cs}.}\par
}
{\xe \v NoColor\:SAPTeam.Kryptor.Cli.CliContext}
{\xe \v SAPTeam.Kryptor.Cli.CliContext\:NoColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.CliContext.NoColor{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b CliContext.cs}.}\par
}
{\xe \v WordlistDirectory\:SAPTeam.Kryptor.Cli.CliContext}
{\xe \v SAPTeam.Kryptor.Cli.CliContext\:WordlistDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.CliContext.WordlistDirectory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b CliContext.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliContext.CliContext()}, {\b SAPTeam.Kryptor.Cli.CliContext.CreateContext()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliContext.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.ClientContext Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.ClientContext}
{\xe \v SAPTeam.Kryptor.Client.ClientContext}
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an application context with session based design model. }}\par
Inheritance diagram for SAPTeam.Kryptor.Client.ClientContext:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dde/class_s_a_p_team_1_1_kryptor_1_1_client_1_1_client_context.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b NewSessionHost} ({\b ISessionHost} host)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session host. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b CreateContext} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b DisposeContext} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b StartSessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session host. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Version {\b EngineVersion} = new Version(Assembly.GetAssembly(typeof({\b Kes})).GetCustomAttribute<AssemblyFileVersionAttribute>().Version){\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the version of the kryptor engine. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Version {\b ClientVersion} = new Version(Assembly.GetAssembly(typeof({\b ClientContext})).GetCustomAttribute<AssemblyFileVersionAttribute>().Version){\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the version of the kryptor client front-end. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ISessionHost} {\b Host}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the application session host. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an application context with session based design model. \par
}{
Definition at line {\b 11} of file {\b ClientContext.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateContext\:SAPTeam.Kryptor.Client.ClientContext}
{\xe \v SAPTeam.Kryptor.Client.ClientContext\:CreateContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Client.ClientContext.CreateContext (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 31} of file {\b ClientContext.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Generators.EntroX.AddEntropy()}.}\par
}
{\xe \v DisposeContext\:SAPTeam.Kryptor.Client.ClientContext}
{\xe \v SAPTeam.Kryptor.Client.ClientContext\:DisposeContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Client.ClientContext.DisposeContext (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v NewSessionHost\:SAPTeam.Kryptor.Client.ClientContext}
{\xe \v SAPTeam.Kryptor.Client.ClientContext\:NewSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.ClientContext.NewSessionHost ({\b ISessionHost} host)}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session host. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i host} \cell }{An instance of {\b ISessionHost} to control the program. \cell }
{\row }
}
}{
Definition at line {\b 48} of file {\b ClientContext.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.ISessionHost.End()}, {\b SAPTeam.Kryptor.Client.ClientContext.Host}, and {\b SAPTeam.Kryptor.Client.ClientContext.StartSessionHost()}.}\par
}
{\xe \v StartSessionHost\:SAPTeam.Kryptor.Client.ClientContext}
{\xe \v SAPTeam.Kryptor.Client.ClientContext\:StartSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void SAPTeam.Kryptor.Client.ClientContext.StartSessionHost (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session host. }}\par
{
Reimplemented in {\b SAPTeam.Kryptor.Cli.CliContext} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.ClientContext.NewSessionHost()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ClientVersion\:SAPTeam.Kryptor.Client.ClientContext}
{\xe \v SAPTeam.Kryptor.Client.ClientContext\:ClientVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Version SAPTeam.Kryptor.Client.ClientContext.ClientVersion = new Version(Assembly.GetAssembly(typeof({\b ClientContext})).GetCustomAttribute<AssemblyFileVersionAttribute>().Version){\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the version of the kryptor client front-end. }}\par
{
Definition at line {\b 21} of file {\b ClientContext.cs}.}\par
}
{\xe \v EngineVersion\:SAPTeam.Kryptor.Client.ClientContext}
{\xe \v SAPTeam.Kryptor.Client.ClientContext\:EngineVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Version SAPTeam.Kryptor.Client.ClientContext.EngineVersion = new Version(Assembly.GetAssembly(typeof({\b Kes})).GetCustomAttribute<AssemblyFileVersionAttribute>().Version){\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the version of the kryptor engine. }}\par
{
Definition at line {\b 16} of file {\b ClientContext.cs}.}\par
}
{\xe \v Host\:SAPTeam.Kryptor.Client.ClientContext}
{\xe \v SAPTeam.Kryptor.Client.ClientContext\:Host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ISessionHost} SAPTeam.Kryptor.Client.ClientContext.Host{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the application session host. }}\par
{
Definition at line {\b 28} of file {\b ClientContext.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.ClientContext.NewSessionHost()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientContext.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.ClientHeader Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.ClientHeader}
{\xe \v SAPTeam.Kryptor.Client.ClientHeader}
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a unified header for kryptor front ends. }}\par
Inheritance diagram for SAPTeam.Kryptor.Client.ClientHeader:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/db5/class_s_a_p_team_1_1_kryptor_1_1_client_1_1_client_header.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateSerial} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates a new unique identifier for the header and associates it with the {\b Serial} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Header}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b CreatePayload} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exports the header contents as base64 encoded bytes array. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ClientName}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the name of the encryptor client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Version} {\b ClientVersion}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the version of the encryptor client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b FileName}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the original file name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Serial}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the unique identifier of the encrypted file. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Header}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Version {\b Version}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the version of the encryptor api backend. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Version} {\b EngineVersion}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the version of the encryptor engine. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HeaderVerbosity} {\b Verbosity}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the amount of details included in this header. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BlockSize}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the file block size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the crypto provider configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Extra}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the extra header entries. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b SAPTeam.Kryptor.Header}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static T {\b ReadHeader< T >} (Stream stream)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads the KES header of stream and skips the header area. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a unified header for kryptor front ends. \par
}{
Definition at line {\b 12} of file {\b ClientHeader.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GenerateSerial\:SAPTeam.Kryptor.Client.ClientHeader}
{\xe \v SAPTeam.Kryptor.Client.ClientHeader\:GenerateSerial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.ClientHeader.GenerateSerial ()}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates a new unique identifier for the header and associates it with the {\b Serial} property. }}\par
{
Definition at line {\b 44} of file {\b ClientHeader.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.ClientHeader.Serial}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v ClientName\:SAPTeam.Kryptor.Client.ClientHeader}
{\xe \v SAPTeam.Kryptor.Client.ClientHeader\:ClientName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.ClientHeader.ClientName{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the name of the encryptor client application. }}\par
{
Definition at line {\b 24} of file {\b ClientHeader.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliHeader.Create()}.}\par
}
{\xe \v ClientVersion\:SAPTeam.Kryptor.Client.ClientHeader}
{\xe \v SAPTeam.Kryptor.Client.ClientHeader\:ClientVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Version} SAPTeam.Kryptor.Client.ClientHeader.ClientVersion{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the version of the encryptor client application. }}\par
{
Definition at line {\b 29} of file {\b ClientHeader.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliHeader.Create()}.}\par
}
{\xe \v FileName\:SAPTeam.Kryptor.Client.ClientHeader}
{\xe \v SAPTeam.Kryptor.Client.ClientHeader\:FileName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.ClientHeader.FileName{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the original file name. }}\par
{
Definition at line {\b 34} of file {\b ClientHeader.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}.}\par
}
{\xe \v Serial\:SAPTeam.Kryptor.Client.ClientHeader}
{\xe \v SAPTeam.Kryptor.Client.ClientHeader\:Serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.ClientHeader.Serial{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the unique identifier of the encrypted file. }}\par
{
Definition at line {\b 39} of file {\b ClientHeader.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.KeyChainCollection.Add()}, {\b SAPTeam.Kryptor.Client.ClientHeader.GenerateSerial()}, and {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientHeader.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.CliHeader Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.CliHeader}
{\xe \v SAPTeam.Kryptor.Cli.CliHeader}
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
Inheritance diagram for SAPTeam.Kryptor.Cli.CliHeader:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dac/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_cli_header.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b ClientHeader} {\b Create} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b SAPTeam.Kryptor.Header}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static T {\b ReadHeader< T >} (Stream stream)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads the KES header of stream and skips the header area. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ClientHeader}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateSerial} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates a new unique identifier for the header and associates it with the {\b Serial} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Header}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b CreatePayload} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exports the header contents as base64 encoded bytes array. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ClientHeader}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ClientName}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the name of the encryptor client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Version} {\b ClientVersion}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the version of the encryptor client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b FileName}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the original file name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Serial}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the unique identifier of the encrypted file. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Header}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Version {\b Version}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the version of the encryptor api backend. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Version} {\b EngineVersion}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the version of the encryptor engine. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HeaderVerbosity} {\b Verbosity}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the amount of details included in this header. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BlockSize}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the file block size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the crypto provider configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Extra}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the extra header entries. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 11} of file {\b CliHeader.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Create\:SAPTeam.Kryptor.Cli.CliHeader}
{\xe \v SAPTeam.Kryptor.Cli.CliHeader\:Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b ClientHeader} SAPTeam.Kryptor.Cli.CliHeader.Create (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b CliHeader.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.ClientHeader.ClientName}, {\b SAPTeam.Kryptor.Client.ClientHeader.ClientVersion}, {\b SAPTeam.Kryptor.Header.Extra}, and {\b SAPTeam.Kryptor.Header.Version}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliHeader.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.CliSessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost}
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
Inheritance diagram for SAPTeam.Kryptor.Cli.CliSessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d53/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_cli_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 12} of file {\b CliSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CliSessionHost\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:CliSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.CliSessionHost.CliSessionHost ({\b GlobalOptions} globalOptions)}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b CliSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.CliSessionHost.IsOutputRedirected}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.NoColor}, {\b SAPTeam.Kryptor.Cli.GlobalOptions.NoColor}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.NoInteractions}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.Quiet}, {\b SAPTeam.Kryptor.Cli.GlobalOptions.Quiet}, {\b SAPTeam.Kryptor.Cli.GlobalOptions.Verbose}, and {\b SAPTeam.Kryptor.Client.SessionHost.Verbose}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateKeyStoreLoadSession\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:CreateKeyStoreLoadSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KeyStoreLoadSession} SAPTeam.Kryptor.Cli.CliSessionHost.CreateKeyStoreLoadSession (string keyStore){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 587} of file {\b CliSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.CliSessionHost.DebugLog()}, {\b SAPTeam.Kryptor.TransformerToken.IsValid()}, {\b SAPTeam.Kryptor.TransformerToken.Parse()}, and {\b SAPTeam.Kryptor.Client.SessionHost.Verbose}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.LoadKeyStore()}, and {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost.Start()}.}\par
}
{\xe \v DebugLog\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:DebugLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.CliSessionHost.DebugLog (string message){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b CliSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionHost.Verbose}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.CreateKeyStoreLoadSession()}, {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.Start()}.}\par
}
{\xe \v LoadKeyStore\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:LoadKeyStore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KeyStore} SAPTeam.Kryptor.Cli.CliSessionHost.LoadKeyStore (string keyStore){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 574} of file {\b CliSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.CliSessionHost.CreateKeyStoreLoadSession()}, {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession.KeyStore}, {\b SAPTeam.Kryptor.Client.SessionHost.NewSession()}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored()}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.Start()}.}\par
}
{\xe \v Log\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:Log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.CliSessionHost.Log (string message = {\f2 null}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.ListInstalledWordlists()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost.Start()}.}\par
}
{\xe \v LogError\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:LogError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.CliSessionHost.LogError (string message = {\f2 null}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.GetInstallationPermission()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.ListInstalledWordlists()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost.Start()}.}\par
}
{\xe \v OnSessionRequest< TResponse >\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:OnSessionRequest< TResponse >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< TResponse > SAPTeam.Kryptor.Cli.CliSessionHost.OnSessionRequest< TResponse > ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method should send requests to user and if it's not possible, it could return the SessionRequest<TResponse>.DefaultValue or throws an exception. The thrown exception would be catched on the sender session and the session will fail. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The paused session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The session host or user response. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i NotSupportedException} \cell }{This exception thrown when the requested {\i TResponse}   is not supported by this session host. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 617} of file {\b CliSessionHost.cs}.}\par
}
{\xe \v ShowProgress\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:ShowProgress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgress (bool showOverall, bool showRemaining){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 546} of file {\b CliSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored()}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored()}.}\par
}
{\xe \v ShowProgress\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:ShowProgress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgress ({\b SessionGroup} sessionGroup){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 560} of file {\b CliSessionHost.cs}.}\par
}
{\xe \v ShowProgressMonitored\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:ShowProgressMonitored}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored (bool showOverall, bool showRemaining = {\f2 true}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 553} of file {\b CliSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionHost.MonitorTask()}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgress()}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.GetSmartProgress()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.LoadKeyStore()}, {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost.Start()}.}\par
}
{\xe \v ShowProgressMonitored\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:ShowProgressMonitored}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored ({\b SessionGroup} sessionGroup){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 567} of file {\b CliSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionHost.MonitorTask()}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgress()}.}\par
}
{\xe \v Start\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.CliSessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 53} of file {\b CliSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.CliSessionHost.Log()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.LogError()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.NoColor}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.Quiet}, and {\b SAPTeam.Kryptor.Client.SessionHost.Verbose}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v HasRequest\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:HasRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.CliSessionHost.HasRequest{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b CliSessionHost.cs}.}\par
}
{\xe \v IsOutputRedirected\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:IsOutputRedirected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.CliSessionHost.IsOutputRedirected{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b CliSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.CliSessionHost()}.}\par
}
{\xe \v KeyQueue\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:KeyQueue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ConsoleKeyInfo SAPTeam.Kryptor.Cli.CliSessionHost.KeyQueue{\f2 [get]}, {\f2 [set]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b CliSessionHost.cs}.}\par
}
{\xe \v NoColor\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:NoColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.CliSessionHost.NoColor{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b CliSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.CliSessionHost()}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.Start()}.}\par
}
{\xe \v NoInteractions\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:NoInteractions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.CliSessionHost.NoInteractions{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b CliSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.CliSessionHost()}, and {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.Start()}.}\par
}
{\xe \v Quiet\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:Quiet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.CliSessionHost.Quiet{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b CliSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.CliSessionHost()}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.Start()}.}\par
}
{\xe \v Request\:SAPTeam.Kryptor.Cli.CliSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.CliSessionHost\:Request}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PauseRequest} SAPTeam.Kryptor.Cli.CliSessionHost.Request = new {\b PauseRequest}(null, false){\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b CliSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.Wordlist.CompileSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.Wordlist.CompileSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.CompileSession}
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
Inheritance diagram for SAPTeam.Kryptor.Cli.Wordlist.CompileSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dab/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_wordlist_1_1_compile_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CompileSession} (string path, string destination, {\b WordlistIndexEntry} entry, bool optimize, bool indexing, bool importing)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b FilePath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b DestPath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndexEntry} {\b IndexEntry}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 11} of file {\b CompileSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CompileSession\:SAPTeam.Kryptor.Cli.Wordlist.CompileSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.CompileSession\:CompileSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.Wordlist.CompileSession.CompileSession (string path, string destination, {\b WordlistIndexEntry} entry, bool optimize, bool indexing, bool importing)}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b CompileSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}, {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.DestPath}, {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.FilePath}, and {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.IndexEntry}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v RunAsync\:SAPTeam.Kryptor.Cli.Wordlist.CompileSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.CompileSession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< bool > SAPTeam.Kryptor.Cli.Wordlist.CompileSession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b CompileSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}, {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.DestPath}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.FinalizeInstallation()}, {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.IndexEntry}, and {\b SAPTeam.Kryptor.Client.Session.Progress}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v DestPath\:SAPTeam.Kryptor.Cli.Wordlist.CompileSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.CompileSession\:DestPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.Wordlist.CompileSession.DestPath}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b CompileSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.CompileSession()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.RunAsync()}.}\par
}
{\xe \v FilePath\:SAPTeam.Kryptor.Cli.Wordlist.CompileSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.CompileSession\:FilePath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.Wordlist.CompileSession.FilePath}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b CompileSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.CompileSession()}.}\par
}
{\xe \v IndexEntry\:SAPTeam.Kryptor.Cli.Wordlist.CompileSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.CompileSession\:IndexEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WordlistIndexEntry} SAPTeam.Kryptor.Cli.Wordlist.CompileSession.IndexEntry}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b CompileSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.CompileSession()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CompileSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.ConsoleFrameBuffer Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.ConsoleFrameBuffer}
{\xe \v SAPTeam.Kryptor.Cli.ConsoleFrameBuffer}
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Next} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Loading}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Waiting}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Paused}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 3} of file {\b ConsoleFrameBuffer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Next\:SAPTeam.Kryptor.Cli.ConsoleFrameBuffer}
{\xe \v SAPTeam.Kryptor.Cli.ConsoleFrameBuffer\:Next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.ConsoleFrameBuffer.Next ()}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b ConsoleFrameBuffer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Loading\:SAPTeam.Kryptor.Cli.ConsoleFrameBuffer}
{\xe \v SAPTeam.Kryptor.Cli.ConsoleFrameBuffer\:Loading}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.ConsoleFrameBuffer.Loading{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b ConsoleFrameBuffer.cs}.}\par
}
{\xe \v Paused\:SAPTeam.Kryptor.Cli.ConsoleFrameBuffer}
{\xe \v SAPTeam.Kryptor.Cli.ConsoleFrameBuffer\:Paused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.ConsoleFrameBuffer.Paused{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 47} of file {\b ConsoleFrameBuffer.cs}.}\par
}
{\xe \v Waiting\:SAPTeam.Kryptor.Cli.ConsoleFrameBuffer}
{\xe \v SAPTeam.Kryptor.Cli.ConsoleFrameBuffer\:Waiting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.ConsoleFrameBuffer.Waiting{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 46} of file {\b ConsoleFrameBuffer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleFrameBuffer.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
Inheritance diagram for SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/df2/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_key_store_analyze_1_1_crack_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CrackSession} (int maxRunningSessions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b NewSession} ({\b ISession} session, bool autoRemove, bool autoStart)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b CalcTimer}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Found}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 8} of file {\b CrackSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CrackSession\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\:CrackSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.CrackSession (int maxRunningSessions)}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b CrackSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.CalcTimer}, and {\b SAPTeam.Kryptor.Client.Session.Progress}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v End\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\:End}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.End (bool cancelled)}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v MonitorTask\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\:MonitorTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.MonitorTask (Task task)}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v NewSession\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\:NewSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.NewSession ({\b ISession} session, bool autoRemove, bool autoStart)}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status SessionStatus.NotStarted. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.RunAsync()}.}\par
}
{\xe \v OnSessionRequest< TResponse >\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\:OnSessionRequest< TResponse >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task< TResponse > SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.OnSessionRequest< TResponse > ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method should send requests to user and if it's not possible, it could return the SessionRequest<TResponse>.DefaultValue or throws an exception. The thrown exception would be catched on the sender session and the session will fail. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The paused session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The session host or user response. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i NotSupportedException} \cell }{This exception thrown when the requested {\i TResponse}   is not supported by this session host. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v RunAsync\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< bool > SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b CrackSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.CalcTimer}, {\b SAPTeam.Kryptor.Client.Session.Description}, and {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.NewSession()}.}\par
}
{\xe \v Start\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v CalcTimer\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\:CalcTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Stopwatch SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.CalcTimer{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b CrackSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.CrackSession()}, and {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.RunAsync()}.}\par
}
{\xe \v Found\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\:Found}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.Found{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b CrackSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost.Start()}.}\par
}
{\xe \v Verbose\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession\:Verbose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.Verbose{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 15} of file {\b CrackSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CrackSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession}
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
Inheritance diagram for SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/de3/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_key_store_analyze_1_1_crack_sub_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CrackSubSession} (int index, byte[] test)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Index}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Action {\b OnVerify}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b CrackSubSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CrackSubSession\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession\:CrackSubSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession.CrackSubSession (int index, byte[] test)}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b CrackSubSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession.Index}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v RunAsync\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< bool > SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b CrackSubSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession.Index}, and {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession.OnVerify}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Index\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession\:Index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession.Index}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b CrackSubSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession.CrackSubSession()}, and {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v IsHidden\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession\:IsHidden}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession.IsHidden{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 14} of file {\b CrackSubSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v OnVerify\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession\:OnVerify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Action SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession.OnVerify}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b CrackSubSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CrackSubSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.CryptoProcess Struct Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.CryptoProcess}
{\xe \v SAPTeam.Kryptor.CryptoProcess}
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds data about the crypto process. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b InitializeData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all properties. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ChunkIndex}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the index of the chunk being processed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BlockIndex}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the index of the block being processed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BlockSize}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the size of the block being processed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b BlockHash}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the SHA256 hash of the block being processed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, object > {\b BlockData}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets custom data stored by crypto processors for this block. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, object > {\b ProcessData}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets custom data stored by crypto processors for the entire process. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds data about the crypto process. \par
}{
Definition at line {\b 6} of file {\b CryptoProcess.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v InitializeData\:SAPTeam.Kryptor.CryptoProcess}
{\xe \v SAPTeam.Kryptor.CryptoProcess\:InitializeData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.CryptoProcess.InitializeData ()}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all properties. }}\par
{
Definition at line {\b 43} of file {\b CryptoProcess.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProcess.BlockData}, {\b SAPTeam.Kryptor.CryptoProcess.BlockHash}, {\b SAPTeam.Kryptor.CryptoProcess.BlockIndex}, {\b SAPTeam.Kryptor.CryptoProcess.ChunkIndex}, and {\b SAPTeam.Kryptor.CryptoProcess.ProcessData}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.DecryptBlockAsync()}, and {\b SAPTeam.Kryptor.Kes.EncryptBlockAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v BlockData\:SAPTeam.Kryptor.CryptoProcess}
{\xe \v SAPTeam.Kryptor.CryptoProcess\:BlockData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, object> SAPTeam.Kryptor.CryptoProcess.BlockData{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets custom data stored by crypto processors for this block. }}\par
{
Definition at line {\b 33} of file {\b CryptoProcess.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProcess.InitializeData()}.}\par
}
{\xe \v BlockHash\:SAPTeam.Kryptor.CryptoProcess}
{\xe \v SAPTeam.Kryptor.CryptoProcess\:BlockHash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] SAPTeam.Kryptor.CryptoProcess.BlockHash{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the SHA256 hash of the block being processed. }}\par
{
Definition at line {\b 28} of file {\b CryptoProcess.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.DecryptChunkAsync()}, {\b SAPTeam.Kryptor.CryptoProvider.EncryptBlockAsync()}, and {\b SAPTeam.Kryptor.CryptoProcess.InitializeData()}.}\par
}
{\xe \v BlockIndex\:SAPTeam.Kryptor.CryptoProcess}
{\xe \v SAPTeam.Kryptor.CryptoProcess\:BlockIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.CryptoProcess.BlockIndex{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the index of the block being processed. }}\par
{
Definition at line {\b 18} of file {\b CryptoProcess.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProvider.DecryptBlockAsync()}, {\b SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.DecryptChunkAsync()}, {\b SAPTeam.Kryptor.CryptoProvider.EncryptBlockAsync()}, and {\b SAPTeam.Kryptor.CryptoProcess.InitializeData()}.}\par
}
{\xe \v BlockSize\:SAPTeam.Kryptor.CryptoProcess}
{\xe \v SAPTeam.Kryptor.CryptoProcess\:BlockSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.CryptoProcess.BlockSize{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the size of the block being processed. }}\par
{
Definition at line {\b 23} of file {\b CryptoProcess.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.DecryptChunkAsync()}.}\par
}
{\xe \v ChunkIndex\:SAPTeam.Kryptor.CryptoProcess}
{\xe \v SAPTeam.Kryptor.CryptoProcess\:ChunkIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.CryptoProcess.ChunkIndex{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the index of the chunk being processed. }}\par
{
Definition at line {\b 13} of file {\b CryptoProcess.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProvider.DecryptBlockAsync()}, {\b SAPTeam.Kryptor.CryptoProvider.EncryptBlockAsync()}, and {\b SAPTeam.Kryptor.CryptoProcess.InitializeData()}.}\par
}
{\xe \v ProcessData\:SAPTeam.Kryptor.CryptoProcess}
{\xe \v SAPTeam.Kryptor.CryptoProcess\:ProcessData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, object> SAPTeam.Kryptor.CryptoProcess.ProcessData{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets custom data stored by crypto processors for the entire process. }}\par
{
Definition at line {\b 38} of file {\b CryptoProcess.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.DecryptBlockAsync()}, {\b SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.DecryptChunkAsync()}, {\b SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.EncryptBlockAsync()}, and {\b SAPTeam.Kryptor.CryptoProcess.InitializeData()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProcess.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.CryptoProvider Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.CryptoProvider}
{\xe \v SAPTeam.Kryptor.CryptoProvider}
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the abstract base class for KES Crypto Providers. }}\par
Inheritance diagram for SAPTeam.Kryptor.CryptoProvider:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/dd8/class_s_a_p_team_1_1_kryptor_1_1_crypto_provider.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< byte[]> {\b EncryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< byte[]> {\b DecryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b Clone} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ApplyHeader} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new crypto provider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b EncryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts chunk of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b DecryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts chunk of data asynchronously. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b DecryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Decryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b EncryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Encryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of this crypto provider instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keystore for crypto operations. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the abstract base class for KES Crypto Providers. \par
}{
Definition at line {\b 10} of file {\b CryptoProvider.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ApplyHeader\:SAPTeam.Kryptor.CryptoProvider}
{\xe \v SAPTeam.Kryptor.CryptoProvider\:ApplyHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void SAPTeam.Kryptor.CryptoProvider.ApplyHeader ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration = {\f2 null}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new crypto provider. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore with at least 2 keys. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configuration} \cell }{The configuration to initialize the crypto provider \cell }
{\row }
}
}{
Reimplemented in {\b SAPTeam.Kryptor.CryptoProviders.TransformedKey} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJC \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SAPTeam.Kryptor.CryptoProviders.TransformedParameters} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 90} of file {\b CryptoProvider.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProvider.Configuration}.}\par
}
{\xe \v Clone\:SAPTeam.Kryptor.CryptoProvider}
{\xe \v SAPTeam.Kryptor.CryptoProvider\:Clone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object SAPTeam.Kryptor.CryptoProvider.Clone ()}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v DecryptBlockAsync\:SAPTeam.Kryptor.CryptoProvider}
{\xe \v SAPTeam.Kryptor.CryptoProvider\:DecryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual async Task< byte[]> SAPTeam.Kryptor.CryptoProvider.DecryptBlockAsync (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw encrypted data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Decrypted data block.\par
}}}{
Reimplemented in {\b SAPTeam.Kryptor.CryptoProviders.DynamicEncryption} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 142} of file {\b CryptoProvider.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProcess.BlockIndex}, {\b SAPTeam.Kryptor.CryptoProcess.ChunkIndex}, {\b SAPTeam.Kryptor.CryptoProvider.Configuration}, {\b SAPTeam.Kryptor.CryptoProvider.DecryptChunkAsync()}, {\b SAPTeam.Kryptor.CryptoProvider.DecryptionChunkSize}, {\b SAPTeam.Kryptor.CryptoProviderConfiguration.DynamicBlockProccessing}, and {\b SAPTeam.Kryptor.CryptoProviderConfiguration.RemoveHash}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.DecryptBlockAsync()}.}\par
}
{\xe \v DecryptChunkAsync\:SAPTeam.Kryptor.CryptoProvider}
{\xe \v SAPTeam.Kryptor.CryptoProvider\:DecryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProvider.DecryptChunkAsync (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [abstract]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts chunk of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chunk} \cell }{The raw encrypted data chunk.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Decrypted data chunk.\par
}}}{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProvider.DecryptBlockAsync()}.}\par
}
{\xe \v EncryptBlockAsync\:SAPTeam.Kryptor.CryptoProvider}
{\xe \v SAPTeam.Kryptor.CryptoProvider\:EncryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual async Task< byte[]> SAPTeam.Kryptor.CryptoProvider.EncryptBlockAsync (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Encrypted data block.\par
}}}{
Reimplemented in {\b SAPTeam.Kryptor.CryptoProviders.DynamicEncryption} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 108} of file {\b CryptoProvider.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProcess.BlockHash}, {\b SAPTeam.Kryptor.CryptoProcess.BlockIndex}, {\b SAPTeam.Kryptor.CryptoProcess.ChunkIndex}, {\b SAPTeam.Kryptor.CryptoProvider.Configuration}, {\b SAPTeam.Kryptor.CryptoProviderConfiguration.DynamicBlockProccessing}, {\b SAPTeam.Kryptor.CryptoProvider.EncryptChunkAsync()}, and {\b SAPTeam.Kryptor.CryptoProvider.EncryptionChunkSize}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.EncryptBlockAsync()}.}\par
}
{\xe \v EncryptChunkAsync\:SAPTeam.Kryptor.CryptoProvider}
{\xe \v SAPTeam.Kryptor.CryptoProvider\:EncryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProvider.EncryptChunkAsync (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [abstract]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts chunk of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i chunk} \cell }{The raw data chunk.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Encrypted data chunk.\par
}}}{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProvider.EncryptBlockAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Configuration\:SAPTeam.Kryptor.CryptoProvider}
{\xe \v SAPTeam.Kryptor.CryptoProvider\:Configuration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CryptoProviderConfiguration} SAPTeam.Kryptor.CryptoProvider.Configuration{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of this crypto provider instance. }}\par
{
Definition at line {\b 27} of file {\b CryptoProvider.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProvider.ApplyHeader()}, {\b SAPTeam.Kryptor.CryptoProviders.TransformedKey.ApplyHeader()}, {\b SAPTeam.Kryptor.CryptoProviders.TransformedParameters.ApplyHeader()}, {\b SAPTeam.Kryptor.CryptoProvider.DecryptBlockAsync()}, and {\b SAPTeam.Kryptor.CryptoProvider.EncryptBlockAsync()}.}\par
}
{\xe \v DecryptionChunkSize\:SAPTeam.Kryptor.CryptoProvider}
{\xe \v SAPTeam.Kryptor.CryptoProvider\:DecryptionChunkSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int SAPTeam.Kryptor.CryptoProvider.DecryptionChunkSize{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Decryption Chunk Size. }}\par
{
Definition at line {\b 15} of file {\b CryptoProvider.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProvider.DecryptBlockAsync()}.}\par
}
{\xe \v EncryptionChunkSize\:SAPTeam.Kryptor.CryptoProvider}
{\xe \v SAPTeam.Kryptor.CryptoProvider\:EncryptionChunkSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int SAPTeam.Kryptor.CryptoProvider.EncryptionChunkSize{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Encryption Chunk Size. }}\par
{
Definition at line {\b 20} of file {\b CryptoProvider.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProvider.EncryptBlockAsync()}.}\par
}
{\xe \v KeyStore\:SAPTeam.Kryptor.CryptoProvider}
{\xe \v SAPTeam.Kryptor.CryptoProvider\:KeyStore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KeyStore} SAPTeam.Kryptor.CryptoProvider.KeyStore{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keystore for crypto operations. }}\par
{
Definition at line {\b 47} of file {\b CryptoProvider.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProvider.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.CryptoProviderConfiguration Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.CryptoProviderConfiguration}
{\xe \v SAPTeam.Kryptor.CryptoProviderConfiguration}
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides standard to hold the crypto providers configuration. }}\par
Inheritance diagram for SAPTeam.Kryptor.CryptoProviderConfiguration:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_s_a_p_team_1_1_kryptor_1_1_crypto_provider_configuration.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b Clone} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Equals} ({\b CryptoProviderConfiguration} other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b Equals} (object obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override int {\b GetHashCode} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Id}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the crypto provider identifier/hint. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b Continuous}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of continuous encryption method. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b RemoveHash}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of remove hash feature. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b DynamicBlockProccessing}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of dynamic block processing feature. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides standard to hold the crypto providers configuration. \par
}{
Definition at line {\b 6} of file {\b CryptoProviderConfiguration.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clone\:SAPTeam.Kryptor.CryptoProviderConfiguration}
{\xe \v SAPTeam.Kryptor.CryptoProviderConfiguration\:Clone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object SAPTeam.Kryptor.CryptoProviderConfiguration.Clone ()}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v Equals\:SAPTeam.Kryptor.CryptoProviderConfiguration}
{\xe \v SAPTeam.Kryptor.CryptoProviderConfiguration\:Equals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.CryptoProviderConfiguration.Equals ({\b CryptoProviderConfiguration} other)}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 32} of file {\b CryptoProviderConfiguration.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProviderConfiguration.Continuous}, {\b SAPTeam.Kryptor.CryptoProviderConfiguration.DynamicBlockProccessing}, {\b SAPTeam.Kryptor.CryptoProviderConfiguration.Id}, and {\b SAPTeam.Kryptor.CryptoProviderConfiguration.RemoveHash}.}\par
}
{\xe \v Equals\:SAPTeam.Kryptor.CryptoProviderConfiguration}
{\xe \v SAPTeam.Kryptor.CryptoProviderConfiguration\:Equals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool SAPTeam.Kryptor.CryptoProviderConfiguration.Equals (object obj)}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v GetHashCode\:SAPTeam.Kryptor.CryptoProviderConfiguration}
{\xe \v SAPTeam.Kryptor.CryptoProviderConfiguration\:GetHashCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override int SAPTeam.Kryptor.CryptoProviderConfiguration.GetHashCode ()}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 44} of file {\b CryptoProviderConfiguration.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProviderConfiguration.Continuous}, {\b SAPTeam.Kryptor.CryptoProviderConfiguration.DynamicBlockProccessing}, {\b SAPTeam.Kryptor.CryptoProviderConfiguration.Id}, and {\b SAPTeam.Kryptor.CryptoProviderConfiguration.RemoveHash}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Continuous\:SAPTeam.Kryptor.CryptoProviderConfiguration}
{\xe \v SAPTeam.Kryptor.CryptoProviderConfiguration\:Continuous}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool SAPTeam.Kryptor.CryptoProviderConfiguration.Continuous{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of continuous encryption method. }}\par
{
Definition at line {\b 16} of file {\b CryptoProviderConfiguration.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProviderConfiguration.Equals()}, and {\b SAPTeam.Kryptor.CryptoProviderConfiguration.GetHashCode()}.}\par
}
{\xe \v DynamicBlockProccessing\:SAPTeam.Kryptor.CryptoProviderConfiguration}
{\xe \v SAPTeam.Kryptor.CryptoProviderConfiguration\:DynamicBlockProccessing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool SAPTeam.Kryptor.CryptoProviderConfiguration.DynamicBlockProccessing{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of dynamic block processing feature. }}\par
{
Definition at line {\b 26} of file {\b CryptoProviderConfiguration.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProvider.DecryptBlockAsync()}, {\b SAPTeam.Kryptor.CryptoProvider.EncryptBlockAsync()}, {\b SAPTeam.Kryptor.CryptoProviderConfiguration.Equals()}, and {\b SAPTeam.Kryptor.CryptoProviderConfiguration.GetHashCode()}.}\par
}
{\xe \v Id\:SAPTeam.Kryptor.CryptoProviderConfiguration}
{\xe \v SAPTeam.Kryptor.CryptoProviderConfiguration\:Id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.CryptoProviderConfiguration.Id{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the crypto provider identifier/hint. }}\par
{
Definition at line {\b 11} of file {\b CryptoProviderConfiguration.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProviderConfiguration.Equals()}, and {\b SAPTeam.Kryptor.CryptoProviderConfiguration.GetHashCode()}.}\par
}
{\xe \v RemoveHash\:SAPTeam.Kryptor.CryptoProviderConfiguration}
{\xe \v SAPTeam.Kryptor.CryptoProviderConfiguration\:RemoveHash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool SAPTeam.Kryptor.CryptoProviderConfiguration.RemoveHash{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of remove hash feature. }}\par
{
Definition at line {\b 21} of file {\b CryptoProviderConfiguration.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.CryptoProviders.TransformedKey.ApplyHeader()}, {\b SAPTeam.Kryptor.CryptoProviders.TransformedParameters.ApplyHeader()}, {\b SAPTeam.Kryptor.CryptoProvider.DecryptBlockAsync()}, {\b SAPTeam.Kryptor.CryptoProviderConfiguration.Equals()}, and {\b SAPTeam.Kryptor.CryptoProviderConfiguration.GetHashCode()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Generators.CryptoRandom Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom}
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A random number generator based on the RNGCryptoServiceProvider. Adapted from the "Tales from the CryptoRandom" article in MSDN Magazine (September 2007) but with explicit guarantee to be thread safe. Note that this implementation also includes an optional (enabled by default) random buffer which provides a significant speed boost as it greatly reduces the amount of calls into unmanaged land. }}\par
Inheritance diagram for SAPTeam.Kryptor.Generators.CryptoRandom:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d20/class_s_a_p_team_1_1_kryptor_1_1_generators_1_1_crypto_random.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoRandom} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b CryptoRandom} class with. Using this overload will enable the random buffer pool. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoRandom} (int ignoredSeed)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b CryptoRandom} class. This method will disregard whatever value is passed as seed and it's only implemented in order to be fully backwards compatible with System.Random. Using this overload will enable the random buffer pool. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoRandom} (bool enableRandomPool)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b CryptoRandom} class with optional random buffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Generate} (byte[] buffer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with random values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override int {\b Next} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a nonnegative random number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override int {\b Next} (int maxValue)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a nonnegative random number less than the specified maximum. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override int {\b Next} (int minValue, int maxValue)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a random number within a specified range. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override double {\b NextDouble} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a random number between 0.0 and 1.0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b NextBytes} (byte[] buffer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the elements of a specified array of bytes with random numbers. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.IGenerator}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b CryptoRandom} {\b Instance} = new {\b CryptoRandom}(){\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an static shared instance of the {\b CryptoRandom} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRandomPoolEnabled}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether this instance has random pool enabled. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Helpers.IProgressReport}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggered when the work progress is changed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A random number generator based on the RNGCryptoServiceProvider. Adapted from the "Tales from the CryptoRandom" article in MSDN Magazine (September 2007) but with explicit guarantee to be thread safe. Note that this implementation also includes an optional (enabled by default) random buffer which provides a significant speed boost as it greatly reduces the amount of calls into unmanaged land. \par
}{
Definition at line {\b 13} of file {\b CryptoRandom.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CryptoRandom\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:CryptoRandom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Generators.CryptoRandom.CryptoRandom ()}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b CryptoRandom} class with. Using this overload will enable the random buffer pool. }}\par
{
Definition at line {\b 42} of file {\b CryptoRandom.cs}.}\par
}
{\xe \v CryptoRandom\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:CryptoRandom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Generators.CryptoRandom.CryptoRandom (int ignoredSeed)}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b CryptoRandom} class. This method will disregard whatever value is passed as seed and it's only implemented in order to be fully backwards compatible with System.Random. Using this overload will enable the random buffer pool. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ignoredSeed} \cell }{The ignored seed.\cell }
{\row }
}
}{
Definition at line {\b 52} of file {\b CryptoRandom.cs}.}\par
}
{\xe \v CryptoRandom\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:CryptoRandom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Generators.CryptoRandom.CryptoRandom (bool enableRandomPool)}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b CryptoRandom} class with optional random buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i enableRandomPool} \cell }{set to {\f2 true}  to enable the random pool buffer for increased performance.\cell }
{\row }
}
}{
\ql
References {\b SAPTeam.Kryptor.Generators.CryptoRandom.IsRandomPoolEnabled}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Generate\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:Generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Generators.CryptoRandom.Generate (byte[] buffer)}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with random values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
}
 }}\par
{
Implements {\b SAPTeam.Kryptor.IGenerator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 79} of file {\b CryptoRandom.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Generators.CryptoRandom.NextBytes()}, and {\b SAPTeam.Kryptor.Generators.CryptoRandom.ProgressChanged}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}.}\par
}
{\xe \v Next\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:Next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override int SAPTeam.Kryptor.Generators.CryptoRandom.Next ()}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a nonnegative random number. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A 32-bit signed integer greater than or equal to zero and less than F:System.Int32.MaxValue. \par
}}}{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.CollectEntropy()}.}\par
}
{\xe \v Next\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:Next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override int SAPTeam.Kryptor.Generators.CryptoRandom.Next (int maxValue)}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a nonnegative random number less than the specified maximum. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i maxValue} \cell }{The exclusive upper bound of the random number to be generated. {\i maxValue}   must be greater than or equal to zero.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A 32-bit signed integer greater than or equal to zero, and less than {\i maxValue}  ; that is, the range of return values ordinarily includes zero but not {\i maxValue}  . However, if {\i maxValue}   equals zero, {\i maxValue}   is returned. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T:System.ArgumentOutOfRangeException} \cell }{{\i maxValue}   is less than zero. \cell }
{\row }
}
}}
{\xe \v Next\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:Next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override int SAPTeam.Kryptor.Generators.CryptoRandom.Next (int minValue, int maxValue)}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a random number within a specified range. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i minValue} \cell }{The inclusive lower bound of the random number returned.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i maxValue} \cell }{The exclusive upper bound of the random number returned. {\i maxValue}   must be greater than or equal to {\i minValue}  .\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A 32-bit signed integer greater than or equal to {\i minValue}   and less than {\i maxValue}  ; that is, the range of return values includes {\i minValue}   but not {\i maxValue}  . If {\i minValue}   equals {\i maxValue}  , {\i minValue}   is returned. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T:System.ArgumentOutOfRangeException} \cell }{{\i minValue}   is greater than {\i maxValue}  . \cell }
{\row }
}
}{
Definition at line {\b 131} of file {\b CryptoRandom.cs}.}\par
}
{\xe \v NextBytes\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:NextBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Generators.CryptoRandom.NextBytes (byte[] buffer)}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the elements of a specified array of bytes with random numbers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{An array of bytes to contain random numbers.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T:System.ArgumentNullException} \cell }{{\i buffer}   is null. \cell }
{\row }
}
}{
Definition at line {\b 168} of file {\b CryptoRandom.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Generators.CryptoRandom.IsRandomPoolEnabled}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Generators.CryptoRandom.Generate()}.}\par
}
{\xe \v NextDouble\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:NextDouble}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override double SAPTeam.Kryptor.Generators.CryptoRandom.NextDouble ()}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a random number between 0.0 and 1.0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A double-precision floating point number greater than or equal to 0.0, and less than 1.0. \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Instance\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:Instance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CryptoRandom} SAPTeam.Kryptor.Generators.CryptoRandom.Instance = new {\b CryptoRandom}(){\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an static shared instance of the {\b CryptoRandom} class. }}\par
{
Definition at line {\b 25} of file {\b CryptoRandom.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}.}\par
}
{\xe \v IsRandomPoolEnabled\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:IsRandomPoolEnabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Generators.CryptoRandom.IsRandomPoolEnabled{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a value indicating whether this instance has random pool enabled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 true}  if this instance has random pool enabled; otherwise, {\f2 false} . \par
}{
Definition at line {\b 33} of file {\b CryptoRandom.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Generators.CryptoRandom.CryptoRandom()}, and {\b SAPTeam.Kryptor.Generators.CryptoRandom.NextBytes()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v ProgressChanged\:SAPTeam.Kryptor.Generators.CryptoRandom}
{\xe \v SAPTeam.Kryptor.Generators.CryptoRandom\:ProgressChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<double> SAPTeam.Kryptor.Generators.CryptoRandom.ProgressChanged}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 36} of file {\b CryptoRandom.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Generators.CryptoRandom.Generate()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoRandom.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.DataProcessingOptions Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.DataProcessingOptions}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptions}
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BlockSize}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Provider}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Continuous}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b RemoveHash}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DynamicBlockProcessing}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b OutputPath}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b KeyStore}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b Files}{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b DataProcessingOptions.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v BlockSize\:SAPTeam.Kryptor.Cli.DataProcessingOptions}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptions\:BlockSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Cli.DataProcessingOptions.BlockSize{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b DataProcessingOptions.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}.}\par
}
{\xe \v Continuous\:SAPTeam.Kryptor.Cli.DataProcessingOptions}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptions\:Continuous}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.DataProcessingOptions.Continuous{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b DataProcessingOptions.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}.}\par
}
{\xe \v DynamicBlockProcessing\:SAPTeam.Kryptor.Cli.DataProcessingOptions}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptions\:DynamicBlockProcessing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.DataProcessingOptions.DynamicBlockProcessing{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b DataProcessingOptions.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}.}\par
}
{\xe \v Files\:SAPTeam.Kryptor.Cli.DataProcessingOptions}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptions\:Files}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string [] SAPTeam.Kryptor.Cli.DataProcessingOptions.Files{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b DataProcessingOptions.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}.}\par
}
{\xe \v KeyStore\:SAPTeam.Kryptor.Cli.DataProcessingOptions}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptions\:KeyStore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.DataProcessingOptions.KeyStore{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b DataProcessingOptions.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}.}\par
}
{\xe \v OutputPath\:SAPTeam.Kryptor.Cli.DataProcessingOptions}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptions\:OutputPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.DataProcessingOptions.OutputPath{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b DataProcessingOptions.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}.}\par
}
{\xe \v Provider\:SAPTeam.Kryptor.Cli.DataProcessingOptions}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptions\:Provider}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.DataProcessingOptions.Provider{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b DataProcessingOptions.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}.}\par
}
{\xe \v RemoveHash\:SAPTeam.Kryptor.Cli.DataProcessingOptions}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptions\:RemoveHash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.DataProcessingOptions.RemoveHash{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b DataProcessingOptions.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DataProcessingOptions.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder}
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
Inheritance diagram for SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d10/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_data_processing_options_binder.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DataProcessingOptionsBinder} (Option< int > blockSize, Option< string > provider, Option< bool > continuous, Option< bool > removeHash, Option< bool > dbp, Option< string > outputPath, Option< string > keyStore, Argument< IEnumerable< string > > files)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b DataProcessingOptions} {\b GetBoundValue} (BindingContext bindingContext)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 18} of file {\b DataProcessingOptions.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DataProcessingOptionsBinder\:SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder\:DataProcessingOptionsBinder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder.DataProcessingOptionsBinder (Option< int > blockSize, Option< string > provider, Option< bool > continuous, Option< bool > removeHash, Option< bool > dbp, Option< string > outputPath, Option< string > keyStore, Argument< IEnumerable< string > > files)}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b DataProcessingOptions.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetBoundValue\:SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder\:GetBoundValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b DataProcessingOptions} SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder.GetBoundValue (BindingContext bindingContext){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b DataProcessingOptions.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DataProcessingOptions.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.DataProcessingSessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
Inheritance diagram for SAPTeam.Kryptor.Cli.DataProcessingSessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d83/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_data_processing_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DataProcessingSessionHost} ({\b GlobalOptions} globalOptions, {\b DataProcessingOptions} options)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b GetSmartProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EnumerateFiles} (Action< string, string > action)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b GetRelativePath} (string relativeTo, string path)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly string {\b KeystoreString}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BlockSize}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b OutputPath}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b DataProcessingSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DataProcessingSessionHost\:SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost\:DataProcessingSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost ({\b GlobalOptions} globalOptions, {\b DataProcessingOptions} options)}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b DataProcessingSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.DataProcessingOptions.BlockSize}, {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.BlockSize}, {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.Configuration}, {\b SAPTeam.Kryptor.Cli.DataProcessingOptions.Continuous}, {\b SAPTeam.Kryptor.Cli.DataProcessingOptions.DynamicBlockProcessing}, {\b SAPTeam.Kryptor.Cli.DataProcessingOptions.Files}, {\b SAPTeam.Kryptor.Cli.DataProcessingOptions.KeyStore}, {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.KeystoreString}, {\b SAPTeam.Kryptor.Cli.DataProcessingOptions.OutputPath}, {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.OutputPath}, {\b SAPTeam.Kryptor.Cli.DataProcessingOptions.Provider}, and {\b SAPTeam.Kryptor.Cli.DataProcessingOptions.RemoveHash}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v EnumerateFiles\:SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost\:EnumerateFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.DataProcessingSessionHost.EnumerateFiles (Action< string, string > action)}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 62} of file {\b DataProcessingSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.GetRelativePath()}, and {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.OutputPath}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DecryptionSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}.}\par
}
{\xe \v GetRelativePath\:SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost\:GetRelativePath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string SAPTeam.Kryptor.Cli.DataProcessingSessionHost.GetRelativePath (string relativeTo, string path){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b DataProcessingSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.EnumerateFiles()}.}\par
}
{\xe \v GetSmartProgress\:SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost\:GetSmartProgress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task SAPTeam.Kryptor.Cli.DataProcessingSessionHost.GetSmartProgress ({\b SessionGroup} sessionGroup)}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 47} of file {\b DataProcessingSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionGroup.Count}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored()}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DecryptionSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}.}\par
}
{\xe \v Start\:SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.DataProcessingSessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 40} of file {\b DataProcessingSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.KeystoreString}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.LoadKeyStore()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v KeystoreString\:SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost\:KeystoreString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly string SAPTeam.Kryptor.Cli.DataProcessingSessionHost.KeystoreString}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b DataProcessingSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}, {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}, and {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v BlockSize\:SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost\:BlockSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Cli.DataProcessingSessionHost.BlockSize{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b DataProcessingSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}, {\b SAPTeam.Kryptor.Cli.DecryptionSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}.}\par
}
{\xe \v Configuration\:SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost\:Configuration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CryptoProviderConfiguration} SAPTeam.Kryptor.Cli.DataProcessingSessionHost.Configuration{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b DataProcessingSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}, {\b SAPTeam.Kryptor.Cli.DecryptionSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}.}\par
}
{\xe \v KeyStore\:SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost\:KeyStore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KeyStore} SAPTeam.Kryptor.Cli.DataProcessingSessionHost.KeyStore{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b DataProcessingSessionHost.cs}.}\par
}
{\xe \v OutputPath\:SAPTeam.Kryptor.Cli.DataProcessingSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DataProcessingSessionHost\:OutputPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.DataProcessingSessionHost.OutputPath{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b DataProcessingSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.DataProcessingSessionHost()}, and {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.EnumerateFiles()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DataProcessingSessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.DecryptionSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.DecryptionSession}
{\xe \v SAPTeam.Kryptor.Cli.DecryptionSession}
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
Inheritance diagram for SAPTeam.Kryptor.Cli.DecryptionSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d9e/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_decryption_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecryptionSession} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration, int blockSize, string file, string outputPath)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 5} of file {\b DecryptionSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DecryptionSession\:SAPTeam.Kryptor.Cli.DecryptionSession}
{\xe \v SAPTeam.Kryptor.Cli.DecryptionSession\:DecryptionSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.DecryptionSession.DecryptionSession ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration, int blockSize, string file, string outputPath)}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b DecryptionSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v RunAsync\:SAPTeam.Kryptor.Cli.DecryptionSession}
{\xe \v SAPTeam.Kryptor.Cli.DecryptionSession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< bool > SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b DecryptionSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Header.BlockSize}, {\b SAPTeam.Kryptor.Header.Configuration}, {\b SAPTeam.Kryptor.Kes.DecryptAsync()}, {\b SAPTeam.Kryptor.Client.Session.Description}, {\b SAPTeam.Kryptor.Client.Session.EndReason}, {\b SAPTeam.Kryptor.Client.Session.Exception}, {\b SAPTeam.Kryptor.Client.ClientHeader.FileName}, {\b SAPTeam.Kryptor.Client.Session.Messages}, {\b SAPTeam.Kryptor.Kes.MinimumSupportedVersion}, {\b SAPTeam.Kryptor.Client.ISessionHost.Verbose}, {\b SAPTeam.Kryptor.Header.Verbosity}, {\b SAPTeam.Kryptor.Header.Version}, and {\b SAPTeam.Kryptor.Kes.Version}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Name\:SAPTeam.Kryptor.Cli.DecryptionSession}
{\xe \v SAPTeam.Kryptor.Cli.DecryptionSession\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string SAPTeam.Kryptor.Cli.DecryptionSession.Name{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 13} of file {\b DecryptionSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecryptionSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.DecryptionSessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.DecryptionSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DecryptionSessionHost}
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
Inheritance diagram for SAPTeam.Kryptor.Cli.DecryptionSessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d00/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_decryption_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecryptionSessionHost} ({\b GlobalOptions} globalOptions, {\b DataProcessingOptions} options)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DataProcessingSessionHost} ({\b GlobalOptions} globalOptions, {\b DataProcessingOptions} options)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b GetSmartProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EnumerateFiles} (Action< string, string > action)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b GetRelativePath} (string relativeTo, string path)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Attributes inherited from {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly string {\b KeystoreString}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BlockSize}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b OutputPath}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 5} of file {\b DecryptionSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DecryptionSessionHost\:SAPTeam.Kryptor.Cli.DecryptionSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DecryptionSessionHost\:DecryptionSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.DecryptionSessionHost.DecryptionSessionHost ({\b GlobalOptions} globalOptions, {\b DataProcessingOptions} options)}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b DecryptionSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:SAPTeam.Kryptor.Cli.DecryptionSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.DecryptionSessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.DecryptionSessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 12} of file {\b DecryptionSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.BlockSize}, {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.Configuration}, {\b SAPTeam.Kryptor.Client.SessionHost.Container}, {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.EnumerateFiles()}, {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.GetSmartProgress()}, {\b SAPTeam.Kryptor.Client.SessionHost.NewSession()}, {\b SAPTeam.Kryptor.Client.SessionContainer.SetSessionGroup()}, and {\b SAPTeam.Kryptor.Client.SessionContainer.StartQueuedSessions()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DecryptionSessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.Wordlist.DownloadSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.Wordlist.DownloadSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.DownloadSession}
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
Inheritance diagram for SAPTeam.Kryptor.Cli.Wordlist.DownloadSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd2/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_wordlist_1_1_download_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DownloadSession} ({\b WordlistIndexEntry} entry, DirectoryInfo outputPath)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DownloadSession} ({\b WordlistIndexEntry} entry, FileInfo output)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DeleteCache} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FileInfo {\b OutputFile}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FileInfo {\b PackageFile}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b HashString}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 19} of file {\b DownloadSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DownloadSession\:SAPTeam.Kryptor.Cli.Wordlist.DownloadSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.DownloadSession\:DownloadSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.DownloadSession ({\b WordlistIndexEntry} entry, DirectoryInfo outputPath)}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b DownloadSession.cs}.}\par
}
{\xe \v DownloadSession\:SAPTeam.Kryptor.Cli.Wordlist.DownloadSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.DownloadSession\:DownloadSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.DownloadSession ({\b WordlistIndexEntry} entry, FileInfo output)}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b DownloadSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}, {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.HashString}, {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.OutputFile}, and {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.PackageFile}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DeleteCache\:SAPTeam.Kryptor.Cli.Wordlist.DownloadSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.DownloadSession\:DeleteCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.DeleteCache ()}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 191} of file {\b DownloadSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.OutputFile}.}\par
}
{\xe \v RunAsync\:SAPTeam.Kryptor.Cli.Wordlist.DownloadSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.DownloadSession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< bool > SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 165} of file {\b DownloadSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}, {\b SAPTeam.Kryptor.Client.Session.Exception}, {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.HashString}, and {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.PackageFile}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v HashString\:SAPTeam.Kryptor.Cli.Wordlist.DownloadSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.DownloadSession\:HashString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.HashString}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b DownloadSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.DownloadSession()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.RunAsync()}.}\par
}
{\xe \v OutputFile\:SAPTeam.Kryptor.Cli.Wordlist.DownloadSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.DownloadSession\:OutputFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FileInfo SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.OutputFile}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b DownloadSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.DeleteCache()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.DownloadSession()}.}\par
}
{\xe \v PackageFile\:SAPTeam.Kryptor.Cli.Wordlist.DownloadSession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.DownloadSession\:PackageFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FileInfo SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.PackageFile}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b DownloadSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.DownloadSession()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DownloadSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.CryptoProviders.DynamicEncryption Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.CryptoProviders.DynamicEncryption}
{\xe \v SAPTeam.Kryptor.CryptoProviders.DynamicEncryption}
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Dynamic Encryption (DE) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a dynamic key and iv generated with attention of all parameters and offers the highest security. }}\par
Inheritance diagram for SAPTeam.Kryptor.CryptoProviders.DynamicEncryption:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/de6/class_s_a_p_team_1_1_kryptor_1_1_crypto_providers_1_1_dynamic_encryption.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DynamicEncryption} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty crypto provider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DynamicEncryption} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b DynamicEncryption} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< byte[]> {\b EncryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Encrypted data block.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< byte[]> {\b DecryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw encrypted data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Decrypted data block.\par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b Clone} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< IEnumerable< byte > > {\b EncryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< IEnumerable< byte > > {\b DecryptChunkAsync} (byte[] cipher, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ApplyHeader} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new crypto provider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b EncryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts chunk of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b DecryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts chunk of data asynchronously. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Package Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b DecryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Decryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b EncryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Encryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of this crypto provider instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keystore for crypto operations. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Dynamic Encryption (DE) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a dynamic key and iv generated with attention of all parameters and offers the highest security. \par
}{
Definition at line {\b 10} of file {\b DynamicEncryption.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DynamicEncryption\:SAPTeam.Kryptor.CryptoProviders.DynamicEncryption}
{\xe \v SAPTeam.Kryptor.CryptoProviders.DynamicEncryption\:DynamicEncryption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.DynamicEncryption ()}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty crypto provider. }}\par
{
Definition at line {\b 15} of file {\b DynamicEncryption.cs}.}\par
}
{\xe \v DynamicEncryption\:SAPTeam.Kryptor.CryptoProviders.DynamicEncryption}
{\xe \v SAPTeam.Kryptor.CryptoProviders.DynamicEncryption\:DynamicEncryption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.DynamicEncryption ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration = {\f2 null})}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b DynamicEncryption} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore with at least 2 keys. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configuration} \cell }{The configuration to initialize the crypto provider \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DecryptBlockAsync\:SAPTeam.Kryptor.CryptoProviders.DynamicEncryption}
{\xe \v SAPTeam.Kryptor.CryptoProviders.DynamicEncryption\:DecryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< byte[]> SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.DecryptBlockAsync (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw encrypted data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Decrypted data block.\par
}} }}\par
{
Reimplemented from {\b SAPTeam.Kryptor.CryptoProvider} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 39} of file {\b DynamicEncryption.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProcess.ProcessData}.}\par
}
{\xe \v DecryptChunkAsync\:SAPTeam.Kryptor.CryptoProviders.DynamicEncryption}
{\xe \v SAPTeam.Kryptor.CryptoProviders.DynamicEncryption\:DecryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.DecryptChunkAsync (byte[] cipher, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProcess.BlockHash}, {\b SAPTeam.Kryptor.CryptoProcess.BlockIndex}, {\b SAPTeam.Kryptor.CryptoProcess.BlockSize}, and {\b SAPTeam.Kryptor.CryptoProcess.ProcessData}.}\par
}
{\xe \v EncryptBlockAsync\:SAPTeam.Kryptor.CryptoProviders.DynamicEncryption}
{\xe \v SAPTeam.Kryptor.CryptoProviders.DynamicEncryption\:EncryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< byte[]> SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.EncryptBlockAsync (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Encrypted data block.\par
}} }}\par
{
Reimplemented from {\b SAPTeam.Kryptor.CryptoProvider} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 32} of file {\b DynamicEncryption.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProcess.ProcessData}.}\par
}
{\xe \v EncryptChunkAsync\:SAPTeam.Kryptor.CryptoProviders.DynamicEncryption}
{\xe \v SAPTeam.Kryptor.CryptoProviders.DynamicEncryption\:EncryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProviders.DynamicEncryption.EncryptChunkAsync (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DynamicEncryption.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.EncryptionSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.EncryptionSession}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSession}
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
Inheritance diagram for SAPTeam.Kryptor.Cli.EncryptionSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d4f/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_encryption_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EncryptionSession} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration, int blockSize, int hVerbose, string file, string outputPath)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientHeader} {\b Header}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b EncryptionSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EncryptionSession\:SAPTeam.Kryptor.Cli.EncryptionSession}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSession\:EncryptionSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.EncryptionSession.EncryptionSession ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration, int blockSize, int hVerbose, string file, string outputPath)}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b EncryptionSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v RunAsync\:SAPTeam.Kryptor.Cli.EncryptionSession}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< bool > SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b EncryptionSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.KeyChainCollection.Add()}, {\b SAPTeam.Kryptor.Cli.CliHeader.Create()}, {\b SAPTeam.Kryptor.Client.Session.Description}, {\b SAPTeam.Kryptor.Client.Session.EndReason}, {\b SAPTeam.Kryptor.Client.Session.Exception}, {\b SAPTeam.Kryptor.Generators.CryptoRandom.Generate()}, {\b SAPTeam.Kryptor.Client.ClientHeader.GenerateSerial()}, {\b SAPTeam.Kryptor.Generators.CryptoRandom.Instance}, {\b SAPTeam.Kryptor.TransformerToken.IsValid()}, {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.KeyChainCollection}, {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.KeystoreString}, {\b SAPTeam.Kryptor.Client.Session.Messages}, {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Obfuscate}, {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.UseKeyChain}, and {\b SAPTeam.Kryptor.Client.SessionHost.Verbose}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Header\:SAPTeam.Kryptor.Cli.EncryptionSession}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSession\:Header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ClientHeader} SAPTeam.Kryptor.Cli.EncryptionSession.Header{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b EncryptionSession.cs}.}\par
}
{\xe \v Name\:SAPTeam.Kryptor.Cli.EncryptionSession}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSession\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string SAPTeam.Kryptor.Cli.EncryptionSession.Name{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 15} of file {\b EncryptionSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EncryptionSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.EncryptionSessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.EncryptionSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSessionHost}
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
Inheritance diagram for SAPTeam.Kryptor.Cli.EncryptionSessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d36/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_encryption_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EncryptionSessionHost} ({\b GlobalOptions} globalOptions, {\b DataProcessingOptions} options, int hVerbose, string keyChainPath, bool obfuscate)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DataProcessingSessionHost} ({\b GlobalOptions} globalOptions, {\b DataProcessingOptions} options)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b GetSmartProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EnumerateFiles} (Action< string, string > action)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b HeaderVerbosity}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b KeyChainPath}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b UseKeyChain}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyChainCollection} {\b KeyChainCollection}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Obfuscate}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BlockSize}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b OutputPath}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b GetRelativePath} (string relativeTo, string path)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Attributes inherited from {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly string {\b KeystoreString}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 5} of file {\b EncryptionSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EncryptionSessionHost\:SAPTeam.Kryptor.Cli.EncryptionSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSessionHost\:EncryptionSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.EncryptionSessionHost.EncryptionSessionHost ({\b GlobalOptions} globalOptions, {\b DataProcessingOptions} options, int hVerbose, string keyChainPath, bool obfuscate)}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b EncryptionSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.KeyChainPath}, {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Obfuscate}, and {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.UseKeyChain}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:SAPTeam.Kryptor.Cli.EncryptionSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 21} of file {\b EncryptionSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.BlockSize}, {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.Configuration}, {\b SAPTeam.Kryptor.Client.SessionHost.Container}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.DebugLog()}, {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.EnumerateFiles()}, {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.GetSmartProgress()}, {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.KeyChainCollection}, {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.KeyChainPath}, {\b SAPTeam.Kryptor.Client.SessionHost.NewSession()}, {\b SAPTeam.Kryptor.Client.KeyChainCollection.Save()}, {\b SAPTeam.Kryptor.Client.SessionContainer.SetSessionGroup()}, {\b SAPTeam.Kryptor.Client.SessionContainer.StartQueuedSessions()}, and {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.UseKeyChain}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v HeaderVerbosity\:SAPTeam.Kryptor.Cli.EncryptionSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSessionHost\:HeaderVerbosity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Cli.EncryptionSessionHost.HeaderVerbosity{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b EncryptionSessionHost.cs}.}\par
}
{\xe \v KeyChainCollection\:SAPTeam.Kryptor.Cli.EncryptionSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSessionHost\:KeyChainCollection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KeyChainCollection} SAPTeam.Kryptor.Cli.EncryptionSessionHost.KeyChainCollection{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b EncryptionSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}, and {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}.}\par
}
{\xe \v KeyChainPath\:SAPTeam.Kryptor.Cli.EncryptionSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSessionHost\:KeyChainPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.EncryptionSessionHost.KeyChainPath{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b EncryptionSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.EncryptionSessionHost()}, and {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}.}\par
}
{\xe \v Obfuscate\:SAPTeam.Kryptor.Cli.EncryptionSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSessionHost\:Obfuscate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.EncryptionSessionHost.Obfuscate{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b EncryptionSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.EncryptionSessionHost()}, and {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}.}\par
}
{\xe \v UseKeyChain\:SAPTeam.Kryptor.Cli.EncryptionSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.EncryptionSessionHost\:UseKeyChain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.EncryptionSessionHost.UseKeyChain{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b EncryptionSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.EncryptionSessionHost()}, {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}, and {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EncryptionSessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Generators.EntroX Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Generators.EntroX}
{\xe \v SAPTeam.Kryptor.Generators.EntroX}
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random data reinforced by the entropies. }}\par
Inheritance diagram for SAPTeam.Kryptor.Generators.EntroX:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d7c/class_s_a_p_team_1_1_kryptor_1_1_generators_1_1_entro_x.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EntroX} (params byte[][] entropies)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b EntroX} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Generate} (byte[] buffer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with random values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
}
 }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.IGenerator}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b AddEntropy} (byte[] data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds new entropies to the global entropy in random order. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b EntroX} {\b Instance}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an static shared instance of the {\b EntroX} class. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Helpers.IProgressReport}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggered when the work progress is changed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random data reinforced by the entropies. \par
}{
Definition at line {\b 8} of file {\b EntroX.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EntroX\:SAPTeam.Kryptor.Generators.EntroX}
{\xe \v SAPTeam.Kryptor.Generators.EntroX\:EntroX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Generators.EntroX.EntroX (params byte entropies[][])}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b EntroX} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i entropies} \cell }{The entropy data to randomly spread in the global entropy to improve randomness. \cell }
{\row }
}
}{
Definition at line {\b 38} of file {\b EntroX.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddEntropy\:SAPTeam.Kryptor.Generators.EntroX}
{\xe \v SAPTeam.Kryptor.Generators.EntroX\:AddEntropy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SAPTeam.Kryptor.Generators.EntroX.AddEntropy (byte[] data){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds new entropies to the global entropy in random order. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The entropy data to randomly spread in the global entropy to improve randomness. \cell }
{\row }
}
}{
Definition at line {\b 112} of file {\b EntroX.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.CollectEntropy()}, and {\b SAPTeam.Kryptor.Client.ClientContext.CreateContext()}.}\par
}
{\xe \v Generate\:SAPTeam.Kryptor.Generators.EntroX}
{\xe \v SAPTeam.Kryptor.Generators.EntroX\:Generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Generators.EntroX.Generate (byte[] buffer)}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with random values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
}
 }}\par
{
Implements {\b SAPTeam.Kryptor.IGenerator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 49} of file {\b EntroX.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Generators.EntroX.ProgressChanged}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Instance\:SAPTeam.Kryptor.Generators.EntroX}
{\xe \v SAPTeam.Kryptor.Generators.EntroX\:Instance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EntroX} SAPTeam.Kryptor.Generators.EntroX.Instance{\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an static shared instance of the {\b EntroX} class. }}\par
{
Definition at line {\b 30} of file {\b EntroX.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v ProgressChanged\:SAPTeam.Kryptor.Generators.EntroX}
{\xe \v SAPTeam.Kryptor.Generators.EntroX\:ProgressChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<double> SAPTeam.Kryptor.Generators.EntroX.ProgressChanged}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 15} of file {\b EntroX.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Generators.EntroX.Generate()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EntroX.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.FileSaveSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.FileSaveSession}
{\xe \v SAPTeam.Kryptor.Cli.FileSaveSession}
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
Inheritance diagram for SAPTeam.Kryptor.Cli.FileSaveSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d19/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_file_save_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileSaveSession} (string filePath, byte[] data)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b FilePath}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b Data}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b FileSaveSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FileSaveSession\:SAPTeam.Kryptor.Cli.FileSaveSession}
{\xe \v SAPTeam.Kryptor.Cli.FileSaveSession\:FileSaveSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.FileSaveSession.FileSaveSession (string filePath, byte[] data)}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b FileSaveSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}, and {\b SAPTeam.Kryptor.Cli.FileSaveSession.FilePath}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v RunAsync\:SAPTeam.Kryptor.Cli.FileSaveSession}
{\xe \v SAPTeam.Kryptor.Cli.FileSaveSession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< bool > SAPTeam.Kryptor.Cli.FileSaveSession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b FileSaveSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}, and {\b SAPTeam.Kryptor.Cli.FileSaveSession.FilePath}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Data\:SAPTeam.Kryptor.Cli.FileSaveSession}
{\xe \v SAPTeam.Kryptor.Cli.FileSaveSession\:Data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] SAPTeam.Kryptor.Cli.FileSaveSession.Data{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b FileSaveSession.cs}.}\par
}
{\xe \v FilePath\:SAPTeam.Kryptor.Cli.FileSaveSession}
{\xe \v SAPTeam.Kryptor.Cli.FileSaveSession\:FilePath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.FileSaveSession.FilePath{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b FileSaveSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.FileSaveSession.FileSaveSession()}, and {\b SAPTeam.Kryptor.Cli.FileSaveSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileSaveSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Generators.Generica Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Generators.Generica}
{\xe \v SAPTeam.Kryptor.Generators.Generica}
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates bytes array populated from specified seed. }}\par
Inheritance diagram for SAPTeam.Kryptor.Generators.Generica:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d9c/class_s_a_p_team_1_1_kryptor_1_1_generators_1_1_generica.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Generica} (byte[] seed, byte[] salt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b Generica} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Generate} (byte[] buffer, int rotate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with generated values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rotate} \cell }{The number of changes applies to buffer after filling. \cell }
{\row }
}
 }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.ITranformer}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Helpers.IProgressReport}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggered when the work progress is changed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates bytes array populated from specified seed. \par
}{
Definition at line {\b 11} of file {\b Generica.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Generica\:SAPTeam.Kryptor.Generators.Generica}
{\xe \v SAPTeam.Kryptor.Generators.Generica\:Generica}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Generators.Generica.Generica (byte[] seed, byte[] salt)}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b Generica} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i seed} \cell }{The seed to generate values. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i salt} \cell }{The additional value to alter the seed and outputs. \cell }
{\row }
}
}{
Definition at line {\b 33} of file {\b Generica.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Generate\:SAPTeam.Kryptor.Generators.Generica}
{\xe \v SAPTeam.Kryptor.Generators.Generica\:Generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Generators.Generica.Generate (byte[] buffer, int rotate)}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with generated values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rotate} \cell }{The number of changes applies to buffer after filling. \cell }
{\row }
}
 }}\par
{
Implements {\b SAPTeam.Kryptor.ITranformer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 45} of file {\b Generica.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Generators.Generica.ProgressChanged}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v ProgressChanged\:SAPTeam.Kryptor.Generators.Generica}
{\xe \v SAPTeam.Kryptor.Generators.Generica\:ProgressChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<double> SAPTeam.Kryptor.Generators.Generica.ProgressChanged}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 22} of file {\b Generica.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Generators.Generica.Generate()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Generica.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.GlobalOptions Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.GlobalOptions}
{\xe \v SAPTeam.Kryptor.Cli.GlobalOptions}
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b GlobalOptions.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v NoColor\:SAPTeam.Kryptor.Cli.GlobalOptions}
{\xe \v SAPTeam.Kryptor.Cli.GlobalOptions\:NoColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.GlobalOptions.NoColor{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b GlobalOptions.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.CliSessionHost()}.}\par
}
{\xe \v Quiet\:SAPTeam.Kryptor.Cli.GlobalOptions}
{\xe \v SAPTeam.Kryptor.Cli.GlobalOptions\:Quiet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.GlobalOptions.Quiet{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b GlobalOptions.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.CliSessionHost()}.}\par
}
{\xe \v Verbose\:SAPTeam.Kryptor.Cli.GlobalOptions}
{\xe \v SAPTeam.Kryptor.Cli.GlobalOptions\:Verbose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.GlobalOptions.Verbose{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b GlobalOptions.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.CliSessionHost()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GlobalOptions.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.GlobalOptionsBinder Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.GlobalOptionsBinder}
{\xe \v SAPTeam.Kryptor.Cli.GlobalOptionsBinder}
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
Inheritance diagram for SAPTeam.Kryptor.Cli.GlobalOptionsBinder:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d21/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_global_options_binder.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GlobalOptionsBinder} (Option< bool > verbose, Option< bool > quiet, Option< bool > noColor)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b GlobalOptions} {\b GetBoundValue} (BindingContext bindingContext)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 13} of file {\b GlobalOptions.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v GlobalOptionsBinder\:SAPTeam.Kryptor.Cli.GlobalOptionsBinder}
{\xe \v SAPTeam.Kryptor.Cli.GlobalOptionsBinder\:GlobalOptionsBinder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.GlobalOptionsBinder.GlobalOptionsBinder (Option< bool > verbose, Option< bool > quiet, Option< bool > noColor)}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b GlobalOptions.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetBoundValue\:SAPTeam.Kryptor.Cli.GlobalOptionsBinder}
{\xe \v SAPTeam.Kryptor.Cli.GlobalOptionsBinder\:GetBoundValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b GlobalOptions} SAPTeam.Kryptor.Cli.GlobalOptionsBinder.GetBoundValue (BindingContext bindingContext){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b GlobalOptions.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GlobalOptions.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Header Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Header}
{\xe \v SAPTeam.Kryptor.Header}
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the data header. }}\par
Inheritance diagram for SAPTeam.Kryptor.Header:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d69/class_s_a_p_team_1_1_kryptor_1_1_header.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b CreatePayload} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exports the header contents as base64 encoded bytes array. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static T {\b ReadHeader< T >} (Stream stream)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads the KES header of stream and skips the header area. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Version {\b Version}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the version of the encryptor api backend. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Version} {\b EngineVersion}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the version of the encryptor engine. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HeaderVerbosity} {\b Verbosity}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the amount of details included in this header. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BlockSize}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the file block size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the crypto provider configuration. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b Extra}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the extra header entries. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the data header. \par
}{
Definition at line {\b 11} of file {\b Header.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreatePayload\:SAPTeam.Kryptor.Header}
{\xe \v SAPTeam.Kryptor.Header\:CreatePayload}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte[] SAPTeam.Kryptor.Header.CreatePayload ()}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exports the header contents as base64 encoded bytes array. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i OverflowException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 61} of file {\b Header.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.EncryptAsync()}.}\par
}
{\xe \v ReadHeader< T >\:SAPTeam.Kryptor.Header}
{\xe \v SAPTeam.Kryptor.Header\:ReadHeader< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static T SAPTeam.Kryptor.Header.ReadHeader< T > (Stream stream){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads the KES header of stream and skips the header area. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i stream} \cell }{The data stream. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new instance of the {\b Header} class. \par
}}}{{{\b Type Constraints}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\i T} : {\i Header} \par
{\i T} : {\i new()} \par
\par
}{
Definition at line {\b 83} of file {\b Header.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Header.Verbosity}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v BlockSize\:SAPTeam.Kryptor.Header}
{\xe \v SAPTeam.Kryptor.Header\:BlockSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Header.BlockSize{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the file block size. }}\par
{
Definition at line {\b 44} of file {\b Header.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}.}\par
}
{\xe \v Configuration\:SAPTeam.Kryptor.Header}
{\xe \v SAPTeam.Kryptor.Header\:Configuration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CryptoProviderConfiguration} SAPTeam.Kryptor.Header.Configuration{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the crypto provider configuration. }}\par
{
Definition at line {\b 49} of file {\b Header.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}, and {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.Start()}.}\par
}
{\xe \v EngineVersion\:SAPTeam.Kryptor.Header}
{\xe \v SAPTeam.Kryptor.Header\:EngineVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Version} SAPTeam.Kryptor.Header.EngineVersion{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the version of the encryptor engine. }}\par
{
Definition at line {\b 34} of file {\b Header.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.DecryptAsync()}.}\par
}
{\xe \v Extra\:SAPTeam.Kryptor.Header}
{\xe \v SAPTeam.Kryptor.Header\:Extra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, string> SAPTeam.Kryptor.Header.Extra{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the extra header entries. }}\par
{
Definition at line {\b 54} of file {\b Header.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliHeader.Create()}, and {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.Start()}.}\par
}
{\xe \v Verbosity\:SAPTeam.Kryptor.Header}
{\xe \v SAPTeam.Kryptor.Header\:Verbosity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HeaderVerbosity} SAPTeam.Kryptor.Header.Verbosity{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the amount of details included in this header. }}\par
{
Definition at line {\b 39} of file {\b Header.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.EncryptAsync()}, {\b SAPTeam.Kryptor.Header.ReadHeader< T >()}, {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}, and {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.Start()}.}\par
}
{\xe \v Version\:SAPTeam.Kryptor.Header}
{\xe \v SAPTeam.Kryptor.Header\:Version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Version SAPTeam.Kryptor.Header.Version{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the version of the encryptor api backend. }}\par
{
Definition at line {\b 29} of file {\b Header.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliHeader.Create()}, {\b SAPTeam.Kryptor.Kes.DecryptAsync()}, and {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Header.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.HeaderReaderSessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.HeaderReaderSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.HeaderReaderSessionHost}
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
Inheritance diagram for SAPTeam.Kryptor.Cli.HeaderReaderSessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d3d/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_header_reader_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HeaderReaderSessionHost}({\b GlobalOptions} globalOptions, string filePath) override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b FilePath}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 5} of file {\b HeaderReaderSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:SAPTeam.Kryptor.Cli.HeaderReaderSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.HeaderReaderSessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HeaderReaderSessionHost}({\b GlobalOptions} globalOptions, string filePath) override void SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 11} of file {\b HeaderReaderSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Header.Configuration}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.DebugLog()}, {\b SAPTeam.Kryptor.Header.Extra}, {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.FilePath}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.Log()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.LogError()}, {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.Start()}, {\b SAPTeam.Kryptor.Client.SessionHost.Verbose}, and {\b SAPTeam.Kryptor.Header.Verbosity}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v FilePath\:SAPTeam.Kryptor.Cli.HeaderReaderSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.HeaderReaderSessionHost\:FilePath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.FilePath}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b HeaderReaderSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HeaderReaderSessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.IGenerator Interface Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.IGenerator}
{\xe \v SAPTeam.Kryptor.IGenerator}
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents standard to generate random output. }}\par
Inheritance diagram for SAPTeam.Kryptor.IGenerator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d0c/interface_s_a_p_team_1_1_kryptor_1_1_i_generator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Generate} (byte[] buffer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with random values. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Helpers.IProgressReport}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggered when the work progress is changed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents standard to generate random output. \par
}{
Definition at line {\b 8} of file {\b IGenerator.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Generate\:SAPTeam.Kryptor.IGenerator}
{\xe \v SAPTeam.Kryptor.IGenerator\:Generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.IGenerator.Generate (byte[] buffer)}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with random values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
}
}{
Implemented in {\b SAPTeam.Kryptor.Generators.CryptoRandom} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Generators.EntroX} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Generators.SafeRng} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKL \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SAPTeam.Kryptor.Generators.UnixRandom} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IGenerator.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost}
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
Inheritance diagram for SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d38/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_wordlist_1_1_import_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ImportSessionHost} ({\b GlobalOptions} globalOptions, string id, bool enforce, bool optimize, string file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FinalizeInstallation} ({\b WordlistIndexEntry} entry)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateLocalIndex} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ListInstalledWordlists} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetInstallationPermission} ({\b WordlistIndexEntry} entry)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RemoveWordlist} (string id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SortIndex} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndex} {\b LocalIndex}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b LocalIndexPath}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b ImportSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ImportSessionHost\:SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost\:ImportSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost.ImportSessionHost ({\b GlobalOptions} globalOptions, string id, bool enforce, bool optimize, string file)}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b ImportSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 26} of file {\b ImportSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.Program.Context}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.GetInstallationPermission()}, {\b SAPTeam.Kryptor.Client.SessionHost.NewSession()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.SortIndex()}, and {\b SAPTeam.Kryptor.Cli.CliContext.WordlistDirectory}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ImportSessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost}
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
Inheritance diagram for SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d1e/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_wordlist_1_1_index_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IndexSessionHost}({\b GlobalOptions} globalOptions, bool optimize, string indexPath) override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InstallSessionHost} ({\b GlobalOptions} globalOptions, bool list, bool all, bool recommended, bool optimize, string[] ids)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FinalizeInstallation} ({\b WordlistIndexEntry} entry)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b IndexBaseDir}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b LocalIndexPath}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b DownloadDir}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b InstallDir}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Uri {\b WordlistIndexUri} = new Uri("https://raw.githubusercontent.com/SAPTeamDEV/Wordlists/master/index.json"){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b DownloadDir} = Path.Combine(Program.Context.WordlistDirectory, "_cache"){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b InstallDir} = Program.Context.WordlistDirectory{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndex} {\b Index}{\f2  [get, protected set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndex} {\b LocalIndex}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b LocalIndexPath}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateLocalIndex} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ListInstalledWordlists} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetInstallationPermission} ({\b WordlistIndexEntry} entry)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RemoveWordlist} (string id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SortIndex} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 8} of file {\b IndexSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b IndexSessionHost}({\b GlobalOptions} globalOptions, bool optimize, string indexPath) override void SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 34} of file {\b IndexSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Index}, {\b SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost.IndexBaseDir}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.LocalIndex}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.Wordlists}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v DownloadDir\:SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost\:DownloadDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost.DownloadDir{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b IndexSessionHost.cs}.}\par
}
{\xe \v IndexBaseDir\:SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost\:IndexBaseDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost.IndexBaseDir{\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b IndexSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost.Start()}.}\par
}
{\xe \v InstallDir\:SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost\:InstallDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost.InstallDir{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b IndexSessionHost.cs}.}\par
}
{\xe \v LocalIndexPath\:SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost\:LocalIndexPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost.LocalIndexPath{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b IndexSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IndexSessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost}
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
Inheritance diagram for SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d4e/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_wordlist_1_1_install_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InstallSessionHost} ({\b GlobalOptions} globalOptions, bool list, bool all, bool recommended, bool optimize, string[] ids)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FinalizeInstallation} ({\b WordlistIndexEntry} entry)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Uri {\b WordlistIndexUri} = new Uri("https://raw.githubusercontent.com/SAPTeamDEV/Wordlists/master/index.json"){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b DownloadDir} = Path.Combine(Program.Context.WordlistDirectory, "_cache"){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b InstallDir} = Program.Context.WordlistDirectory{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndex} {\b Index}{\f2  [get, protected set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndex} {\b LocalIndex}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b LocalIndexPath}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateLocalIndex} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ListInstalledWordlists} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetInstallationPermission} ({\b WordlistIndexEntry} entry)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RemoveWordlist} (string id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SortIndex} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 8} of file {\b InstallSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InstallSessionHost\:SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost\:InstallSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.InstallSessionHost ({\b GlobalOptions} globalOptions, bool list, bool all, bool recommended, bool optimize, string[] ids)}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b InstallSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 40} of file {\b InstallSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.CliSessionHost.DebugLog()}, {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.DownloadDir}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Enforced}, {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Index}, {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.InstallDir}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.SortIndex()}, {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.WordlistIndexUri}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.Wordlists}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v DownloadDir\:SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost\:DownloadDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual string SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.DownloadDir = Path.Combine(Program.Context.WordlistDirectory, "_cache"){\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b InstallSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Start()}.}\par
}
{\xe \v Index\:SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost\:Index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WordlistIndex} SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Index{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b InstallSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Start()}.}\par
}
{\xe \v InstallDir\:SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost\:InstallDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual string SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.InstallDir = Program.Context.WordlistDirectory{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b InstallSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Start()}.}\par
}
{\xe \v WordlistIndexUri\:SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost\:WordlistIndexUri}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Uri SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.WordlistIndexUri = new Uri("https://raw.githubusercontent.com/SAPTeamDEV/Wordlists/master/index.json"){\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b InstallSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InstallSessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Helpers.IProgressReport Interface Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Helpers.IProgressReport}
{\xe \v SAPTeam.Kryptor.Helpers.IProgressReport}
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to report progress of works. }}\par
Inheritance diagram for SAPTeam.Kryptor.Helpers.IProgressReport:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d3c/interface_s_a_p_team_1_1_kryptor_1_1_helpers_1_1_i_progress_report.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggered when the work progress is changed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to report progress of works. \par
}{
Definition at line {\b 6} of file {\b IProgressReport.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v ProgressChanged\:SAPTeam.Kryptor.Helpers.IProgressReport}
{\xe \v SAPTeam.Kryptor.Helpers.IProgressReport\:ProgressChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<double> SAPTeam.Kryptor.Helpers.IProgressReport.ProgressChanged}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggered when the work progress is changed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Expected values are 0 - 100 and -1. -1 means unspecifed exact progress value, but the work is being done. \par
}{
Definition at line {\b 14} of file {\b IProgressReport.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IProgressReport.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.ISession Interface Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession}
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to start, monitor and control tasks. }}\par
Inheritance diagram for SAPTeam.Kryptor.Client.ISession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/dae/interface_s_a_p_team_1_1_kryptor_1_1_client_1_1_i_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Progress}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Description}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to start, monitor and control tasks. \par
}{
Definition at line {\b 8} of file {\b ISession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddDependency\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:AddDependency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.ISession.AddDependency ({\b ISession} session)}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}}}{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.ContinueWith()}.}\par
}
{\xe \v ContinueWith\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:ContinueWith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.ISession.ContinueWith ({\b ISession} session)}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
}{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v IsReady\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:IsReady}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.ISession.IsReady (CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}}}{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionGroup.Add()}.}\par
}
{\xe \v SendRequest< TResponse >\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:SendRequest< TResponse >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task< TResponse > SAPTeam.Kryptor.Client.ISession.SendRequest< TResponse > ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}}}{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v StartAsync\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:StartAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task SAPTeam.Kryptor.Client.ISession.StartAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}}}{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Description\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:Description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.ISession.Description{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 23} of file {\b ISession.cs}.}\par
}
{\xe \v EndReason\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:EndReason}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionEndReason} SAPTeam.Kryptor.Client.ISession.EndReason{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 48} of file {\b ISession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.IsReady()}.}\par
}
{\xe \v Exception\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:Exception}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Exception SAPTeam.Kryptor.Client.ISession.Exception{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 53} of file {\b ISession.cs}.}\par
}
{\xe \v IsHidden\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:IsHidden}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.ISession.IsHidden{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATS \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 38} of file {\b ISession.cs}.}\par
}
{\xe \v IsPaused\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:IsPaused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.ISession.IsPaused{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 33} of file {\b ISession.cs}.}\par
}
{\xe \v IsRunning\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:IsRunning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.ISession.IsRunning{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 28} of file {\b ISession.cs}.}\par
}
{\xe \v Messages\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:Messages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<string> SAPTeam.Kryptor.Client.ISession.Messages{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 63} of file {\b ISession.cs}.}\par
}
{\xe \v Name\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.ISession.Name{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Cli.DecryptionSession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.EncryptionSession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 13} of file {\b ISession.cs}.}\par
}
{\xe \v Progress\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:Progress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double SAPTeam.Kryptor.Client.ISession.Progress{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 18} of file {\b ISession.cs}.}\par
}
{\xe \v Status\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:Status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionStatus} SAPTeam.Kryptor.Client.ISession.Status{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 43} of file {\b ISession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionGroup.Add()}, {\b SAPTeam.Kryptor.Client.Session.ContinueWith()}, {\b SAPTeam.Kryptor.Client.Session.IsReady()}, {\b SAPTeam.Kryptor.Client.SessionHolder.SessionHolder()}, and {\b SAPTeam.Kryptor.Client.SessionContainer.WrapSession()}.}\par
}
{\xe \v Timer\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:Timer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Stopwatch SAPTeam.Kryptor.Client.ISession.Timer{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Client.Session} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 58} of file {\b ISession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v DescriptionChanged\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:DescriptionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionUpdateEventArgs}> SAPTeam.Kryptor.Client.ISession.DescriptionChanged}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }}\par
{
Definition at line {\b 78} of file {\b ISession.cs}.}\par
}
{\xe \v ProgressChanged\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:ProgressChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionUpdateEventArgs}> SAPTeam.Kryptor.Client.ISession.ProgressChanged}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }}\par
{
Definition at line {\b 73} of file {\b ISession.cs}.}\par
}
{\xe \v SessionEnded\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:SessionEnded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionEventArgs}> SAPTeam.Kryptor.Client.ISession.SessionEnded}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }}\par
{
Definition at line {\b 98} of file {\b ISession.cs}.}\par
}
{\xe \v SessionPaused\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:SessionPaused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionUpdateEventArgs}> SAPTeam.Kryptor.Client.ISession.SessionPaused}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }}\par
{
Definition at line {\b 83} of file {\b ISession.cs}.}\par
}
{\xe \v SessionResumed\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:SessionResumed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionUpdateEventArgs}> SAPTeam.Kryptor.Client.ISession.SessionResumed}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }}\par
{
Definition at line {\b 88} of file {\b ISession.cs}.}\par
}
{\xe \v SessionStarted\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:SessionStarted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionEventArgs}> SAPTeam.Kryptor.Client.ISession.SessionStarted}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }}\par
{
Definition at line {\b 68} of file {\b ISession.cs}.}\par
}
{\xe \v StatusChanged\:SAPTeam.Kryptor.Client.ISession}
{\xe \v SAPTeam.Kryptor.Client.ISession\:StatusChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionEventArgs}> SAPTeam.Kryptor.Client.ISession.StatusChanged}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }}\par
{
Definition at line {\b 93} of file {\b ISession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ISession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.ISessionHost Interface Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.ISessionHost}
{\xe \v SAPTeam.Kryptor.Client.ISessionHost}
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to start and end program. }}\par
Inheritance diagram for SAPTeam.Kryptor.Client.ISessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/da9/interface_s_a_p_team_1_1_kryptor_1_1_client_1_1_i_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b NewSession} ({\b ISession} session, bool autoRemove, bool autoStart)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to start and end program. \par
}{
Definition at line {\b 6} of file {\b ISessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v End\:SAPTeam.Kryptor.Client.ISessionHost}
{\xe \v SAPTeam.Kryptor.Client.ISessionHost\:End}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.ISessionHost.End (bool cancelled)}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
}{
Implemented in {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATB \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SAPTeam.Kryptor.Client.SessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.ClientContext.NewSessionHost()}.}\par
}
{\xe \v MonitorTask\:SAPTeam.Kryptor.Client.ISessionHost}
{\xe \v SAPTeam.Kryptor.Client.ISessionHost\:MonitorTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.ISessionHost.MonitorTask (Task task)}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
}{
Implemented in {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATD \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SAPTeam.Kryptor.Client.SessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v NewSession\:SAPTeam.Kryptor.Client.ISessionHost}
{\xe \v SAPTeam.Kryptor.Client.ISessionHost\:NewSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.ISessionHost.NewSession ({\b ISession} session, bool autoRemove, bool autoStart)}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
}{
Implemented in {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATF \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SAPTeam.Kryptor.Client.SessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnSessionRequest< TResponse >\:SAPTeam.Kryptor.Client.ISessionHost}
{\xe \v SAPTeam.Kryptor.Client.ISessionHost\:OnSessionRequest< TResponse >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task< TResponse > SAPTeam.Kryptor.Client.ISessionHost.OnSessionRequest< TResponse > ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The paused session. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The session host or user response. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i NotSupportedException} \cell }{This exception thrown when the requested {\i TResponse}   is not supported by this session host. \cell }
{\row }
}
}{
Implemented in {\b SAPTeam.Kryptor.Cli.CliSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATH \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SAPTeam.Kryptor.Client.SessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Start\:SAPTeam.Kryptor.Client.ISessionHost}
{\xe \v SAPTeam.Kryptor.Client.ISessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.ISessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implemented in {\b SAPTeam.Kryptor.Cli.CliSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.DecryptionSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVU \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SAPTeam.Kryptor.Client.SessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Verbose\:SAPTeam.Kryptor.Client.ISessionHost}
{\xe \v SAPTeam.Kryptor.Client.ISessionHost\:Verbose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.ISessionHost.Verbose{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }}\par
{
Implemented in {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATM \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SAPTeam.Kryptor.Client.SessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 11} of file {\b ISessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ISessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.ITranformer Interface Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.ITranformer}
{\xe \v SAPTeam.Kryptor.ITranformer}
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents standard to transform specified inputs to a reproducible output. }}\par
Inheritance diagram for SAPTeam.Kryptor.ITranformer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d54/interface_s_a_p_team_1_1_kryptor_1_1_i_tranformer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Generate} (byte[] buffer, int rotate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with generated values. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Helpers.IProgressReport}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggered when the work progress is changed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents standard to transform specified inputs to a reproducible output. \par
}{
Definition at line {\b 8} of file {\b ITranformer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Generate\:SAPTeam.Kryptor.ITranformer}
{\xe \v SAPTeam.Kryptor.ITranformer\:Generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.ITranformer.Generate (byte[] buffer, int rotate)}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with generated values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rotate} \cell }{The number of changes applies to buffer after filling. \cell }
{\row }
}
}{
Implemented in {\b SAPTeam.Kryptor.Generators.Generica} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b SAPTeam.Kryptor.Generators.LiteEn} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.TransformerToken.GenerateKeyStore()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ITranformer.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.JsonWorker Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.JsonWorker}
{\xe \v SAPTeam.Kryptor.JsonWorker}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents methods to work with json serialization and deserialization with full support for AOT. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JsonWorker} (JsonSerializerOptions options=null, JsonSerializerContext context=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b JsonWorker} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ToJson} (object obj)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the provided object to json string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T {\b ReadJson< T >} (string json)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the provided json string to {\i T}  . }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToJson} (object obj, JsonSerializerOptions options)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the provided object to json string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static T {\b ReadJson< T >} (string json, JsonSerializerOptions options)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the provided json string to {\i T}  . }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents methods to work with json serialization and deserialization with full support for AOT. \par
}{
Definition at line {\b 9} of file {\b JsonWorker.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v JsonWorker\:SAPTeam.Kryptor.JsonWorker}
{\xe \v SAPTeam.Kryptor.JsonWorker\:JsonWorker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.JsonWorker.JsonWorker (JsonSerializerOptions options = {\f2 null}, JsonSerializerContext context = {\f2 null})}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b JsonWorker} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i options} \cell }{The serializer options. (used in netstandard2.0 or net461 targets) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The source-generated serializer context. (used in net6.0+ targets) \cell }
{\row }
}
}{
Definition at line {\b 23} of file {\b JsonWorker.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ReadJson< T >\:SAPTeam.Kryptor.JsonWorker}
{\xe \v SAPTeam.Kryptor.JsonWorker\:ReadJson< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
T SAPTeam.Kryptor.JsonWorker.ReadJson< T > (string json)}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the provided json string to {\i T}  . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i json} \cell }{The json string to convert. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{The type of the object to convert to and return. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new instance of {\i T}   initialized with json data. \par
}}}{{{\b Type Constraints}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\i T} : {\i class} \par
\par
}}
{\xe \v ReadJson< T >\:SAPTeam.Kryptor.JsonWorker}
{\xe \v SAPTeam.Kryptor.JsonWorker\:ReadJson< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static T SAPTeam.Kryptor.JsonWorker.ReadJson< T > (string json, JsonSerializerOptions options){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the provided json string to {\i T}  . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i json} \cell }{The json string to convert. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i options} \cell }{Options to control the conversion behavior. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{The type of the object to convert to and return. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new instance of {\i T}   initialized with json data. \par
}}}{{{\b Type Constraints}}\par
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\i T} : {\i class} \par
\par
}}
{\xe \v ToJson\:SAPTeam.Kryptor.JsonWorker}
{\xe \v SAPTeam.Kryptor.JsonWorker\:ToJson}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.JsonWorker.ToJson (object obj)}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the provided object to json string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i obj} \cell }{The object to convert. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The converted json string. \par
}}}}
{\xe \v ToJson\:SAPTeam.Kryptor.JsonWorker}
{\xe \v SAPTeam.Kryptor.JsonWorker\:ToJson}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string SAPTeam.Kryptor.JsonWorker.ToJson (object obj, JsonSerializerOptions options){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the provided object to json string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i obj} \cell }{The object to convert. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i options} \cell }{Options to control the conversion behavior. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The converted json string. \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b JsonWorker.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Kes Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes}
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides methods to encrypt and decrypt data using the {\b Kryptor} Encryption Standard (KES). }}\par
Inheritance diagram for SAPTeam.Kryptor.Kes:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d59/class_s_a_p_team_1_1_kryptor_1_1_kes.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetDecryptionBufferSize} ({\b CryptoProcess} process=default)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets max input buffer size for {\b CryptoProvider.DecryptBlockAsync}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetEncryptionBufferSize} ({\b CryptoProcess} process=default)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets max input buffer size for {\b CryptoProvider.EncryptBlockAsync}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Kes}({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration, int blockSize=default) {\b Kes}({\b CryptoProvider} provider, int blockSize=default) {\b Kes} (int blockSize=default)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b Kes} class with a new instance of the requested crypto provider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b EncryptAsync} (Stream source, Stream dest)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts the given data stream and writes the encrypted data to the destination stream. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b EncryptAsync} (Stream source, Stream dest, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts the given data stream and writes the encrypted data to the destination stream. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b EncryptAsync} (Stream source, Stream dest, {\b Header} header)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts the given data stream and writes the encrypted data to the destination stream. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b EncryptAsync} (Stream source, Stream dest, {\b Header} header, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts the given data stream and writes the encrypted data to the destination stream. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b DecryptAsync} (Stream source, Stream dest)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts the given data stream and writes the decrypted data to the destination data stream. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b DecryptAsync} (Stream source, Stream dest, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts the given data stream and writes the decrypted data to the destination data stream. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task< byte[]> {\b EncryptBlockAsync} (byte[] data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task< byte[]> {\b EncryptBlockAsync} (byte[] data, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task< byte[]> {\b EncryptBlockAsync} (byte[] data, {\b CryptoProcess} process)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task< byte[]> {\b EncryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task< byte[]> {\b DecryptBlockAsync} (byte[] data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task< byte[]> {\b DecryptBlockAsync} (byte[] data, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task< byte[]> {\b DecryptBlockAsync} (byte[] data, {\b CryptoProcess} process)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task< byte[]> {\b DecryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b DefaultBlockSize} = 0x8000\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the default value for block size. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b BlockSize} = {\b DefaultBlockSize}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the block size used for buffer creation in encryption and decryption. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Version {\b Version}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the version of the kes encryptor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Version} {\b MinimumSupportedVersion}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the minimum supported version of the kes decryptor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProvider} {\b Provider}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the crypto provider. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Helpers.IProgressReport}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggered when the work progress is changed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides methods to encrypt and decrypt data using the {\b Kryptor} Encryption Standard (KES). \par
}{
Definition at line {\b 12} of file {\b Kes.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Kes\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:Kes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Kes}({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration, int blockSize=default) {\b Kes}({\b CryptoProvider} provider, int blockSize=default) SAPTeam.Kryptor.Kes.Kes (int blockSize = {\f2 default})}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b Kes} class with a new instance of the requested crypto provider. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configuration} \cell }{The configuration to initialize crypto provider. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i blockSize} \cell }{The block size used to read and process data. \cell }
{\row }
}
Initializes a new instance of the {\b Kes} class.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i provider} \cell }{The crypto provider. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i blockSize} \cell }{The block size used to read and process data. \cell }
{\row }
}
Initializes a new instance of the {\b Kes} class.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i blockSize} \cell }{The block size used to read and process data. \cell }
{\row }
}
}{
Definition at line {\b 87} of file {\b Kes.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Kes.BlockSize}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DecryptAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:DecryptAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task SAPTeam.Kryptor.Kes.DecryptAsync (Stream source, Stream dest)}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts the given data stream and writes the decrypted data to the destination data stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{The stream of encrypted data with read access. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dest} \cell }{The stream of destination target with write access. \cell }
{\row }
}
}{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}.}\par
}
{\xe \v DecryptAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:DecryptAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task SAPTeam.Kryptor.Kes.DecryptAsync (Stream source, Stream dest, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts the given data stream and writes the decrypted data to the destination data stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{The stream of encrypted data with read access. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dest} \cell }{The stream of destination target with write access. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
}{
Definition at line {\b 215} of file {\b Kes.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Header.EngineVersion}, {\b SAPTeam.Kryptor.Kes.MinimumSupportedVersion}, {\b SAPTeam.Kryptor.Header.Version}, and {\b SAPTeam.Kryptor.Kes.Version}.}\par
}
{\xe \v DecryptBlockAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:DecryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task< byte[]> SAPTeam.Kryptor.Kes.DecryptBlockAsync (byte[] data)}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw encrypted data block.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Decrypted data block.\par
}}}{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.DecryptBlockAsync()}.}\par
}
{\xe \v DecryptBlockAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:DecryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task< byte[]> SAPTeam.Kryptor.Kes.DecryptBlockAsync (byte[] data, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw encrypted data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Decrypted data block.\par
}}}{
Definition at line {\b 361} of file {\b Kes.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Kes.DecryptBlockAsync()}, and {\b SAPTeam.Kryptor.CryptoProcess.InitializeData()}.}\par
}
{\xe \v DecryptBlockAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:DecryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task< byte[]> SAPTeam.Kryptor.Kes.DecryptBlockAsync (byte[] data, {\b CryptoProcess} process)}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw encrypted data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Decrypted data block.\par
}}}}
{\xe \v DecryptBlockAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:DecryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task< byte[]> SAPTeam.Kryptor.Kes.DecryptBlockAsync (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw encrypted data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Decrypted data block.\par
}}}{
Definition at line {\b 389} of file {\b Kes.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProvider.DecryptBlockAsync()}, {\b SAPTeam.Kryptor.Kes.GetDecryptionBufferSize()}, {\b SAPTeam.Kryptor.Kes.GetEncryptionBufferSize()}, and {\b SAPTeam.Kryptor.Kes.Provider}.}\par
}
{\xe \v EncryptAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:EncryptAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task SAPTeam.Kryptor.Kes.EncryptAsync (Stream source, Stream dest)}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts the given data stream and writes the encrypted data to the destination stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{The stream of the source data with read access. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dest} \cell }{The stream of destination target with write access. \cell }
{\row }
}
}}
{\xe \v EncryptAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:EncryptAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task SAPTeam.Kryptor.Kes.EncryptAsync (Stream source, Stream dest, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts the given data stream and writes the encrypted data to the destination stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{The stream of the source data with read access. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dest} \cell }{The stream of destination target with write access. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
}}
{\xe \v EncryptAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:EncryptAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task SAPTeam.Kryptor.Kes.EncryptAsync (Stream source, Stream dest, {\b Header} header)}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts the given data stream and writes the encrypted data to the destination stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{The stream of the source data with read access. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dest} \cell }{The stream of destination target with write access. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{The header to write in the beginning of destination stream. if null, a new header will be created automatically. \cell }
{\row }
}
}}
{\xe \v EncryptAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:EncryptAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task SAPTeam.Kryptor.Kes.EncryptAsync (Stream source, Stream dest, {\b Header} header, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts the given data stream and writes the encrypted data to the destination stream. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source} \cell }{The stream of the source data with read access. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dest} \cell }{The stream of destination target with write access. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{The header to write in the beginning of destination stream. if null, a new header will be created automatically. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
}{
Definition at line {\b 163} of file {\b Kes.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Header.CreatePayload()}, {\b SAPTeam.Kryptor.Kes.Provider}, and {\b SAPTeam.Kryptor.Header.Verbosity}.}\par
}
{\xe \v EncryptBlockAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:EncryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task< byte[]> SAPTeam.Kryptor.Kes.EncryptBlockAsync (byte[] data)}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw data block.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Encrypted data block.\par
}}}{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.EncryptBlockAsync()}.}\par
}
{\xe \v EncryptBlockAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:EncryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task< byte[]> SAPTeam.Kryptor.Kes.EncryptBlockAsync (byte[] data, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Encrypted data block.\par
}}}{
Definition at line {\b 304} of file {\b Kes.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Kes.EncryptBlockAsync()}, and {\b SAPTeam.Kryptor.CryptoProcess.InitializeData()}.}\par
}
{\xe \v EncryptBlockAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:EncryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task< byte[]> SAPTeam.Kryptor.Kes.EncryptBlockAsync (byte[] data, {\b CryptoProcess} process)}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Encrypted data block.\par
}}}}
{\xe \v EncryptBlockAsync\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:EncryptBlockAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task< byte[]> SAPTeam.Kryptor.Kes.EncryptBlockAsync (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{The raw data block.\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i process} \cell }{The crypto process data holder. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Encrypted data block.\par
}}}{
Definition at line {\b 332} of file {\b Kes.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProvider.EncryptBlockAsync()}, {\b SAPTeam.Kryptor.Kes.GetDecryptionBufferSize()}, {\b SAPTeam.Kryptor.Kes.GetEncryptionBufferSize()}, and {\b SAPTeam.Kryptor.Kes.Provider}.}\par
}
{\xe \v GetDecryptionBufferSize\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:GetDecryptionBufferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Kes.GetDecryptionBufferSize ({\b CryptoProcess} process = {\f2 default})}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets max input buffer size for {\b CryptoProvider.DecryptBlockAsync}. }}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.DecryptBlockAsync()}, and {\b SAPTeam.Kryptor.Kes.EncryptBlockAsync()}.}\par
}
{\xe \v GetEncryptionBufferSize\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:GetEncryptionBufferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Kes.GetEncryptionBufferSize ({\b CryptoProcess} process = {\f2 default})}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets max input buffer size for {\b CryptoProvider.EncryptBlockAsync}. }}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.DecryptBlockAsync()}, and {\b SAPTeam.Kryptor.Kes.EncryptBlockAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v DefaultBlockSize\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:DefaultBlockSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int SAPTeam.Kryptor.Kes.DefaultBlockSize = 0x8000{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the default value for block size. }}\par
{
Definition at line {\b 19} of file {\b Kes.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Program.GetRootCommand()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v BlockSize\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:BlockSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Kes.BlockSize = {\b DefaultBlockSize}{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the block size used for buffer creation in encryption and decryption. }}\par
{
Definition at line {\b 24} of file {\b Kes.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.Kes()}.}\par
}
{\xe \v MinimumSupportedVersion\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:MinimumSupportedVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Version} SAPTeam.Kryptor.Kes.MinimumSupportedVersion{\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the minimum supported version of the kes decryptor. }}\par
{
Definition at line {\b 46} of file {\b Kes.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.DecryptAsync()}, and {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}.}\par
}
{\xe \v Provider\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:Provider}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CryptoProvider} SAPTeam.Kryptor.Kes.Provider{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the crypto provider. }}\par
{
Definition at line {\b 51} of file {\b Kes.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.DecryptBlockAsync()}, {\b SAPTeam.Kryptor.Kes.EncryptAsync()}, and {\b SAPTeam.Kryptor.Kes.EncryptBlockAsync()}.}\par
}
{\xe \v Version\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:Version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Version SAPTeam.Kryptor.Kes.Version{\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the version of the kes encryptor. }}\par
{
Definition at line {\b 41} of file {\b Kes.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Kes.DecryptAsync()}, and {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v ProgressChanged\:SAPTeam.Kryptor.Kes}
{\xe \v SAPTeam.Kryptor.Kes\:ProgressChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<double> SAPTeam.Kryptor.Kes.ProgressChanged}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 54} of file {\b Kes.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Kes.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.KeyChain Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.KeyChain}
{\xe \v SAPTeam.Kryptor.Client.KeyChain}
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold encryption data of files. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Serial}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the unique identifier of the encrypted file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b Fingerprint}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the fingerprint of the encryptor keystore. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TransformerToken}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the keystore transformer token. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold encryption data of files. \par
}{
Definition at line {\b 6} of file {\b KeyChain.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Fingerprint\:SAPTeam.Kryptor.Client.KeyChain}
{\xe \v SAPTeam.Kryptor.Client.KeyChain\:Fingerprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] SAPTeam.Kryptor.Client.KeyChain.Fingerprint{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the fingerprint of the encryptor keystore. }}\par
{
Definition at line {\b 16} of file {\b KeyChain.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.Start()}.}\par
}
{\xe \v Serial\:SAPTeam.Kryptor.Client.KeyChain}
{\xe \v SAPTeam.Kryptor.Client.KeyChain\:Serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.KeyChain.Serial{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the unique identifier of the encrypted file. }}\par
{
Definition at line {\b 11} of file {\b KeyChain.cs}.}\par
}
{\xe \v TransformerToken\:SAPTeam.Kryptor.Client.KeyChain}
{\xe \v SAPTeam.Kryptor.Client.KeyChain\:TransformerToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.KeyChain.TransformerToken{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the keystore transformer token. }}\par
{
Definition at line {\b 21} of file {\b KeyChain.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyChain.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.KeyChainCollection Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.KeyChainCollection}
{\xe \v SAPTeam.Kryptor.Client.KeyChainCollection}
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a collection to work with key chains. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyChainCollection} (string path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b KeyChainCollection} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Add} ({\b ClientHeader} header, {\b KeyStore} keyStore, string transformerToken=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new keychain to the collection. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Save} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Saves the keychain file. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b FilePath}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the path of the keychain json file. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyChain} {\b this[string serial]}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keychain with the specified {\i serial}  . }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a collection to work with key chains. \par
}{
Definition at line {\b 6} of file {\b KeyChainCollection.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v KeyChainCollection\:SAPTeam.Kryptor.Client.KeyChainCollection}
{\xe \v SAPTeam.Kryptor.Client.KeyChainCollection\:KeyChainCollection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Client.KeyChainCollection.KeyChainCollection (string path)}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b KeyChainCollection} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{The keychain file name or directory name to create of search for existing keychain file. \cell }
{\row }
}
}{
Definition at line {\b 50} of file {\b KeyChainCollection.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.KeyChainCollection.FilePath}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:SAPTeam.Kryptor.Client.KeyChainCollection}
{\xe \v SAPTeam.Kryptor.Client.KeyChainCollection\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.KeyChainCollection.Add ({\b ClientHeader} header, {\b KeyStore} keyStore, string transformerToken = {\f2 null})}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a new keychain to the collection. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i header} \cell }{The header of the encrypted file. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore used to encrypt the file. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i transformerToken} \cell }{The transformer token used to generate the keystore (if presents). \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ArgumentException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 92} of file {\b KeyChainCollection.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.KeyChainCollection.FilePath}, {\b SAPTeam.Kryptor.KeyStore.Fingerprint}, {\b SAPTeam.Kryptor.KeyStore.Raw}, and {\b SAPTeam.Kryptor.Client.ClientHeader.Serial}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}.}\par
}
{\xe \v Save\:SAPTeam.Kryptor.Client.KeyChainCollection}
{\xe \v SAPTeam.Kryptor.Client.KeyChainCollection\:Save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.KeyChainCollection.Save ()}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Saves the keychain file. }}\par
{
Definition at line {\b 121} of file {\b KeyChainCollection.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.KeyChainCollection.FilePath}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v FilePath\:SAPTeam.Kryptor.Client.KeyChainCollection}
{\xe \v SAPTeam.Kryptor.Client.KeyChainCollection\:FilePath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.KeyChainCollection.FilePath{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the path of the keychain json file. }}\par
{
Definition at line {\b 15} of file {\b KeyChainCollection.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.KeyChainCollection.Add()}, {\b SAPTeam.Kryptor.Client.KeyChainCollection.KeyChainCollection()}, {\b SAPTeam.Kryptor.Client.KeyChainCollection.Save()}, and {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.Start()}.}\par
}
{\xe \v this[string serial]\:SAPTeam.Kryptor.Client.KeyChainCollection}
{\xe \v SAPTeam.Kryptor.Client.KeyChainCollection\:this[string serial]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KeyChain} SAPTeam.Kryptor.Client.KeyChainCollection.this[string serial]{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keychain with the specified {\i serial}  . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i serial} \cell }{The unique identifier of the file. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i KeyNotFoundException} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ApplicationException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 26} of file {\b KeyChainCollection.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyChainCollection.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost}
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
Inheritance diagram for SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/dae/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_key_chain_reader_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyChainReaderSessionHost} ({\b GlobalOptions} globalOptions, string keyChainPath, string filePath)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b KeyChainPath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b FilePath}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 5} of file {\b KeyChainReaderSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v KeyChainReaderSessionHost\:SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost\:KeyChainReaderSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.KeyChainReaderSessionHost ({\b GlobalOptions} globalOptions, string keyChainPath, string filePath)}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b KeyChainReaderSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.FilePath}, and {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.KeyChainPath}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 16} of file {\b KeyChainReaderSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.CliSessionHost.DebugLog()}, {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.FilePath}, {\b SAPTeam.Kryptor.Client.KeyChainCollection.FilePath}, {\b SAPTeam.Kryptor.Client.KeyChain.Fingerprint}, {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.KeyChainPath}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.Log()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.LogError()}, {\b SAPTeam.Kryptor.Client.ClientHeader.Serial}, and {\b SAPTeam.Kryptor.Client.KeyChain.TransformerToken}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v FilePath\:SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost\:FilePath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.FilePath}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b KeyChainReaderSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.KeyChainReaderSessionHost()}, and {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.Start()}.}\par
}
{\xe \v KeyChainPath\:SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost\:KeyChainPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.KeyChainPath}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b KeyChainReaderSessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.KeyChainReaderSessionHost()}, and {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyChainReaderSessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.KeyStore Struct Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.KeyStore}
{\xe \v SAPTeam.Kryptor.KeyStore}
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores keys for the {\b Kes} class. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} (byte[] bytes)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b KeyStore} struct. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b KeyStore} {\b Generate} (int count=0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new {\b KeyStore} instance with random key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b GetRandomOddNumber} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a random odd number between 257 and 2047. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b this[int index]}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the key at the specified index. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[][] {\b Keys}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keys to store. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b Raw}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the raw flat bytes array of data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b Fingerprint}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the unique fingerprint of this keystore. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores keys for the {\b Kes} class. \par
}{
Definition at line {\b 9} of file {\b KeyStore.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v KeyStore\:SAPTeam.Kryptor.KeyStore}
{\xe \v SAPTeam.Kryptor.KeyStore\:KeyStore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.KeyStore.KeyStore (byte[] bytes)}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b KeyStore} struct. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytes} \cell }{The keys to store. \cell }
{\row }
}
}{
Definition at line {\b 45} of file {\b KeyStore.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.KeyStore.Fingerprint}, {\b SAPTeam.Kryptor.KeyStore.Keys}, and {\b SAPTeam.Kryptor.KeyStore.Raw}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.KeyStore.Generate()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Generate\:SAPTeam.Kryptor.KeyStore}
{\xe \v SAPTeam.Kryptor.KeyStore\:Generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b KeyStore} SAPTeam.Kryptor.KeyStore.Generate (int count = {\f2 0}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new {\b KeyStore} instance with random key. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{The number of keys to generate. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The new {\b KeyStore} instance. \par
}}}{
Definition at line {\b 66} of file {\b KeyStore.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Generators.SafeRng.Generate()}, {\b SAPTeam.Kryptor.KeyStore.GetRandomOddNumber()}, and {\b SAPTeam.Kryptor.KeyStore.KeyStore()}.}\par
}
{\xe \v GetRandomOddNumber\:SAPTeam.Kryptor.KeyStore}
{\xe \v SAPTeam.Kryptor.KeyStore\:GetRandomOddNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SAPTeam.Kryptor.KeyStore.GetRandomOddNumber (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a random odd number between 257 and 2047. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 83} of file {\b KeyStore.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.KeyStore.Generate()}, and {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.KeyStoreGenerateSessionHost()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Fingerprint\:SAPTeam.Kryptor.KeyStore}
{\xe \v SAPTeam.Kryptor.KeyStore\:Fingerprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] SAPTeam.Kryptor.KeyStore.Fingerprint{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the unique fingerprint of this keystore. }}\par
{
Definition at line {\b 37} of file {\b KeyStore.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.KeyChainCollection.Add()}, and {\b SAPTeam.Kryptor.KeyStore.KeyStore()}.}\par
}
{\xe \v Keys\:SAPTeam.Kryptor.KeyStore}
{\xe \v SAPTeam.Kryptor.KeyStore\:Keys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [][] SAPTeam.Kryptor.KeyStore.Keys{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keys to store. }}\par
{
Definition at line {\b 27} of file {\b KeyStore.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.KeyStore.KeyStore()}, and {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost.Start()}.}\par
}
{\xe \v Raw\:SAPTeam.Kryptor.KeyStore}
{\xe \v SAPTeam.Kryptor.KeyStore\:Raw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] SAPTeam.Kryptor.KeyStore.Raw{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the raw flat bytes array of data. }}\par
{
Definition at line {\b 32} of file {\b KeyStore.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.KeyChainCollection.Add()}, and {\b SAPTeam.Kryptor.KeyStore.KeyStore()}.}\par
}
{\xe \v this[int index]\:SAPTeam.Kryptor.KeyStore}
{\xe \v SAPTeam.Kryptor.KeyStore\:this[int index]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] SAPTeam.Kryptor.KeyStore.this[int index]{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the key at the specified index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{The index of the key to get. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The key at the specified index. \par
}}}{
Definition at line {\b 22} of file {\b KeyStore.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession}
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
Inheritance diagram for SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/da3/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_key_store_file_load_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreFileLoadSession}(bool showFingerprint, string path) override async Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} (bool showFingerprint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetEndDescription} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get, protected set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ShowFingerprint}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b KeyStoreFileLoadSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v RunAsync\:SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KeyStoreFileLoadSession}(bool showFingerprint, string path) override async Task< bool > SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b KeyStoreFileLoadSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}, {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession.KeyStore}, {\b SAPTeam.Kryptor.Client.Session.Progress}, and {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession.SetEndDescription()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreFileLoadSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost}
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
Inheritance diagram for SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d90/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_key_store_generate_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreGenerateSessionHost} ({\b GlobalOptions} globalOptions, {\b KeyStoreGenerator} generator, int size, {\b TransformerToken} token, int magin, string output)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b CollectEntropy} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 8} of file {\b KeyStoreGenerateSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v KeyStoreGenerateSessionHost\:SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost\:KeyStoreGenerateSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.KeyStoreGenerateSessionHost ({\b GlobalOptions} globalOptions, {\b KeyStoreGenerator} generator, int size, {\b TransformerToken} token, int magin, string output)}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b KeyStoreGenerateSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.KeyStore.GetRandomOddNumber()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CollectEntropy\:SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost\:CollectEntropy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.CollectEntropy (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b KeyStoreGenerateSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Generators.EntroX.AddEntropy()}, and {\b SAPTeam.Kryptor.Generators.CryptoRandom.Next()}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.Start()}.}\par
}
{\xe \v Start\:SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 25} of file {\b KeyStoreGenerateSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.CollectEntropy()}, {\b SAPTeam.Kryptor.Client.Session.ContinueWith()}, {\b SAPTeam.Kryptor.TransformerToken.IsValid()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.Log()}, {\b SAPTeam.Kryptor.Client.SessionHost.NewSession()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.NoInteractions}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreGenerateSessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.KeyStoreLoadSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.KeyStoreLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreLoadSession}
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
Inheritance diagram for SAPTeam.Kryptor.Cli.KeyStoreLoadSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d1d/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_key_store_load_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} (bool showFingerprint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetEndDescription} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get, protected set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ShowFingerprint}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 5} of file {\b KeyStoreLoadSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v KeyStoreLoadSession\:SAPTeam.Kryptor.Cli.KeyStoreLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreLoadSession\:KeyStoreLoadSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.KeyStoreLoadSession.KeyStoreLoadSession (bool showFingerprint){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b KeyStoreLoadSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.SessionEnded}, and {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession.ShowFingerprint}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v SetEndDescription\:SAPTeam.Kryptor.Cli.KeyStoreLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreLoadSession\:SetEndDescription}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.KeyStoreLoadSession.SetEndDescription (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession.RunAsync()}, and {\b SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v KeyStore\:SAPTeam.Kryptor.Cli.KeyStoreLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreLoadSession\:KeyStore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b KeyStore} SAPTeam.Kryptor.Cli.KeyStoreLoadSession.KeyStore{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b KeyStoreLoadSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.LoadKeyStore()}, {\b SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession.RunAsync()}, and {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost.Start()}.}\par
}
{\xe \v ShowFingerprint\:SAPTeam.Kryptor.Cli.KeyStoreLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreLoadSession\:ShowFingerprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.KeyStoreLoadSession.ShowFingerprint{\f2 [get]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b KeyStoreLoadSession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession.KeyStoreLoadSession()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession}
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
Inheritance diagram for SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d1e/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_key_store_random_load_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreRandomLoadSession} (bool showFingerprint, {\b KeyStoreGenerator} generator, int size, int margin)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} (bool showFingerprint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetEndDescription} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get, protected set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ShowFingerprint}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b KeyStoreRandomLoadSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v KeyStoreRandomLoadSession\:SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession\:KeyStoreRandomLoadSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession.KeyStoreRandomLoadSession (bool showFingerprint, {\b KeyStoreGenerator} generator, int size, int margin)}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b KeyStoreRandomLoadSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v RunAsync\:SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< bool > SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b KeyStoreRandomLoadSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}, {\b SAPTeam.Kryptor.Cli.EntroX}, {\b SAPTeam.Kryptor.IGenerator.Generate()}, {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession.KeyStore}, {\b SAPTeam.Kryptor.Client.Session.Progress}, {\b SAPTeam.Kryptor.Cli.SafeRng}, and {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession.SetEndDescription()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreRandomLoadSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession}
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
Inheritance diagram for SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d1f/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_key_store_token_load_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreTokenLoadSession} (bool showFingerprint, {\b TransformerToken} token, int margin)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} (bool showFingerprint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetEndDescription} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get, protected set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ShowFingerprint}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b KeyStoreTokenLoadSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v KeyStoreTokenLoadSession\:SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession\:KeyStoreTokenLoadSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession.KeyStoreTokenLoadSession (bool showFingerprint, {\b TransformerToken} token, int margin)}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b KeyStoreTokenLoadSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v RunAsync\:SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< bool > SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b KeyStoreTokenLoadSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}, and {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession.SetEndDescription()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreTokenLoadSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Generators.LiteEn Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Generators.LiteEn}
{\xe \v SAPTeam.Kryptor.Generators.LiteEn}
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates bytes array populated from specified seed, with fast speed designed for network transmissions. }}\par
Inheritance diagram for SAPTeam.Kryptor.Generators.LiteEn:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d49/class_s_a_p_team_1_1_kryptor_1_1_generators_1_1_lite_en.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LiteEn} (byte[] seed, byte[] salt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b LiteEn} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Generate} (byte[] buffer, int rotate)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with generated values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rotate} \cell }{The number of changes applies to buffer after filling. \cell }
{\row }
}
 }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.ITranformer}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Helpers.IProgressReport}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggered when the work progress is changed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates bytes array populated from specified seed, with fast speed designed for network transmissions. \par
}{
Definition at line {\b 10} of file {\b LiteEn.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LiteEn\:SAPTeam.Kryptor.Generators.LiteEn}
{\xe \v SAPTeam.Kryptor.Generators.LiteEn\:LiteEn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Generators.LiteEn.LiteEn (byte[] seed, byte[] salt)}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b LiteEn} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i seed} \cell }{The seed to generate values. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i salt} \cell }{The additional value to alter the seed and outputs. \cell }
{\row }
}
}{
Definition at line {\b 32} of file {\b LiteEn.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Generate\:SAPTeam.Kryptor.Generators.LiteEn}
{\xe \v SAPTeam.Kryptor.Generators.LiteEn\:Generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Generators.LiteEn.Generate (byte[] buffer, int rotate)}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with generated values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rotate} \cell }{The number of changes applies to buffer after filling. \cell }
{\row }
}
 }}\par
{
Implements {\b SAPTeam.Kryptor.ITranformer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 44} of file {\b LiteEn.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Generators.LiteEn.ProgressChanged}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v ProgressChanged\:SAPTeam.Kryptor.Generators.LiteEn}
{\xe \v SAPTeam.Kryptor.Generators.LiteEn\:ProgressChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<double> SAPTeam.Kryptor.Generators.LiteEn.ProgressChanged}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 21} of file {\b LiteEn.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Generators.LiteEn.Generate()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LiteEn.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.ManagedSession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.ManagedSession}
{\xe \v SAPTeam.Kryptor.Client.ManagedSession}
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an empty session to be managed by the session host. }}\par
Inheritance diagram for SAPTeam.Kryptor.Client.ManagedSession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dce/class_s_a_p_team_1_1_kryptor_1_1_client_1_1_managed_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ManagedSession}() void {\b SetProgress} (double progress)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b ManagedSession} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetDescription} (string description)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets a new value for session's description. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetEndStatus} ({\b SessionEndReason} endReason, {\b Exception} exception=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the session status to {\b SessionStatus.Ended} and sets the end reason and exception. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an empty session to be managed by the session host. \par
}{
Definition at line {\b 6} of file {\b ManagedSession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v RunAsync\:SAPTeam.Kryptor.Client.ManagedSession}
{\xe \v SAPTeam.Kryptor.Client.ManagedSession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override Task< bool > SAPTeam.Kryptor.Client.ManagedSession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v SetDescription\:SAPTeam.Kryptor.Client.ManagedSession}
{\xe \v SAPTeam.Kryptor.Client.ManagedSession\:SetDescription}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.ManagedSession.SetDescription (string description)}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets a new value for session's description. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i description} \cell }{The new description. \cell }
{\row }
}
}}
{\xe \v SetEndStatus\:SAPTeam.Kryptor.Client.ManagedSession}
{\xe \v SAPTeam.Kryptor.Client.ManagedSession\:SetEndStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.ManagedSession.SetEndStatus ({\b SessionEndReason} endReason, {\b Exception} exception = {\f2 null})}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the session status to {\b SessionStatus.Ended} and sets the end reason and exception. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i endReason} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i exception} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 34} of file {\b ManagedSession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.EndReason}, {\b SAPTeam.Kryptor.Client.Session.Exception}, and {\b SAPTeam.Kryptor.Client.Session.Status}.}\par
}
{\xe \v SetProgress\:SAPTeam.Kryptor.Client.ManagedSession}
{\xe \v SAPTeam.Kryptor.Client.ManagedSession\:SetProgress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ManagedSession}() void SAPTeam.Kryptor.Client.ManagedSession.SetProgress (double progress)}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b ManagedSession} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets a new value for session's progress.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i progress} \cell }{The new value from -1 to 100. \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ManagedSession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.CryptoProviders.MixedVector Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.CryptoProviders.MixedVector}
{\xe \v SAPTeam.Kryptor.CryptoProviders.MixedVector}
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Mixed Vector (MV) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a different key and a mixed iv Until all the keys are used, then it continues from the first key and this process continues until the end of encryption. }}\par
Inheritance diagram for SAPTeam.Kryptor.CryptoProviders.MixedVector:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d00/class_s_a_p_team_1_1_kryptor_1_1_crypto_providers_1_1_mixed_vector.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MixedVector} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty crypto provider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MixedVector} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b MixedVector} class. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< byte[]> {\b EncryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< byte[]> {\b DecryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b Clone} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< IEnumerable< byte > > {\b EncryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< IEnumerable< byte > > {\b DecryptChunkAsync} (byte[] cipher, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ApplyHeader} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new crypto provider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b EncryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts chunk of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b DecryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts chunk of data asynchronously. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Package Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b DecryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Decryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b EncryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Encryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of this crypto provider instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keystore for crypto operations. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Mixed Vector (MV) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a different key and a mixed iv Until all the keys are used, then it continues from the first key and this process continues until the end of encryption. \par
}{
Definition at line {\b 9} of file {\b MixedVector.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MixedVector\:SAPTeam.Kryptor.CryptoProviders.MixedVector}
{\xe \v SAPTeam.Kryptor.CryptoProviders.MixedVector\:MixedVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.CryptoProviders.MixedVector.MixedVector ()}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty crypto provider. }}\par
{
Definition at line {\b 14} of file {\b MixedVector.cs}.}\par
}
{\xe \v MixedVector\:SAPTeam.Kryptor.CryptoProviders.MixedVector}
{\xe \v SAPTeam.Kryptor.CryptoProviders.MixedVector\:MixedVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.CryptoProviders.MixedVector.MixedVector ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration = {\f2 null})}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b MixedVector} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore with at least 2 keys. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configuration} \cell }{The configuration to initialize the crypto provider \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DecryptChunkAsync\:SAPTeam.Kryptor.CryptoProviders.MixedVector}
{\xe \v SAPTeam.Kryptor.CryptoProviders.MixedVector\:DecryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProviders.MixedVector.DecryptChunkAsync (byte[] cipher, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v EncryptChunkAsync\:SAPTeam.Kryptor.CryptoProviders.MixedVector}
{\xe \v SAPTeam.Kryptor.CryptoProviders.MixedVector\:EncryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProviders.MixedVector.EncryptChunkAsync (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MixedVector.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.PauseRequest Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.PauseRequest}
{\xe \v SAPTeam.Kryptor.Cli.PauseRequest}
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} (string message, bool defaultValue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetResponse} (bool response)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsEmpty} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Message}{\f2  [get, set]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Default}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Response}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsResponsed}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 3} of file {\b PauseRequest.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PauseRequest\:SAPTeam.Kryptor.Cli.PauseRequest}
{\xe \v SAPTeam.Kryptor.Cli.PauseRequest\:PauseRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.PauseRequest.PauseRequest (string message, bool defaultValue)}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b PauseRequest.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.PauseRequest.Default}, {\b SAPTeam.Kryptor.Cli.PauseRequest.IsResponsed}, and {\b SAPTeam.Kryptor.Cli.PauseRequest.Message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v IsEmpty\:SAPTeam.Kryptor.Cli.PauseRequest}
{\xe \v SAPTeam.Kryptor.Cli.PauseRequest\:IsEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.PauseRequest.IsEmpty ()}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetResponse\:SAPTeam.Kryptor.Cli.PauseRequest}
{\xe \v SAPTeam.Kryptor.Cli.PauseRequest\:SetResponse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.PauseRequest.SetResponse (bool response)}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b PauseRequest.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.PauseRequest.IsResponsed}, and {\b SAPTeam.Kryptor.Cli.PauseRequest.Response}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Default\:SAPTeam.Kryptor.Cli.PauseRequest}
{\xe \v SAPTeam.Kryptor.Cli.PauseRequest\:Default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.PauseRequest.Default{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b PauseRequest.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.PauseRequest.PauseRequest()}.}\par
}
{\xe \v IsResponsed\:SAPTeam.Kryptor.Cli.PauseRequest}
{\xe \v SAPTeam.Kryptor.Cli.PauseRequest\:IsResponsed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.PauseRequest.IsResponsed{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b PauseRequest.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.PauseRequest.PauseRequest()}, and {\b SAPTeam.Kryptor.Cli.PauseRequest.SetResponse()}.}\par
}
{\xe \v Message\:SAPTeam.Kryptor.Cli.PauseRequest}
{\xe \v SAPTeam.Kryptor.Cli.PauseRequest\:Message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Cli.PauseRequest.Message{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b PauseRequest.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.PauseRequest.PauseRequest()}.}\par
}
{\xe \v Response\:SAPTeam.Kryptor.Cli.PauseRequest}
{\xe \v SAPTeam.Kryptor.Cli.PauseRequest\:Response}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.PauseRequest.Response{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b PauseRequest.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.PauseRequest.SetResponse()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.Program Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.Program}
{\xe \v SAPTeam.Kryptor.Cli.Program}
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b Main} (string[] args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static RootCommand {\b GetRootCommand} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b CliContext} {\b Context} = CommonTK.Context.Register<{\b CliContext}>(){\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 10} of file {\b Program.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetRootCommand\:SAPTeam.Kryptor.Cli.Program}
{\xe \v SAPTeam.Kryptor.Cli.Program\:GetRootCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static RootCommand SAPTeam.Kryptor.Cli.Program.GetRootCommand (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b Program.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Kes.DefaultBlockSize}, and {\b SAPTeam.Kryptor.TransformerToken.IsValid()}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Program.Main()}.}\par
}
{\xe \v Main\:SAPTeam.Kryptor.Cli.Program}
{\xe \v SAPTeam.Kryptor.Cli.Program\:Main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SAPTeam.Kryptor.Cli.Program.Main (string[] args){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b Program.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.Program.GetRootCommand()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Context\:SAPTeam.Kryptor.Cli.Program}
{\xe \v SAPTeam.Kryptor.Cli.Program\:Context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CliContext} SAPTeam.Kryptor.Cli.Program.Context = CommonTK.Context.Register<{\b CliContext}>(){\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b Program.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Program.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.Wordlist.QuerySession Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.Wordlist.QuerySession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.QuerySession}
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
Inheritance diagram for SAPTeam.Kryptor.Cli.Wordlist.QuerySession:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/da3/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_wordlist_1_1_query_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QuerySession} ({\b WordlistIndexEntry} entry, string word)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Result} = false\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.Session}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b QuerySession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QuerySession\:SAPTeam.Kryptor.Cli.Wordlist.QuerySession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.QuerySession\:QuerySession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.Wordlist.QuerySession.QuerySession ({\b WordlistIndexEntry} entry, string word)}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b QuerySession.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v RunAsync\:SAPTeam.Kryptor.Cli.Wordlist.QuerySession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.QuerySession\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< bool > SAPTeam.Kryptor.Cli.Wordlist.QuerySession.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b QuerySession.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Description}, {\b SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection.LookupAsync()}, {\b SAPTeam.Kryptor.Client.Session.Progress}, and {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySession.Result}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Result\:SAPTeam.Kryptor.Cli.Wordlist.QuerySession}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.QuerySession\:Result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.Wordlist.QuerySession.Result = false}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b QuerySession.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySession.RunAsync()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QuerySession.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost}
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
Inheritance diagram for SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/db7/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_wordlist_1_1_query_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QuerySessionHost} ({\b GlobalOptions} globalOptions, string query, string wordlist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FinalizeInstallation} ({\b WordlistIndexEntry} entry)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateLocalIndex} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ListInstalledWordlists} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetInstallationPermission} ({\b WordlistIndexEntry} entry)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RemoveWordlist} (string id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SortIndex} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndex} {\b LocalIndex}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b LocalIndexPath}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 5} of file {\b QuerySessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QuerySessionHost\:SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost\:QuerySessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost.QuerySessionHost ({\b GlobalOptions} globalOptions, string query, string wordlist)}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b QuerySessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 16} of file {\b QuerySessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionHost.Container}, {\b SAPTeam.Kryptor.Client.Session.EndReason}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.LocalIndex}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.Log()}, {\b SAPTeam.Kryptor.Client.SessionHost.NewSession()}, {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySession.Result}, {\b SAPTeam.Kryptor.Client.SessionContainer.Sessions}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QuerySessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost}
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
Inheritance diagram for SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d27/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_wordlist_1_1_remove_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RemoveSessionHost} ({\b GlobalOptions} globalOptions, bool list, bool all, string[] wordlists)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FinalizeInstallation} ({\b WordlistIndexEntry} entry)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateLocalIndex} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ListInstalledWordlists} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetInstallationPermission} ({\b WordlistIndexEntry} entry)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RemoveWordlist} (string id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SortIndex} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndex} {\b LocalIndex}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b LocalIndexPath}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 5} of file {\b RemoveSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RemoveSessionHost\:SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost\:RemoveSessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost.RemoveSessionHost ({\b GlobalOptions} globalOptions, bool list, bool all, string[] wordlists)}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b RemoveSessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 18} of file {\b RemoveSessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.ListInstalledWordlists()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.LocalIndex}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.Log()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.LogError()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.RemoveWordlist()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RemoveSessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Generators.SafeRng Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Generators.SafeRng}
{\xe \v SAPTeam.Kryptor.Generators.SafeRng}
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random bytes array with additional safety. }}\par
Inheritance diagram for SAPTeam.Kryptor.Generators.SafeRng:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/ddc/class_s_a_p_team_1_1_kryptor_1_1_generators_1_1_safe_rng.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Generate} (byte[] buffer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with random values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
}
 }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.IGenerator}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b SafeRng} {\b Instance} = new {\b SafeRng}(){\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an static shared instance of the {\b SafeRng} class. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Helpers.IProgressReport}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggered when the work progress is changed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random bytes array with additional safety. \par
}{
Definition at line {\b 6} of file {\b SafeRng.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Generate\:SAPTeam.Kryptor.Generators.SafeRng}
{\xe \v SAPTeam.Kryptor.Generators.SafeRng\:Generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Generators.SafeRng.Generate (byte[] buffer)}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with random values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
}
 }}\par
{
Implements {\b SAPTeam.Kryptor.IGenerator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 19} of file {\b SafeRng.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Generators.SafeRng.ProgressChanged}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.KeyStore.Generate()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Instance\:SAPTeam.Kryptor.Generators.SafeRng}
{\xe \v SAPTeam.Kryptor.Generators.SafeRng\:Instance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SafeRng} SAPTeam.Kryptor.Generators.SafeRng.Instance = new {\b SafeRng}(){\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an static shared instance of the {\b SafeRng} class. }}\par
{
Definition at line {\b 16} of file {\b SafeRng.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v ProgressChanged\:SAPTeam.Kryptor.Generators.SafeRng}
{\xe \v SAPTeam.Kryptor.Generators.SafeRng\:ProgressChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<double> SAPTeam.Kryptor.Generators.SafeRng.ProgressChanged}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 11} of file {\b SafeRng.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Generators.SafeRng.Generate()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SafeRng.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.SchemaJsonConverter Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.SchemaJsonConverter}
{\xe \v SAPTeam.Kryptor.Cli.SchemaJsonConverter}
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
Inheritance diagram for SAPTeam.Kryptor.Cli.SchemaJsonConverter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d94/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_schema_json_converter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SchemaJsonConverter} (string schemaUrl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b WriteJson} (JsonWriter writer, object value, JsonSerializer serializer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override object {\b ReadJson} (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b CanConvert} (Type objectType)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b CanRead}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 8} of file {\b SchemaJsonConverter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SchemaJsonConverter\:SAPTeam.Kryptor.Cli.SchemaJsonConverter}
{\xe \v SAPTeam.Kryptor.Cli.SchemaJsonConverter\:SchemaJsonConverter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.SchemaJsonConverter.SchemaJsonConverter (string schemaUrl)}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CanConvert\:SAPTeam.Kryptor.Cli.SchemaJsonConverter}
{\xe \v SAPTeam.Kryptor.Cli.SchemaJsonConverter\:CanConvert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool SAPTeam.Kryptor.Cli.SchemaJsonConverter.CanConvert (Type objectType)}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReadJson\:SAPTeam.Kryptor.Cli.SchemaJsonConverter}
{\xe \v SAPTeam.Kryptor.Cli.SchemaJsonConverter\:ReadJson}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override object SAPTeam.Kryptor.Cli.SchemaJsonConverter.ReadJson (JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WriteJson\:SAPTeam.Kryptor.Cli.SchemaJsonConverter}
{\xe \v SAPTeam.Kryptor.Cli.SchemaJsonConverter\:WriteJson}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.SchemaJsonConverter.WriteJson (JsonWriter writer, object value, JsonSerializer serializer)}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b SchemaJsonConverter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v CanRead\:SAPTeam.Kryptor.Cli.SchemaJsonConverter}
{\xe \v SAPTeam.Kryptor.Cli.SchemaJsonConverter\:CanRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool SAPTeam.Kryptor.Cli.SchemaJsonConverter.CanRead{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b SchemaJsonConverter.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SchemaJsonConverter.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.Session Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session}
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents abstraction to implement sessions. }}\par
Inheritance diagram for SAPTeam.Kryptor.Client.Session:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d30/class_s_a_p_team_1_1_kryptor_1_1_client_1_1_session.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b StartAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ContinueWith} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b AddDependency} ({\b ISession} session)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsReady} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< TResponse > {\b SendRequest< TResponse >} ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnProgressChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDescriptionChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnPauseStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnStatusChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnSessionEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfNotStarted} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfEnded} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< bool > {\b RunAsync} ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Name}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Progress}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b Description}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsRunning}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPaused}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b IsHidden}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< string > {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependencies}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ISession} > {\b Dependents}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Client.ISession}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionStarted}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session started by SessionManager. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the progress value of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b DescriptionChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the description value is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionPaused}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is paused. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionUpdateEventArgs} > {\b SessionResumed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is resumed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b StatusChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the status of the session is changed. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< {\b SessionEventArgs} > {\b SessionEnded}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Occurs when the session is ended. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents abstraction to implement sessions. \par
}{
Definition at line {\b 8} of file {\b Session.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Session\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:Session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Client.Session.Session (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets all session properties to their default data. }}\par
{
Definition at line {\b 176} of file {\b Session.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Dependencies}, {\b SAPTeam.Kryptor.Client.Session.Dependents}, {\b SAPTeam.Kryptor.Client.Session.Messages}, and {\b SAPTeam.Kryptor.Client.Session.Timer}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddDependency\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:AddDependency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool SAPTeam.Kryptor.Client.Session.AddDependency ({\b ISession} session){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the given {\i session}   as dependency. this session won't start unless all dependecy session completed successfully. All dependencies must be set before starting the session otherwise it won't have any effects.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session to be added as dependency. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the {\i session}   is added to the dependency list and {\f2 false}  if the {\i session}   is not added because this session already started or duplicated {\i session}  . \par
}} }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 268} of file {\b Session.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Dependencies}, and {\b SAPTeam.Kryptor.Client.Session.Status}.}\par
}
{\xe \v ContinueWith\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:ContinueWith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void SAPTeam.Kryptor.Client.Session.ContinueWith ({\b ISession} session){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets this session as dependency for the given {\i session}  . The session waits for this session to successfully end.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
}
 }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 248} of file {\b Session.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.ISession.AddDependency()}, {\b SAPTeam.Kryptor.Client.Session.Dependents}, and {\b SAPTeam.Kryptor.Client.ISession.Status}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.Start()}.}\par
}
{\xe \v IsReady\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:IsReady}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool SAPTeam.Kryptor.Client.Session.IsReady (CancellationToken cancellationToken){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Asks from session whether it could be started right now.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the session has been ready and {\f2 false}  when it's not ready.\par
}} }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 280} of file {\b Session.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Dependencies}, {\b SAPTeam.Kryptor.Client.ISession.EndReason}, {\b SAPTeam.Kryptor.Client.ISession.Status}, and {\b SAPTeam.Kryptor.Client.Session.Status}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.StartAsync()}.}\par
}
{\xe \v OnDescriptionChanged\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:OnDescriptionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.Session.OnDescriptionChanged (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b DescriptionChanged} event. }}\par
}
{\xe \v OnPauseStatusChanged\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:OnPauseStatusChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.Session.OnPauseStatusChanged (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionPaused} or {\b SessionResumed} events. }}\par
{
Definition at line {\b 369} of file {\b Session.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.IsPaused}, {\b SAPTeam.Kryptor.Client.Session.SessionPaused}, and {\b SAPTeam.Kryptor.Client.Session.SessionResumed}.}\par
}
{\xe \v OnProgressChanged\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:OnProgressChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.Session.OnProgressChanged (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b ProgressChanged} event. }}\par
}
{\xe \v OnSessionEnded\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:OnSessionEnded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.Session.OnSessionEnded (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionEnded} event. }}\par
}
{\xe \v OnSessionStarted\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:OnSessionStarted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.Session.OnSessionStarted (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b SessionStarted} event. }}\par
}
{\xe \v OnStatusChanged\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:OnStatusChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.Session.OnStatusChanged (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers the {\b StatusChanged} event. }}\par
}
{\xe \v RunAsync\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:RunAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task< bool > SAPTeam.Kryptor.Client.Session.RunAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken){\f2 [abstract]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session in a managed manner. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true if the session ends successfully and false when the session ends with a handled error. \par
}}}{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.StartAsync()}.}\par
}
{\xe \v SendRequest< TResponse >\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:SendRequest< TResponse >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual async Task< TResponse > SAPTeam.Kryptor.Client.Session.SendRequest< TResponse > ({\b ISessionHost} sessionHost, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pauses this session and sends the request to the {\i sessionHost}   to process the request.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i request} \cell }{The request data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The response of the end user. \par
}} }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 315} of file {\b Session.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.IsPaused}.}\par
}
{\xe \v StartAsync\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:StartAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task SAPTeam.Kryptor.Client.Session.StartAsync ({\b ISessionHost} sessionHost, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the task asynchronously.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{A cancellation token to monitor the task. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new Task representation of the session. \par
}} }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 186} of file {\b Session.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.EndReason}, {\b SAPTeam.Kryptor.Client.Session.Exception}, {\b SAPTeam.Kryptor.Client.Session.IsReady()}, {\b SAPTeam.Kryptor.Client.Session.IsRunning}, {\b SAPTeam.Kryptor.Client.Session.RunAsync()}, {\b SAPTeam.Kryptor.Client.Session.Status}, {\b SAPTeam.Kryptor.Client.Session.ThrowIfEnded()}, and {\b SAPTeam.Kryptor.Client.Session.Timer}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionHolder.StartTask()}.}\par
}
{\xe \v ThrowIfEnded\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:ThrowIfEnded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.Session.ThrowIfEnded (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is ended. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i InvalidOperationException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 404} of file {\b Session.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Status}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.StartAsync()}.}\par
}
{\xe \v ThrowIfNotStarted\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:ThrowIfNotStarted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.Session.ThrowIfNotStarted (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws an InvalidOperationException if the session is not started. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i InvalidOperationException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 395} of file {\b Session.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.Status}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Dependencies\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:Dependencies}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b ISession}> SAPTeam.Kryptor.Client.Session.Dependencies{\f2 [get]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the dependency list of the session. This session only starts when all of dependency sessions where completed successfully. }}\par
{
Definition at line {\b 145} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.AddDependency()}, {\b SAPTeam.Kryptor.Client.Session.IsReady()}, and {\b SAPTeam.Kryptor.Client.Session.Session()}.}\par
}
{\xe \v Dependents\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:Dependents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b ISession}> SAPTeam.Kryptor.Client.Session.Dependents{\f2 [get]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the list of the dependents sessions. These sessions only starts when this session where completed successfully. Note this list is only intended for inter session communications and if you want to bind a session with this session you must call either {\b ContinueWith(ISession)} or add this session to the target session's {\b Dependencies} property. }}\par
{
Definition at line {\b 150} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.ContinueWith()}, and {\b SAPTeam.Kryptor.Client.Session.Session()}.}\par
}
{\xe \v Description\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:Description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual string SAPTeam.Kryptor.Client.Session.Description{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the description of this session. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 37} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.CompileSession()}, {\b SAPTeam.Kryptor.Cli.DecryptionSession.DecryptionSession()}, {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.DownloadSession()}, {\b SAPTeam.Kryptor.Cli.EncryptionSession.EncryptionSession()}, {\b SAPTeam.Kryptor.Cli.FileSaveSession.FileSaveSession()}, {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.FileSaveSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.RunAsync()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySession.RunAsync()}.}\par
}
{\xe \v EndReason\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:EndReason}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionEndReason} SAPTeam.Kryptor.Client.Session.EndReason{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the reason of ending the session. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 113} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}, {\b SAPTeam.Kryptor.Client.ManagedSession.SetEndStatus()}, {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost.Start()}, and {\b SAPTeam.Kryptor.Client.Session.StartAsync()}.}\par
}
{\xe \v Exception\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:Exception}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Exception SAPTeam.Kryptor.Client.Session.Exception{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the thrown exception during session run. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 125} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession.RunAsync()}, {\b SAPTeam.Kryptor.Client.ManagedSession.SetEndStatus()}, and {\b SAPTeam.Kryptor.Client.Session.StartAsync()}.}\par
}
{\xe \v IsHidden\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:IsHidden}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool SAPTeam.Kryptor.Client.Session.IsHidden{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is hidden. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 81} of file {\b Session.cs}.}\par
}
{\xe \v IsPaused\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:IsPaused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.Session.IsPaused{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is paused. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 55} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.OnPauseStatusChanged()}, and {\b SAPTeam.Kryptor.Client.Session.SendRequest< TResponse >()}.}\par
}
{\xe \v IsRunning\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:IsRunning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.Session.IsRunning{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether this session is running. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 52} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.StartAsync()}.}\par
}
{\xe \v Messages\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:Messages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<string> SAPTeam.Kryptor.Client.Session.Messages{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message queue of the session. All message will be handled and shown by client application. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 140} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DecryptionSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}, and {\b SAPTeam.Kryptor.Client.Session.Session()}.}\par
}
{\xe \v Name\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual string SAPTeam.Kryptor.Client.Session.Name{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the user-friendly name of the session. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 19} of file {\b Session.cs}.}\par
}
{\xe \v Progress\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:Progress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double SAPTeam.Kryptor.Client.Session.Progress{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the progress percentage of this session. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 22} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.CrackSession()}, {\b SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.RunAsync()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySession.RunAsync()}.}\par
}
{\xe \v Status\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:Status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionStatus} SAPTeam.Kryptor.Client.Session.Status{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 84} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.AddDependency()}, {\b SAPTeam.Kryptor.Client.Session.IsReady()}, {\b SAPTeam.Kryptor.Client.ManagedSession.SetEndStatus()}, {\b SAPTeam.Kryptor.Client.Session.StartAsync()}, {\b SAPTeam.Kryptor.Client.Session.ThrowIfEnded()}, and {\b SAPTeam.Kryptor.Client.Session.ThrowIfNotStarted()}.}\par
}
{\xe \v Timer\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:Timer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Stopwatch SAPTeam.Kryptor.Client.Session.Timer{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the stopwatch for this session. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISession} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 137} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.Session()}, and {\b SAPTeam.Kryptor.Client.Session.StartAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v DescriptionChanged\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:DescriptionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionUpdateEventArgs}> SAPTeam.Kryptor.Client.Session.DescriptionChanged}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 159} of file {\b Session.cs}.}\par
}
{\xe \v ProgressChanged\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:ProgressChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionUpdateEventArgs}> SAPTeam.Kryptor.Client.Session.ProgressChanged}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 156} of file {\b Session.cs}.}\par
}
{\xe \v SessionEnded\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:SessionEnded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionEventArgs}> SAPTeam.Kryptor.Client.Session.SessionEnded}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 165} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession.KeyStoreLoadSession()}.}\par
}
{\xe \v SessionPaused\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:SessionPaused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionUpdateEventArgs}> SAPTeam.Kryptor.Client.Session.SessionPaused}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 168} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.OnPauseStatusChanged()}.}\par
}
{\xe \v SessionResumed\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:SessionResumed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionUpdateEventArgs}> SAPTeam.Kryptor.Client.Session.SessionResumed}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 171} of file {\b Session.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Session.OnPauseStatusChanged()}.}\par
}
{\xe \v SessionStarted\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:SessionStarted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionEventArgs}> SAPTeam.Kryptor.Client.Session.SessionStarted}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 153} of file {\b Session.cs}.}\par
}
{\xe \v StatusChanged\:SAPTeam.Kryptor.Client.Session}
{\xe \v SAPTeam.Kryptor.Client.Session\:StatusChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<{\b SessionEventArgs}> SAPTeam.Kryptor.Client.Session.StatusChanged}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 162} of file {\b Session.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.SessionContainer Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer}
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents container to store sessions. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Add} ({\b SessionHolder} sessionHolder)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds new session to the container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddMonitoringTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds just a task to {\b Tasks}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Remove} (int id)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes an entry from the container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} ({\b ISessionHost} sessionHost, int maxRunningSessions)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b SessionContainer} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task {\b WaitAll} (CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits until all sessions have been ended. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WaitForRunningTasks} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits for all running tasks at the moment to end. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Cancel} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends cancellation request to all cancellation tokens in this container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionGroup} {\b SetSessionGroup} ({\b SessionGroup} sessionGroup)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the provided {\i sessionGroup}   as the SessionManager's cache system. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b NewSession} ({\b ISession} session, bool autoRemove, bool autoStart)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StartQueuedSessions} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts registered sessions in a managed way. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b SessionHolder} {\b WrapSession} ({\b ISession} session, bool autoRemove)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wraps the given {\i session}   into a {\b SessionHolder}. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ISession}[] {\b Sessions}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an array of all sessions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task[] {\b Tasks}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an array of all tasks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource[] {\b TokenSources}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an array of all cancellation tokens. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ICollection< {\b SessionHolder} > {\b Holders}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all session holders. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b MaxRunningSessions}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the maximum allowed running sessions. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents container to store sessions. \par
}{
Definition at line {\b 5} of file {\b SessionManager.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SessionContainer\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:SessionContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Client.SessionContainer.SessionContainer ({\b ISessionHost} sessionHost, int maxRunningSessions)}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b SessionContainer} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i maxRunningSessions} \cell }{The maximum allowed running sessions. \cell }
{\row }
}
}{
Definition at line {\b 26} of file {\b SessionManager.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionContainer.MaxRunningSessions}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionContainer.Add ({\b SessionHolder} sessionHolder)}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds new session to the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The unique identifier of this entry.\par
}}}{
Definition at line {\b 63} of file {\b SessionContainer.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionContainer.NewSession()}.}\par
}
{\xe \v AddMonitoringTask\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:AddMonitoringTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionContainer.AddMonitoringTask (Task task)}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds just a task to {\b Tasks}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be added. \cell }
{\row }
}
}{
Definition at line {\b 81} of file {\b SessionContainer.cs}.}\par
}
{\xe \v Cancel\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:Cancel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionContainer.Cancel ()}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends cancellation request to all cancellation tokens in this container. }}\par
{
Definition at line {\b 77} of file {\b SessionManager.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionContainer.TokenSources}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionHost.End()}, and {\b SAPTeam.Kryptor.Client.SessionContainer.WaitAll()}.}\par
}
{\xe \v NewSession\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:NewSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionContainer.NewSession ({\b ISession} session, bool autoRemove, bool autoStart)}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager's task schedular to start the session. This value is ignored when a valid session group was set. \cell }
{\row }
}
}{
Definition at line {\b 145} of file {\b SessionManager.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionContainer.Add()}, {\b SAPTeam.Kryptor.Client.SessionGroup.Add()}, {\b SAPTeam.Kryptor.Client.SessionContainer.StartQueuedSessions()}, {\b SAPTeam.Kryptor.Client.SessionGroup.ThrowIfLocked()}, and {\b SAPTeam.Kryptor.Client.SessionContainer.WrapSession()}.}\par
}
{\xe \v Remove\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:Remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionContainer.Remove (int id)}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes an entry from the container. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{The unique identifier returned by Add call. \cell }
{\row }
}
}{
Definition at line {\b 96} of file {\b SessionContainer.cs}.}\par
}
{\xe \v SetSessionGroup\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:SetSessionGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionGroup} SAPTeam.Kryptor.Client.SessionContainer.SetSessionGroup ({\b SessionGroup} sessionGroup)}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the provided {\i sessionGroup}   as the SessionManager's cache system. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The provided session group must be unused and unlocked. If a session group is already set, it must be fully finnished, otherwise it will throw a InvalidOperationException. A new instance of the {\b SessionGroup} class is always unlocked. It's highly recommended to use a new session group. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionGroup} \cell }{A new session group with unlocked status. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\i sessionGroup}   \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i InvalidOperationException} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ArgumentNullException} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ArgumentException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 101} of file {\b SessionManager.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionGroup.IsLocked}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DecryptionSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}.}\par
}
{\xe \v StartQueuedSessions\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:StartQueuedSessions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionContainer.StartQueuedSessions ()}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts registered sessions in a managed way. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the core of the {\b Session} based Application Model logic. This task scheduler logic works with checking the number of running sessions (sessions with status {\b SessionStatus.Running}) and checking the waiting sessions (sessions with status {\b SessionStatus.NotStarted} and be ready). The ready to run sessions determined by calling the {\b ISession.IsReady(CancellationToken)} method, if the return value is {\f2 true}  the session will be added to the waiting list, otherwise it will be ignored and rechecked at the next run of the task scheduler. There is some important notes about this process. \par
The task scheduler only runs after each {\b NewSession(ISession, bool, bool)}calls and session ends. so if there is two sessions and the second session does not get ready until first session end, the task scheduler won't try to run that session and it will stuck at waiting status. \par
The {\b ISession.IsReady(CancellationToken)} should not throw ANY exceptions at all. it may break the scheduler. Although there is some layers to handle exceptions, but the {\b ISession.IsReady(CancellationToken)} is only allwed to response with {\f2 true}  or {\f2 false} . \par
}{
Definition at line {\b 208} of file {\b SessionManager.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionHost.End()}, {\b SAPTeam.Kryptor.Client.SessionContainer.NewSession()}, {\b SAPTeam.Kryptor.Cli.DecryptionSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}.}\par
}
{\xe \v WaitAll\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:WaitAll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task SAPTeam.Kryptor.Client.SessionContainer.WaitAll (CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits until all sessions have been ended. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method also waits for sessions that are not started yet. If the {\i cancellationToken}   was cancelled, this method will cancel all existing tokens in this container and waits for all of them to end. This method intended to be used by sub-session models. in standard session host based model, the monitoring, cancelling and ending is managed by various parts. But in sub-session models, you could achieve all of these features in this method. Using this method in session host is not recommended at all because this method is not intended for that porpose. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
}{
Definition at line {\b 45} of file {\b SessionManager.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionContainer.Cancel()}, and {\b SAPTeam.Kryptor.Client.SessionContainer.Sessions}.}\par
}
{\xe \v WaitForRunningTasks\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:WaitForRunningTasks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionContainer.WaitForRunningTasks ()}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits for all running tasks at the moment to end. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method just waits for running tasks and does not care about waiting sessions (as they don't have a registered task). A Task must be registered by {\b AddMonitoringTask(Task)} that waits for not started sessions before calling this method. This method only intended to be used in {\b ISessionHost.End(bool)}. so using it in sub-session models is not recommended as it could be lead to unexpected session exit and losing control of sub-sessions. it's highly recommended to use {\b WaitAll(CancellationToken)} method in that situation. \par
}{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionHost.End()}.}\par
}
{\xe \v WrapSession\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:WrapSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b SessionHolder} SAPTeam.Kryptor.Client.SessionContainer.WrapSession ({\b ISession} session, bool autoRemove){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wraps the given {\i session}   into a {\b SessionHolder}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 174} of file {\b SessionManager.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.ISession.Status}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionContainer.NewSession()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Holders\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:Holders}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ICollection<{\b SessionHolder}> SAPTeam.Kryptor.Client.SessionContainer.Holders{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all session holders. }}\par
{
Definition at line {\b 49} of file {\b SessionContainer.cs}.}\par
}
{\xe \v MaxRunningSessions\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:MaxRunningSessions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionContainer.MaxRunningSessions{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the maximum allowed running sessions. }}\par
{
Definition at line {\b 15} of file {\b SessionManager.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionContainer.SessionContainer()}.}\par
}
{\xe \v Sessions\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:Sessions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ISession} [] SAPTeam.Kryptor.Client.SessionContainer.Sessions{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an array of all sessions. }}\par
{
Definition at line {\b 18} of file {\b SessionContainer.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost.Start()}, and {\b SAPTeam.Kryptor.Client.SessionContainer.WaitAll()}.}\par
}
{\xe \v Tasks\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:Tasks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task [] SAPTeam.Kryptor.Client.SessionContainer.Tasks{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an array of all tasks. }}\par
{
Definition at line {\b 31} of file {\b SessionContainer.cs}.}\par
}
{\xe \v TokenSources\:SAPTeam.Kryptor.Client.SessionContainer}
{\xe \v SAPTeam.Kryptor.Client.SessionContainer\:TokenSources}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CancellationTokenSource [] SAPTeam.Kryptor.Client.SessionContainer.TokenSources{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets an array of all cancellation tokens. }}\par
{
Definition at line {\b 36} of file {\b SessionContainer.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionContainer.Cancel()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer.cs}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionManager.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.SessionEventArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.SessionEventArgs}
{\xe \v SAPTeam.Kryptor.Client.SessionEventArgs}
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold session events data. }}\par
Inheritance diagram for SAPTeam.Kryptor.Client.SessionEventArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d3f/class_s_a_p_team_1_1_kryptor_1_1_client_1_1_session_event_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b PreviousStatus}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the value of the session status before triggering this event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the end reason of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Exception {\b Exception}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the exception value of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b Messages}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current message queue of the session. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionUpdateEventArgs}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Progress}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current progress value of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Description}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current description value of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPause}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether the session is paused. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold session events data. \par
}{
Definition at line {\b 6} of file {\b SessionEventArgs.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v EndReason\:SAPTeam.Kryptor.Client.SessionEventArgs}
{\xe \v SAPTeam.Kryptor.Client.SessionEventArgs\:EndReason}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionEndReason} SAPTeam.Kryptor.Client.SessionEventArgs.EndReason{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the end reason of the session. }}\par
{
Definition at line {\b 21} of file {\b SessionEventArgs.cs}.}\par
}
{\xe \v Exception\:SAPTeam.Kryptor.Client.SessionEventArgs}
{\xe \v SAPTeam.Kryptor.Client.SessionEventArgs\:Exception}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Exception SAPTeam.Kryptor.Client.SessionEventArgs.Exception{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the exception value of the session. }}\par
{
Definition at line {\b 26} of file {\b SessionEventArgs.cs}.}\par
}
{\xe \v Messages\:SAPTeam.Kryptor.Client.SessionEventArgs}
{\xe \v SAPTeam.Kryptor.Client.SessionEventArgs\:Messages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string [] SAPTeam.Kryptor.Client.SessionEventArgs.Messages{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current message queue of the session. }}\par
{
Definition at line {\b 31} of file {\b SessionEventArgs.cs}.}\par
}
{\xe \v PreviousStatus\:SAPTeam.Kryptor.Client.SessionEventArgs}
{\xe \v SAPTeam.Kryptor.Client.SessionEventArgs\:PreviousStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionStatus} SAPTeam.Kryptor.Client.SessionEventArgs.PreviousStatus{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the value of the session status before triggering this event. }}\par
{
Definition at line {\b 11} of file {\b SessionEventArgs.cs}.}\par
}
{\xe \v Status\:SAPTeam.Kryptor.Client.SessionEventArgs}
{\xe \v SAPTeam.Kryptor.Client.SessionEventArgs\:Status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionStatus} SAPTeam.Kryptor.Client.SessionEventArgs.Status{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current status of the session. }}\par
{
Definition at line {\b 16} of file {\b SessionEventArgs.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEventArgs.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.SessionGroup Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup}
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides High-Performance session monitoring solution. }}\par
Inheritance diagram for SAPTeam.Kryptor.Client.SessionGroup:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d38/class_s_a_p_team_1_1_kryptor_1_1_client_1_1_session_group.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ThrowIfLocked} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws a new InvalidOperationException when the session group is locked. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Add} ({\b SessionHolder} item)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Clear} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Contains} ({\b SessionHolder} item)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CopyTo} ({\b SessionHolder}[] array, int arrayIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Remove} ({\b SessionHolder} item)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerator< {\b SessionHolder} > {\b GetEnumerator} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddHooks} ({\b SessionHolder} sessionHolder)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wires up hooks to listen for session events. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Waiting}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the sessions with {\b SessionStatus.NotStarted} status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Running}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the sessions with {\b SessionStatus.Running} status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Ended}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the sessions with {\b SessionStatus.Ended} status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Completed}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the ended sessions with {\b SessionEndReason.Completed} end reason. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Cancelled}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the ended sessions with {\b SessionEndReason.Cancelled} end reason. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Failed}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the ended sessions with {\b SessionEndReason.Failed} end reason. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Skipped}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the ended sessions with {\b SessionEndReason.Skipped} end reason. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Unknown}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the ended sessions with {\b SessionEndReason.None} end reason. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionStatus} {\b Status}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the brief report of all session's statuses. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionEndReason} {\b EndReason}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a brief report of all session's end reasons. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string[] {\b Messages}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all session messages. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stopwatch {\b Timer} = new Stopwatch(){\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the timer of the session group. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Progress}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the average progress percentage of all sessions. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsLocked}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a bool indicates the lock status of this session group. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Count}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsReadOnly}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides High-Performance session monitoring solution. \par
}{
Definition at line {\b 10} of file {\b SessionGroupStorage.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionGroup.Add ({\b SessionHolder} item)}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 43} of file {\b SessionGroupStorage.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionGroup.AddHooks()}, {\b SAPTeam.Kryptor.Client.ISession.IsReady()}, {\b SAPTeam.Kryptor.Client.SessionHolder.Session}, {\b SAPTeam.Kryptor.Client.ISession.Status}, and {\b SAPTeam.Kryptor.Client.SessionGroup.ThrowIfLocked()}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionContainer.NewSession()}.}\par
}
{\xe \v AddHooks\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:AddHooks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionGroup.AddHooks ({\b SessionHolder} sessionHolder){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wires up hooks to listen for session events. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHolder} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 132} of file {\b SessionGroup.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionHolder.Session}, and {\b SAPTeam.Kryptor.Client.SessionGroup.Waiting}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionGroup.Add()}.}\par
}
{\xe \v Clear\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionGroup.Clear ()}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 73} of file {\b SessionGroupStorage.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionGroup.ThrowIfLocked()}.}\par
}
{\xe \v Contains\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Contains}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.SessionGroup.Contains ({\b SessionHolder} item)}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v CopyTo\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:CopyTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionGroup.CopyTo ({\b SessionHolder}[] array, int arrayIndex)}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v GetEnumerator\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:GetEnumerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerator< {\b SessionHolder} > SAPTeam.Kryptor.Client.SessionGroup.GetEnumerator ()}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v Remove\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.SessionGroup.Remove ({\b SessionHolder} item)}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 86} of file {\b SessionGroupStorage.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionGroup.ThrowIfLocked()}.}\par
}
{\xe \v ThrowIfLocked\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:ThrowIfLocked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionGroup.ThrowIfLocked ()}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Throws a new InvalidOperationException when the session group is locked. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i InvalidOperationException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 28} of file {\b SessionGroupStorage.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionGroup.IsLocked}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionGroup.Add()}, {\b SAPTeam.Kryptor.Client.SessionGroup.Clear()}, {\b SAPTeam.Kryptor.Client.SessionContainer.NewSession()}, and {\b SAPTeam.Kryptor.Client.SessionGroup.Remove()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Cancelled\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Cancelled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionGroup.Cancelled{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the ended sessions with {\b SessionEndReason.Cancelled} end reason. }}\par
{
Definition at line {\b 57} of file {\b SessionGroup.cs}.}\par
}
{\xe \v Completed\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Completed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionGroup.Completed{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the ended sessions with {\b SessionEndReason.Completed} end reason. }}\par
{
Definition at line {\b 52} of file {\b SessionGroup.cs}.}\par
}
{\xe \v Count\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionGroup.Count{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 37} of file {\b SessionGroupStorage.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost.GetSmartProgress()}.}\par
}
{\xe \v Ended\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Ended}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionGroup.Ended{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the sessions with {\b SessionStatus.Ended} status. }}\par
{
Definition at line {\b 47} of file {\b SessionGroup.cs}.}\par
}
{\xe \v EndReason\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:EndReason}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionEndReason} SAPTeam.Kryptor.Client.SessionGroup.EndReason{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a brief report of all session's end reasons. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When all sessions ended successfully, the end reason would be {\b SessionEndReason.Completed}. \par
When there is any cancelled session, the end reason would be {\b SessionEndReason.Cancelled}. \par
When there is any failed session, the end reason would be {\b SessionEndReason.Failed}. \par
When there is any skipped session, the end reason would be {\b SessionEndReason.Skipped}. \par
When there is any wierd session or when the session group is not started or still running with no ended session, the end reason would be {\b SessionEndReason.None}. \par
Except for the first case, in other cases the first occurrence is considered. even when there are still running or not started sessions. \par
}{
Definition at line {\b 105} of file {\b SessionGroup.cs}.}\par
}
{\xe \v Failed\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Failed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionGroup.Failed{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the ended sessions with {\b SessionEndReason.Failed} end reason. }}\par
{
Definition at line {\b 62} of file {\b SessionGroup.cs}.}\par
}
{\xe \v IsLocked\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:IsLocked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.SessionGroup.IsLocked{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a bool indicates the lock status of this session group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whenever the first session has been started, the session group will be locked. \par
}{
Definition at line {\b 22} of file {\b SessionGroupStorage.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionContainer.SetSessionGroup()}, and {\b SAPTeam.Kryptor.Client.SessionGroup.ThrowIfLocked()}.}\par
}
{\xe \v IsReadOnly\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:IsReadOnly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.SessionGroup.IsReadOnly{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 40} of file {\b SessionGroupStorage.cs}.}\par
}
{\xe \v Messages\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Messages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string [] SAPTeam.Kryptor.Client.SessionGroup.Messages{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets all session messages. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This list only updated whenever a session is ended. \par
}{
Definition at line {\b 113} of file {\b SessionGroup.cs}.}\par
}
{\xe \v Progress\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Progress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double SAPTeam.Kryptor.Client.SessionGroup.Progress{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the average progress percentage of all sessions. }}\par
{
Definition at line {\b 126} of file {\b SessionGroup.cs}.}\par
}
{\xe \v Running\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Running}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionGroup.Running{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the sessions with {\b SessionStatus.Running} status. }}\par
{
Definition at line {\b 42} of file {\b SessionGroup.cs}.}\par
}
{\xe \v Skipped\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Skipped}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionGroup.Skipped{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the ended sessions with {\b SessionEndReason.Skipped} end reason. }}\par
{
Definition at line {\b 67} of file {\b SessionGroup.cs}.}\par
}
{\xe \v Status\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionStatus} SAPTeam.Kryptor.Client.SessionGroup.Status{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the brief report of all session's statuses. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When there are no sessions started yet, the status would be {\b SessionStatus.NotStarted}. \par
Whenever the first session is started, the status would be {\b SessionStatus.Running}. \par
When all of the sessions is ended, the status would be {\b SessionStatus.Ended}. \par
}{
Definition at line {\b 84} of file {\b SessionGroup.cs}.}\par
}
{\xe \v Timer\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Timer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Stopwatch SAPTeam.Kryptor.Client.SessionGroup.Timer = new Stopwatch(){\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the timer of the session group. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This timer started when the first session is started and stopped when the last session is ended. \par
}{
Definition at line {\b 121} of file {\b SessionGroup.cs}.}\par
}
{\xe \v Unknown\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Unknown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionGroup.Unknown{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the ended sessions with {\b SessionEndReason.None} end reason. }}\par
{
Definition at line {\b 72} of file {\b SessionGroup.cs}.}\par
}
{\xe \v Waiting\:SAPTeam.Kryptor.Client.SessionGroup}
{\xe \v SAPTeam.Kryptor.Client.SessionGroup\:Waiting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionGroup.Waiting{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the number of the sessions with {\b SessionStatus.NotStarted} status. }}\par
{
Definition at line {\b 37} of file {\b SessionGroup.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionGroup.AddHooks()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionGroup.cs}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionGroupStorage.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.SessionHolder Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.SessionHolder}
{\xe \v SAPTeam.Kryptor.Client.SessionHolder}
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to store session and related informations. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHolder} ({\b ISession} session, CancellationTokenSource tokenSource)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b SessionHolder} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Task} {\b StartTask} ({\b ISessionHost} sessionHost, bool throwIfRunning=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session task. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Id}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the id of the session holder in the container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ISession} {\b Session}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b Task}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the task of this session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b TokenSource}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the cancellation token source that controls the running session. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to store session and related informations. \par
}{
Definition at line {\b 6} of file {\b SessionHolder.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SessionHolder\:SAPTeam.Kryptor.Client.SessionHolder}
{\xe \v SAPTeam.Kryptor.Client.SessionHolder\:SessionHolder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Client.SessionHolder.SessionHolder ({\b ISession} session, CancellationTokenSource tokenSource)}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b SessionHolder} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{The session instance. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tokenSource} \cell }{The cancellation token source that controls the running task. \cell }
{\row }
}
}{
Definition at line {\b 39} of file {\b SessionHolder.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.ISession.Status}, and {\b SAPTeam.Kryptor.Client.SessionHolder.TokenSource}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v StartTask\:SAPTeam.Kryptor.Client.SessionHolder}
{\xe \v SAPTeam.Kryptor.Client.SessionHolder\:StartTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Task} SAPTeam.Kryptor.Client.SessionHolder.StartTask ({\b ISessionHost} sessionHost, bool throwIfRunning = {\f2 true})}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the session task. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sessionHost} \cell }{The parent session host. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i throwIfRunning} \cell }{Throw exception if the task already started. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i InvalidOperationException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 60} of file {\b SessionHolder.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Session.StartAsync()}, {\b SAPTeam.Kryptor.Client.SessionHolder.Task}, and {\b SAPTeam.Kryptor.Client.SessionHolder.TokenSource}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Id\:SAPTeam.Kryptor.Client.SessionHolder}
{\xe \v SAPTeam.Kryptor.Client.SessionHolder\:Id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.SessionHolder.Id{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the id of the session holder in the container. }}\par
{
Definition at line {\b 11} of file {\b SessionHolder.cs}.}\par
}
{\xe \v Session\:SAPTeam.Kryptor.Client.SessionHolder}
{\xe \v SAPTeam.Kryptor.Client.SessionHolder\:Session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ISession} SAPTeam.Kryptor.Client.SessionHolder.Session{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session instance. }}\par
{
Definition at line {\b 16} of file {\b SessionHolder.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionGroup.Add()}, and {\b SAPTeam.Kryptor.Client.SessionGroup.AddHooks()}.}\par
}
{\xe \v Task\:SAPTeam.Kryptor.Client.SessionHolder}
{\xe \v SAPTeam.Kryptor.Client.SessionHolder\:Task}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task SAPTeam.Kryptor.Client.SessionHolder.Task{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the task of this session. }}\par
{
Definition at line {\b 21} of file {\b SessionHolder.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionHolder.StartTask()}.}\par
}
{\xe \v TokenSource\:SAPTeam.Kryptor.Client.SessionHolder}
{\xe \v SAPTeam.Kryptor.Client.SessionHolder\:TokenSource}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CancellationTokenSource SAPTeam.Kryptor.Client.SessionHolder.TokenSource{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the cancellation token source that controls the running session. }}\par
{
Definition at line {\b 26} of file {\b SessionHolder.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionHolder.SessionHolder()}, and {\b SAPTeam.Kryptor.Client.SessionHolder.StartTask()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHolder.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost}
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
Inheritance diagram for SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d88/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_key_store_analyze_1_1_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ({\b GlobalOptions} globalOptions, int jobs, string keystore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 5} of file {\b cli/Kryptor.Cli.Shared/KeyStoreAnalyze/SessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SessionHost\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost\:SessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost.SessionHost ({\b GlobalOptions} globalOptions, int jobs, string keystore)}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b cli/Kryptor.Cli.Shared/KeyStoreAnalyze/SessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 18} of file {\b cli/Kryptor.Cli.Shared/KeyStoreAnalyze/SessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionHost.Container}, {\b SAPTeam.Kryptor.Client.Session.ContinueWith()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.CreateKeyStoreLoadSession()}, {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession.Found}, {\b SAPTeam.Kryptor.KeyStore.Keys}, {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession.KeyStore}, {\b SAPTeam.Kryptor.Client.SessionHost.NewSession()}, {\b SAPTeam.Kryptor.Client.SessionContainer.Sessions}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cli/Kryptor.Cli.Shared/KeyStoreAnalyze/SessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.Wordlist.SessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
Inheritance diagram for SAPTeam.Kryptor.Cli.Wordlist.SessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d3a/class_s_a_p_team_1_1_kryptor_1_1_cli_1_1_wordlist_1_1_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b FinalizeInstallation} ({\b WordlistIndexEntry} entry)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CliSessionHost} ({\b GlobalOptions} globalOptions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateLocalIndex} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ListInstalledWordlists} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b GetInstallationPermission} ({\b WordlistIndexEntry} entry)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RemoveWordlist} (string id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SortIndex} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Log} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LogError} (string message=null)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DebugLog} (string message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} (bool showOverall, bool showRemaining)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} (bool showOverall, bool showRemaining=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgress} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task {\b ShowProgressMonitored} ({\b SessionGroup} sessionGroup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b LoadKeyStore} (string keyStore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStoreLoadSession} {\b CreateKeyStoreLoadSession} (string keyStore)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndex} {\b LocalIndex}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual string {\b LocalIndexPath}{\f2  [get]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Cli.CliSessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Quiet}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoColor}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NoInteractions}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsOutputRedirected}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PauseRequest} {\b Request} = new {\b PauseRequest}(null, false){\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasRequest}{\f2  [get]}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ConsoleKeyInfo {\b KeyQueue}{\f2  [get, set]}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.SessionHost}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SessionHost\:SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost\:SessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.Wordlist.SessionHost.SessionHost ({\b GlobalOptions} globalOptions)}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v FinalizeInstallation\:SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost\:FinalizeInstallation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.Wordlist.SessionHost.FinalizeInstallation ({\b WordlistIndexEntry} entry)}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.Add()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.LocalIndex}, and {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.UpdateLocalIndex()}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession.RunAsync()}.}\par
}
{\xe \v GetInstallationPermission\:SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost\:GetInstallationPermission}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Cli.Wordlist.SessionHost.GetInstallationPermission ({\b WordlistIndexEntry} entry){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.ContainsId()}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Hash}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Id}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.LocalIndex}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.LogError()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.RemoveWordlist()}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost.Start()}.}\par
}
{\xe \v ListInstalledWordlists\:SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost\:ListInstalledWordlists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.Wordlist.SessionHost.ListInstalledWordlists (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.LocalIndex}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.Log()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.LogError()}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.Wordlists}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost.Start()}.}\par
}
{\xe \v RemoveWordlist\:SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost\:RemoveWordlist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.Wordlist.SessionHost.RemoveWordlist (string id){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 85} of file {\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.InstallDirectory}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.LocalIndex}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.UpdateLocalIndex()}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.Wordlists}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.GetInstallationPermission()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost.Start()}.}\par
}
{\xe \v SortIndex\:SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost\:SortIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.Wordlist.SessionHost.SortIndex (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 99} of file {\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.LocalIndex}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.UpdateLocalIndex()}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.Wordlists}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Start()}.}\par
}
{\xe \v Start\:SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.Cli.Wordlist.SessionHost.Start ({\b ClientContext} context)}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
}{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 29} of file {\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.CliSessionHost.DebugLog()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.LocalIndexPath}.}\par
}
{\xe \v UpdateLocalIndex\:SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost\:UpdateLocalIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.Wordlist.SessionHost.UpdateLocalIndex (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.FinalizeInstallation()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.RemoveWordlist()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.SortIndex()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v LocalIndex\:SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost\:LocalIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WordlistIndex} SAPTeam.Kryptor.Cli.Wordlist.SessionHost.LocalIndex{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.FinalizeInstallation()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.GetInstallationPermission()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.ListInstalledWordlists()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.RemoveWordlist()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.SortIndex()}, {\b SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost.Start()}.}\par
}
{\xe \v LocalIndexPath\:SAPTeam.Kryptor.Cli.Wordlist.SessionHost}
{\xe \v SAPTeam.Kryptor.Cli.Wordlist.SessionHost\:LocalIndexPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual string SAPTeam.Kryptor.Cli.Wordlist.SessionHost.LocalIndexPath{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.SessionHost Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.SessionHost}
{\xe \v SAPTeam.Kryptor.Client.SessionHost}
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents abstraction for session hosts. }}\par
Inheritance diagram for SAPTeam.Kryptor.Client.SessionHost:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d39/class_s_a_p_team_1_1_kryptor_1_1_client_1_1_session_host.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ({\b ClientContext} context)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b End} (bool cancelled)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b NewSession} ({\b ISession} session, bool autoRemove=false, bool autoStart=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b MonitorTask} (Task task)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< TResponse > {\b OnSessionRequest< TResponse >} ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionHost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionContainer} {\b Container}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verbose}{\f2  [get, protected set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CancellationTokenSource {\b MasterToken}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.Client.ISessionHost}\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents abstraction for session hosts. \par
}{
Definition at line {\b 6} of file {\b src/Kryptor.Client/SessionHost.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SessionHost\:SAPTeam.Kryptor.Client.SessionHost}
{\xe \v SAPTeam.Kryptor.Client.SessionHost\:SessionHost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Client.SessionHost.SessionHost (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes all {\b SessionHost} instances. }}\par
{
Definition at line {\b 26} of file {\b src/Kryptor.Client/SessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionHost.Container}, and {\b SAPTeam.Kryptor.Client.SessionHost.MasterToken}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v End\:SAPTeam.Kryptor.Client.SessionHost}
{\xe \v SAPTeam.Kryptor.Client.SessionHost\:End}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void SAPTeam.Kryptor.Client.SessionHost.End (bool cancelled){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ends the host session.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancelled} \cell }{Whether the host session ending triggered by cancel request. \cell }
{\row }
}
 }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 36} of file {\b src/Kryptor.Client/SessionHost.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionContainer.Cancel()}, {\b SAPTeam.Kryptor.Client.SessionHost.Container}, {\b SAPTeam.Kryptor.Client.SessionHost.MasterToken}, {\b SAPTeam.Kryptor.Client.SessionContainer.StartQueuedSessions()}, and {\b SAPTeam.Kryptor.Client.SessionContainer.WaitForRunningTasks()}.}\par
}
{\xe \v MonitorTask\:SAPTeam.Kryptor.Client.SessionHost}
{\xe \v SAPTeam.Kryptor.Client.SessionHost\:MonitorTask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void SAPTeam.Kryptor.Client.SessionHost.MonitorTask (Task task){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds given task to the task pool and be monitored by the session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i task} \cell }{The task to be monitored. \cell }
{\row }
}
 }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored()}, and {\b SAPTeam.Kryptor.Cli.CliSessionHost.ShowProgressMonitored()}.}\par
}
{\xe \v NewSession\:SAPTeam.Kryptor.Client.SessionHost}
{\xe \v SAPTeam.Kryptor.Client.SessionHost\:NewSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void SAPTeam.Kryptor.Client.SessionHost.NewSession ({\b ISession} session, bool autoRemove = {\f2 false}, bool autoStart = {\f2 true}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts a new session in this session host.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i session} \cell }{A session with status {\b SessionStatus.NotStarted}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoRemove} \cell }{Determines whether to automatically remove session after end. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i autoStart} \cell }{Determines whether to automatically call the session manager to start this session. \cell }
{\row }
}
 }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.LoadKeyStore()}, {\b SAPTeam.Kryptor.Cli.DecryptionSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost.Start()}.}\par
}
{\xe \v OnSessionRequest< TResponse >\:SAPTeam.Kryptor.Client.SessionHost}
{\xe \v SAPTeam.Kryptor.Client.SessionHost\:OnSessionRequest< TResponse >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Task< TResponse > SAPTeam.Kryptor.Client.SessionHost.OnSessionRequest< TResponse > ({\b ISession} session, {\b SessionRequest}< TResponse > request, CancellationToken cancellationToken){\f2 [abstract]}}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles requests from the sessions.\par
This method should send requests to user and if it's not possible, it could return the {\b SessionRequest<TResponse>.DefaultValue} or throws an exception. The thrown exception would be catched on the sender session and the session will fail.  }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Start\:SAPTeam.Kryptor.Client.SessionHost}
{\xe \v SAPTeam.Kryptor.Client.SessionHost\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.SessionHost.Start ({\b ClientContext} context){\f2 [abstract]}}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the host session in the current thread.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i context} \cell }{The caller context. \cell }
{\row }
}
 }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Container\:SAPTeam.Kryptor.Client.SessionHost}
{\xe \v SAPTeam.Kryptor.Client.SessionHost\:Container}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionContainer} SAPTeam.Kryptor.Client.SessionHost.Container{\f2 [get]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the session container. }}\par
{
Definition at line {\b 13} of file {\b src/Kryptor.Client/SessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionHost.End()}, {\b SAPTeam.Kryptor.Client.SessionHost.SessionHost()}, {\b SAPTeam.Kryptor.Cli.DecryptionSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost.Start()}, {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost.Start()}.}\par
}
{\xe \v MasterToken\:SAPTeam.Kryptor.Client.SessionHost}
{\xe \v SAPTeam.Kryptor.Client.SessionHost\:MasterToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CancellationTokenSource SAPTeam.Kryptor.Client.SessionHost.MasterToken{\f2 [get]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the special cancellation token to use in non-standard codes. (Blocking codes outside of sessions) }}\par
{
Definition at line {\b 21} of file {\b src/Kryptor.Client/SessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionHost.End()}, and {\b SAPTeam.Kryptor.Client.SessionHost.SessionHost()}.}\par
}
{\xe \v Verbose\:SAPTeam.Kryptor.Client.SessionHost}
{\xe \v SAPTeam.Kryptor.Client.SessionHost\:Verbose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.SessionHost.Verbose{\f2 [get]}, {\f2 [protected set]}}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the verbosity of the session host. }}\par
{
Implements {\b SAPTeam.Kryptor.Client.ISessionHost} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 16} of file {\b src/Kryptor.Client/SessionHost.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.CliSessionHost()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.CreateKeyStoreLoadSession()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.DebugLog()}, {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}, {\b SAPTeam.Kryptor.Cli.CliSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b src/Kryptor.Client/SessionHost.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.SessionRequest< TResponse > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.SessionRequest< TResponse >}
{\xe \v SAPTeam.Kryptor.Client.SessionRequest< TResponse >}
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a class for communicattion between the session and the user. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionRequest} (string message, TResponse defaultValue)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new request. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Message}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message of the request. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TResponse {\b DefaultValue}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the default value of the request. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TResponse {\b Response}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the user response. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a class for communicattion between the session and the user. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Template Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i TResponse} \cell }{The type of requested response from user. \cell }
{\row }
}
}{
Definition at line {\b 9} of file {\b SessionRequest.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SessionRequest\:SAPTeam.Kryptor.Client.SessionRequest< TResponse >}
{\xe \v SAPTeam.Kryptor.Client.SessionRequest< TResponse >\:SessionRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SAPTeam.Kryptor.Client.SessionRequest}< TResponse >.{\b SessionRequest} (string message, TResponse defaultValue)}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new request. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class just holds the data. To send the request to the user, an instance of this class must be sent to the {\b ISessionHost}. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{The message of the request \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i defaultValue} \cell }{The default value for this request. This value used in some cases to set the response. \cell }
{\row }
}
}{
Definition at line {\b 38} of file {\b SessionRequest.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.SessionRequest< TResponse >.DefaultValue}, and {\b SAPTeam.Kryptor.Client.SessionRequest< TResponse >.Message}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v DefaultValue\:SAPTeam.Kryptor.Client.SessionRequest< TResponse >}
{\xe \v SAPTeam.Kryptor.Client.SessionRequest< TResponse >\:DefaultValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TResponse {\b SAPTeam.Kryptor.Client.SessionRequest}< TResponse >.DefaultValue{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the default value of the request. }}\par
{
Definition at line {\b 19} of file {\b SessionRequest.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionRequest< TResponse >.SessionRequest()}.}\par
}
{\xe \v Message\:SAPTeam.Kryptor.Client.SessionRequest< TResponse >}
{\xe \v SAPTeam.Kryptor.Client.SessionRequest< TResponse >\:Message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string {\b SAPTeam.Kryptor.Client.SessionRequest}< TResponse >.Message{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the message of the request. }}\par
{
Definition at line {\b 14} of file {\b SessionRequest.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.SessionRequest< TResponse >.SessionRequest()}.}\par
}
{\xe \v Response\:SAPTeam.Kryptor.Client.SessionRequest< TResponse >}
{\xe \v SAPTeam.Kryptor.Client.SessionRequest< TResponse >\:Response}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TResponse {\b SAPTeam.Kryptor.Client.SessionRequest}< TResponse >.Response{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the user response. }}\par
{
Definition at line {\b 24} of file {\b SessionRequest.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionRequest.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.SessionUpdateEventArgs Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.SessionUpdateEventArgs}
{\xe \v SAPTeam.Kryptor.Client.SessionUpdateEventArgs}
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold session updates event data. }}\par
Inheritance diagram for SAPTeam.Kryptor.Client.SessionUpdateEventArgs:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d24/class_s_a_p_team_1_1_kryptor_1_1_client_1_1_session_update_event_args.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Progress}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current progress value of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Description}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current description value of the session. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsPause}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether the session is paused. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold session updates event data. \par
}{
Definition at line {\b 6} of file {\b SessionUpdateEventArgs.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Description\:SAPTeam.Kryptor.Client.SessionUpdateEventArgs}
{\xe \v SAPTeam.Kryptor.Client.SessionUpdateEventArgs\:Description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.SessionUpdateEventArgs.Description{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current description value of the session. }}\par
{
Definition at line {\b 16} of file {\b SessionUpdateEventArgs.cs}.}\par
}
{\xe \v IsPause\:SAPTeam.Kryptor.Client.SessionUpdateEventArgs}
{\xe \v SAPTeam.Kryptor.Client.SessionUpdateEventArgs\:IsPause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.SessionUpdateEventArgs.IsPause{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets whether the session is paused. }}\par
{
Definition at line {\b 21} of file {\b SessionUpdateEventArgs.cs}.}\par
}
{\xe \v Progress\:SAPTeam.Kryptor.Client.SessionUpdateEventArgs}
{\xe \v SAPTeam.Kryptor.Client.SessionUpdateEventArgs\:Progress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double SAPTeam.Kryptor.Client.SessionUpdateEventArgs.Progress{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the current progress value of the session. }}\par
{
Definition at line {\b 11} of file {\b SessionUpdateEventArgs.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionUpdateEventArgs.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.CryptoProviders.StandaloneKey Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.CryptoProviders.StandaloneKey}
{\xe \v SAPTeam.Kryptor.CryptoProviders.StandaloneKey}
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Standalone Key (SK) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a different key Until all the keys are used, then it continues from the first key and this process continues until the end of encryption. }}\par
Inheritance diagram for SAPTeam.Kryptor.CryptoProviders.StandaloneKey:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d32/class_s_a_p_team_1_1_kryptor_1_1_crypto_providers_1_1_standalone_key.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StandaloneKey} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty crypto provider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StandaloneKey} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b StandaloneKey} class. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< byte[]> {\b EncryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< byte[]> {\b DecryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b Clone} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< IEnumerable< byte > > {\b EncryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< IEnumerable< byte > > {\b DecryptChunkAsync} (byte[] cipher, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b ApplyHeader} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new crypto provider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b EncryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts chunk of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b DecryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts chunk of data asynchronously. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Package Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b DecryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Decryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b EncryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Encryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of this crypto provider instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keystore for crypto operations. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Standalone Key (SK) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a different key Until all the keys are used, then it continues from the first key and this process continues until the end of encryption. \par
}{
Definition at line {\b 9} of file {\b StandaloneKey.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v StandaloneKey\:SAPTeam.Kryptor.CryptoProviders.StandaloneKey}
{\xe \v SAPTeam.Kryptor.CryptoProviders.StandaloneKey\:StandaloneKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.CryptoProviders.StandaloneKey.StandaloneKey ()}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty crypto provider. }}\par
{
Definition at line {\b 14} of file {\b StandaloneKey.cs}.}\par
}
{\xe \v StandaloneKey\:SAPTeam.Kryptor.CryptoProviders.StandaloneKey}
{\xe \v SAPTeam.Kryptor.CryptoProviders.StandaloneKey\:StandaloneKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.CryptoProviders.StandaloneKey.StandaloneKey ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration = {\f2 null})}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b StandaloneKey} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore with at least 2 keys. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configuration} \cell }{The configuration to initialize the crypto provider \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DecryptChunkAsync\:SAPTeam.Kryptor.CryptoProviders.StandaloneKey}
{\xe \v SAPTeam.Kryptor.CryptoProviders.StandaloneKey\:DecryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProviders.StandaloneKey.DecryptChunkAsync (byte[] cipher, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v EncryptChunkAsync\:SAPTeam.Kryptor.CryptoProviders.StandaloneKey}
{\xe \v SAPTeam.Kryptor.CryptoProviders.StandaloneKey\:EncryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProviders.StandaloneKey.EncryptChunkAsync (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StandaloneKey.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.CryptoProviders.TransformedKey Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.CryptoProviders.TransformedKey}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedKey}
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Transformed Key (TK) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a mix-transformed key. }}\par
Inheritance diagram for SAPTeam.Kryptor.CryptoProviders.TransformedKey:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d4f/class_s_a_p_team_1_1_kryptor_1_1_crypto_providers_1_1_transformed_key.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TransformedKey} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty crypto provider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TransformedKey} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b TransformedKey} class. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< byte[]> {\b EncryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< byte[]> {\b DecryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b Clone} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b ApplyHeader} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new crypto provider.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore with at least 2 keys. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configuration} \cell }{The configuration to initialize the crypto provider \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< IEnumerable< byte > > {\b EncryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< IEnumerable< byte > > {\b DecryptChunkAsync} (byte[] cipher, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b EncryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts chunk of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b DecryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts chunk of data asynchronously. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Package Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b DecryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Decryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b EncryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Encryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of this crypto provider instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keystore for crypto operations. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Transformed Key (TK) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a mix-transformed key. \par
}{
Definition at line {\b 9} of file {\b TransformedKey.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TransformedKey\:SAPTeam.Kryptor.CryptoProviders.TransformedKey}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedKey\:TransformedKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.CryptoProviders.TransformedKey.TransformedKey ()}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty crypto provider. }}\par
{
Definition at line {\b 14} of file {\b TransformedKey.cs}.}\par
}
{\xe \v TransformedKey\:SAPTeam.Kryptor.CryptoProviders.TransformedKey}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedKey\:TransformedKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.CryptoProviders.TransformedKey.TransformedKey ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration = {\f2 null})}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b TransformedKey} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore with at least 2 keys. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configuration} \cell }{The configuration to initialize the crypto provider \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ApplyHeader\:SAPTeam.Kryptor.CryptoProviders.TransformedKey}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedKey\:ApplyHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.CryptoProviders.TransformedKey.ApplyHeader ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration = {\f2 null}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new crypto provider.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore with at least 2 keys. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configuration} \cell }{The configuration to initialize the crypto provider \cell }
{\row }
}
 }}\par
{
Reimplemented from {\b SAPTeam.Kryptor.CryptoProvider} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 31} of file {\b TransformedKey.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProvider.Configuration}, and {\b SAPTeam.Kryptor.CryptoProviderConfiguration.RemoveHash}.}\par
}
{\xe \v DecryptChunkAsync\:SAPTeam.Kryptor.CryptoProviders.TransformedKey}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedKey\:DecryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProviders.TransformedKey.DecryptChunkAsync (byte[] cipher, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v EncryptChunkAsync\:SAPTeam.Kryptor.CryptoProviders.TransformedKey}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedKey\:EncryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProviders.TransformedKey.EncryptChunkAsync (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TransformedKey.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.CryptoProviders.TransformedParameters Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.CryptoProviders.TransformedParameters}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedParameters}
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Transformed Parameters (TP) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a mix-transformed key and iv. }}\par
Inheritance diagram for SAPTeam.Kryptor.CryptoProviders.TransformedParameters:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/dad/class_s_a_p_team_1_1_kryptor_1_1_crypto_providers_1_1_transformed_parameters.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TransformedParameters} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty crypto provider. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TransformedParameters} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b TransformedParameters} class. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< byte[]> {\b EncryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual async Task< byte[]> {\b DecryptBlockAsync} (byte[] data, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts block of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b Clone} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b ApplyHeader} ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration=null)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new crypto provider.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore with at least 2 keys. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configuration} \cell }{The configuration to initialize the crypto provider \cell }
{\row }
}
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< IEnumerable< byte > > {\b EncryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override async Task< IEnumerable< byte > > {\b DecryptChunkAsync} (byte[] cipher, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b EncryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Encrypts chunk of data asynchronously. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Task< IEnumerable< byte > > {\b DecryptChunkAsync} (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decrypts chunk of data asynchronously. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Package Functions inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Properties inherited from {\b SAPTeam.Kryptor.CryptoProvider}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b DecryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Decryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b EncryptionChunkSize}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Encryption Chunk Size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CryptoProviderConfiguration} {\b Configuration}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the configuration of this crypto provider instance. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b KeyStore} {\b KeyStore}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the keystore for crypto operations. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Transformed Parameters (TP) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a mix-transformed key and iv. \par
}{
Definition at line {\b 9} of file {\b TransformedParameters.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TransformedParameters\:SAPTeam.Kryptor.CryptoProviders.TransformedParameters}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedParameters\:TransformedParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.CryptoProviders.TransformedParameters.TransformedParameters ()}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty crypto provider. }}\par
{
Definition at line {\b 14} of file {\b TransformedParameters.cs}.}\par
}
{\xe \v TransformedParameters\:SAPTeam.Kryptor.CryptoProviders.TransformedParameters}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedParameters\:TransformedParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.CryptoProviders.TransformedParameters.TransformedParameters ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration = {\f2 null})}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b TransformedParameters} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore with at least 2 keys. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configuration} \cell }{The configuration to initialize the crypto provider \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ApplyHeader\:SAPTeam.Kryptor.CryptoProviders.TransformedParameters}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedParameters\:ApplyHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void SAPTeam.Kryptor.CryptoProviders.TransformedParameters.ApplyHeader ({\b KeyStore} keyStore, {\b CryptoProviderConfiguration} configuration = {\f2 null}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new crypto provider.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i keyStore} \cell }{The keystore with at least 2 keys. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i configuration} \cell }{The configuration to initialize the crypto provider \cell }
{\row }
}
 }}\par
{
Reimplemented from {\b SAPTeam.Kryptor.CryptoProvider} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 31} of file {\b TransformedParameters.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.CryptoProvider.Configuration}, and {\b SAPTeam.Kryptor.CryptoProviderConfiguration.RemoveHash}.}\par
}
{\xe \v DecryptChunkAsync\:SAPTeam.Kryptor.CryptoProviders.TransformedParameters}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedParameters\:DecryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProviders.TransformedParameters.DecryptChunkAsync (byte[] cipher, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\xe \v EncryptChunkAsync\:SAPTeam.Kryptor.CryptoProviders.TransformedParameters}
{\xe \v SAPTeam.Kryptor.CryptoProviders.TransformedParameters\:EncryptChunkAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override async Task< IEnumerable< byte > > SAPTeam.Kryptor.CryptoProviders.TransformedParameters.EncryptChunkAsync (byte[] chunk, {\b CryptoProcess} process, CancellationToken cancellationToken){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TransformedParameters.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.TransformerToken Struct Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.TransformerToken}
{\xe \v SAPTeam.Kryptor.TransformerToken}
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses and holds transformer token data. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly bool {\b IsValid} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether this token is valid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly {\b ITranformer} {\b GetTranformer} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new transformer with this token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
readonly {\b KeyStore} {\b GenerateKeyStore} (int margin)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates keystore based on this token data. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TransformerToken} {\b Parse} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses input string to a transformer token. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsValid} (string token)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether the given token is valid. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b TransformerName}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the transformer name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b SecretKey}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the secret key. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b KeySize}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the key size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b Salt}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the salt value used for altering seed and outlut data. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Rotate}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the number of additional output transformations. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses and holds transformer token data. \par
}{
Definition at line {\b 10} of file {\b TransformerToken.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GenerateKeyStore\:SAPTeam.Kryptor.TransformerToken}
{\xe \v SAPTeam.Kryptor.TransformerToken\:GenerateKeyStore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly {\b KeyStore} SAPTeam.Kryptor.TransformerToken.GenerateKeyStore (int margin)}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates keystore based on this token data. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i margin} \cell }{The requested extra size to make the keystore even more secure. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new {\b KeyStore} initialized with this token data. \par
}}}{
Definition at line {\b 113} of file {\b TransformerToken.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.ITranformer.Generate()}, {\b SAPTeam.Kryptor.TransformerToken.GetTranformer()}, {\b SAPTeam.Kryptor.TransformerToken.KeySize}, and {\b SAPTeam.Kryptor.TransformerToken.Rotate}.}\par
}
{\xe \v GetTranformer\:SAPTeam.Kryptor.TransformerToken}
{\xe \v SAPTeam.Kryptor.TransformerToken\:GetTranformer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly {\b ITranformer} SAPTeam.Kryptor.TransformerToken.GetTranformer ()}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new transformer with this token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ArgumentException} \cell }{\cell }
{\row }
}
}{
\ql
Referenced by {\b SAPTeam.Kryptor.TransformerToken.GenerateKeyStore()}.}\par
}
{\xe \v IsValid\:SAPTeam.Kryptor.TransformerToken}
{\xe \v SAPTeam.Kryptor.TransformerToken\:IsValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly bool SAPTeam.Kryptor.TransformerToken.IsValid ()}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether this token is valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}}
{\xe \v IsValid\:SAPTeam.Kryptor.TransformerToken}
{\xe \v SAPTeam.Kryptor.TransformerToken\:IsValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool SAPTeam.Kryptor.TransformerToken.IsValid (string token){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether the given token is valid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{The token to test. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 85} of file {\b TransformerToken.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.CreateKeyStoreLoadSession()}, {\b SAPTeam.Kryptor.Cli.Program.GetRootCommand()}, {\b SAPTeam.Kryptor.Cli.EncryptionSession.RunAsync()}, and {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost.Start()}.}\par
}
{\xe \v Parse\:SAPTeam.Kryptor.TransformerToken}
{\xe \v SAPTeam.Kryptor.TransformerToken\:Parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b TransformerToken} SAPTeam.Kryptor.TransformerToken.Parse (string token){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses input string to a transformer token. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i token} \cell }{The input string with valid transformer token format. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new instance of {\b TransformerToken}. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ArgumentException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 50} of file {\b TransformerToken.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.TransformerToken.KeySize}, {\b SAPTeam.Kryptor.TransformerToken.Rotate}, {\b SAPTeam.Kryptor.TransformerToken.Salt}, {\b SAPTeam.Kryptor.TransformerToken.SecretKey}, and {\b SAPTeam.Kryptor.TransformerToken.TransformerName}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.CliSessionHost.CreateKeyStoreLoadSession()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v KeySize\:SAPTeam.Kryptor.TransformerToken}
{\xe \v SAPTeam.Kryptor.TransformerToken\:KeySize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.TransformerToken.KeySize{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the key size. }}\par
{
Definition at line {\b 28} of file {\b TransformerToken.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.TransformerToken.GenerateKeyStore()}, and {\b SAPTeam.Kryptor.TransformerToken.Parse()}.}\par
}
{\xe \v Rotate\:SAPTeam.Kryptor.TransformerToken}
{\xe \v SAPTeam.Kryptor.TransformerToken\:Rotate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.TransformerToken.Rotate{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the number of additional output transformations. }}\par
{
Definition at line {\b 38} of file {\b TransformerToken.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.TransformerToken.GenerateKeyStore()}, and {\b SAPTeam.Kryptor.TransformerToken.Parse()}.}\par
}
{\xe \v Salt\:SAPTeam.Kryptor.TransformerToken}
{\xe \v SAPTeam.Kryptor.TransformerToken\:Salt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] SAPTeam.Kryptor.TransformerToken.Salt{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the salt value used for altering seed and outlut data. }}\par
{
Definition at line {\b 33} of file {\b TransformerToken.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.TransformerToken.Parse()}.}\par
}
{\xe \v SecretKey\:SAPTeam.Kryptor.TransformerToken}
{\xe \v SAPTeam.Kryptor.TransformerToken\:SecretKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] SAPTeam.Kryptor.TransformerToken.SecretKey{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the secret key. }}\par
{
Definition at line {\b 23} of file {\b TransformerToken.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.TransformerToken.Parse()}.}\par
}
{\xe \v TransformerName\:SAPTeam.Kryptor.TransformerToken}
{\xe \v SAPTeam.Kryptor.TransformerToken\:TransformerName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.TransformerToken.TransformerName{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the transformer name. }}\par
{
Definition at line {\b 18} of file {\b TransformerToken.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.TransformerToken.Parse()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TransformerToken.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Generators.UnixRandom Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Generators.UnixRandom}
{\xe \v SAPTeam.Kryptor.Generators.UnixRandom}
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random data with unix standard /dev/random character device. }}\par
Inheritance diagram for SAPTeam.Kryptor.Generators.UnixRandom:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d57/class_s_a_p_team_1_1_kryptor_1_1_generators_1_1_unix_random.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UnixRandom} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b UnixRandom} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Generate} (byte[] buffer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with random values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
}
 }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b SAPTeam.Kryptor.IGenerator}\par
\pard\plain 
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Events\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Events inherited from {\b SAPTeam.Kryptor.Helpers.IProgressReport}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EventHandler< double > {\b ProgressChanged}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggered when the work progress is changed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random data with unix standard /dev/random character device. \par
}{
Definition at line {\b 8} of file {\b UnixRandom.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v UnixRandom\:SAPTeam.Kryptor.Generators.UnixRandom}
{\xe \v SAPTeam.Kryptor.Generators.UnixRandom\:UnixRandom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Generators.UnixRandom.UnixRandom ()}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of the {\b UnixRandom} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i PlatformNotSupportedException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 17} of file {\b UnixRandom.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Generate\:SAPTeam.Kryptor.Generators.UnixRandom}
{\xe \v SAPTeam.Kryptor.Generators.UnixRandom\:Generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Generators.UnixRandom.Generate (byte[] buffer)}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fills the buffer with random values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{The output buffer. \cell }
{\row }
}
 }}\par
{
Implements {\b SAPTeam.Kryptor.IGenerator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 26} of file {\b UnixRandom.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Generators.UnixRandom.ProgressChanged}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Event Documentation\par
\pard\plain 
{\xe \v ProgressChanged\:SAPTeam.Kryptor.Generators.UnixRandom}
{\xe \v SAPTeam.Kryptor.Generators.UnixRandom\:ProgressChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EventHandler<double> SAPTeam.Kryptor.Generators.UnixRandom.ProgressChanged}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{
Definition at line {\b 11} of file {\b UnixRandom.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Generators.UnixRandom.Generate()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UnixRandom.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection}
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a performance-friendly wordlist lookup class. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistFragmentCollection} ({\b WordlistIndexEntry} entry)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of {\b WordlistFragmentCollection} class. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
async Task< bool > {\b LookupAsync} (string word, CancellationToken cancellationToken)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks whether the {\i word}   is found in the wordlist. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b GetWordIdentifier} (string word)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the numeric fragment identifier of the given {\i word}  . }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a performance-friendly wordlist lookup class. \par
}{
Definition at line {\b 11} of file {\b WordlistFragmentCollection.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v WordlistFragmentCollection\:SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection\:WordlistFragmentCollection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection.WordlistFragmentCollection ({\b WordlistIndexEntry} entry)}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes a new instance of {\b WordlistFragmentCollection} class. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i entry} \cell }{A valid wordlist entry. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DirectoryNotFoundException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 23} of file {\b WordlistFragmentCollection.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Hash}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Id}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.InstallDirectory}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetWordIdentifier\:SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection\:GetWordIdentifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection.GetWordIdentifier (string word){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the numeric fragment identifier of the given {\i word}  . }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i word} \cell }{The word to calculate. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 118} of file {\b WordlistFragmentCollection.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection.LookupAsync()}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Verify()}.}\par
}
{\xe \v LookupAsync\:SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection\:LookupAsync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
async Task< bool > SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection.LookupAsync (string word, CancellationToken cancellationToken)}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks whether the {\i word}   is found in the wordlist. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i word} \cell }{Word to search. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cancellationToken} \cell }{The token to monitor for cancellation requests. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 49} of file {\b WordlistFragmentCollection.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection.GetWordIdentifier()}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.InstallDirectory}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySession.RunAsync()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistFragmentCollection.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.Security.WordlistIndex Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.Security.WordlistIndex}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndex}
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlists informations. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Add} ({\b WordlistIndexEntry} entry)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Safely Adds new entry to the index. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ContainsId} (string id)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether the index contains the specified id. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndexEntry} {\b this[string id]}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the wordlist by the id. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b WordlistIndexEntry} > {\b Wordlists} = new List<{\b WordlistIndexEntry}>(){\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the wordlists container. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlists informations. \par
}{
Definition at line {\b 6} of file {\b WordlistIndex.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Add\:SAPTeam.Kryptor.Client.Security.WordlistIndex}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndex\:Add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Client.Security.WordlistIndex.Add ({\b WordlistIndexEntry} entry)}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Safely Adds new entry to the index. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i entry} \cell }{The wordlist entry. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ArgumentException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 42} of file {\b WordlistIndex.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.ContainsId()}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Hash}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Id}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.Wordlists}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.FinalizeInstallation()}.}\par
}
{\xe \v ContainsId\:SAPTeam.Kryptor.Client.Security.WordlistIndex}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndex\:ContainsId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.Security.WordlistIndex.ContainsId (string id)}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determines whether the index contains the specified id. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{The id to search. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.Add()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.GetInstallationPermission()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v this[string id]\:SAPTeam.Kryptor.Client.Security.WordlistIndex}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndex\:this[string id]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WordlistIndexEntry} SAPTeam.Kryptor.Client.Security.WordlistIndex.this[string id]{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the wordlist by the id. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{The id of the wordlist. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 15} of file {\b WordlistIndex.cs}.}\par
}
{\xe \v Wordlists\:SAPTeam.Kryptor.Client.Security.WordlistIndex}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndex\:Wordlists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b WordlistIndexEntry}> SAPTeam.Kryptor.Client.Security.WordlistIndex.Wordlists = new List<{\b WordlistIndexEntry}>(){\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the wordlists container. }}\par
{
Definition at line {\b 33} of file {\b WordlistIndex.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.Add()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.ListInstalledWordlists()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.RemoveWordlist()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.SortIndex()}, {\b SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost.Start()}, and {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Start()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndex.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.Security.WordlistIndexEntry Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlist informations. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistFragmentCollection} {\b Open} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opens the wordlist with {\b WordlistFragmentCollection}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistVerificationMetadata}[] {\b GetMetadata} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the metadata array of this wordlist. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckBasicValidity} (bool throwException=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks basic validity of this instance, includes valid id and hash. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b CheckInstallation} (bool throwException=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks validity of the wordlist installation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Verify} (bool throwException=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifies integrity and compatibility of the wordlist and it's fragments. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Id}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the identifier of the wordlist. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Name}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the user-friendly name of the wordlist. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uri {\b Uri}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the URI used to download the wordlist. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b Hash}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the SHA256 hash of the wordlist. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Enforced}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the enforcement status of the wordlist. if it's true, it will block any operations if the word is found in the wordlist, but if set to false, it just shows a warning. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Compressed}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the compressed status of the wordlist file. if it's true, the downloader will try to decompress it, otherwise it will be processed as is. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Optimized}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the optimization status of the wordlist file. if it's true, it means that the wordlist is optimized by fragment compiler and all duplicated entries are removed, otherwise it means that the wordlist is not optimized and may be have some duplicated entries. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b InstallDirectory}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the install directory of thw wordlist. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b Lines}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the number of lines in this wordlist. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b Words}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the number of actual words in this wordlist. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b Size}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the wordlist file size. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlist informations. \par
}{
Definition at line {\b 8} of file {\b WordlistIndexEntry.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckBasicValidity\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:CheckBasicValidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.CheckBasicValidity (bool throwException = {\f2 false})}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks basic validity of this instance, includes valid id and hash. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i throwException} \cell }{if {\f2 true} , the method will throw exception when any of the checking items were failed. otherwise it just returns the validation result as {\f2 bool} . \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if validation were passed. otherwise it will return {\f2 false} . \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i InvalidDataException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 111} of file {\b WordlistIndexEntry.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Hash}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Id}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Open()}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Verify()}.}\par
}
{\xe \v CheckInstallation\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:CheckInstallation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.CheckInstallation (bool throwException = {\f2 false})}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks validity of the wordlist installation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i throwException} \cell }{if {\f2 true} , the method will throw exception when any of the checking items were failed. otherwise it just returns the validation result as {\f2 bool} . \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if validation were passed. otherwise it will return {\f2 false} . \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ApplicationException} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i DirectoryNotFoundException} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i InvalidDataException} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i FileNotFoundException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 142} of file {\b WordlistIndexEntry.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.InstallDirectory}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Open()}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Verify()}.}\par
}
{\xe \v GetMetadata\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:GetMetadata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WordlistVerificationMetadata}[] SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.GetMetadata ()}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the metadata array of this wordlist. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
An array contains the metadata for all fragments. \par
}}}{
Definition at line {\b 87} of file {\b WordlistIndexEntry.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Verify()}.}\par
}
{\xe \v Open\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WordlistFragmentCollection} SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Open ()}}
\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opens the wordlist with {\b WordlistFragmentCollection}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A new instance of the {\b WordlistFragmentCollection} class initialized with this wordlist. \par
}}}{
Definition at line {\b 73} of file {\b WordlistIndexEntry.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.CheckBasicValidity()}, and {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.CheckInstallation()}.}\par
}
{\xe \v Verify\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Verify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Verify (bool throwException = {\f2 false})}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifies integrity and compatibility of the wordlist and it's fragments. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This method also calls the both {\b CheckBasicValidity(bool)} and {\b CheckInstallation(bool)} methods. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i throwException} \cell }{if {\f2 true} , the method will throw exception when any of the checking items were failed. otherwise it just returns the validation result as {\f2 bool} . \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if validation were passed. otherwise it will return {\f2 false} . \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Exceptions\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i InvalidDataException} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 183} of file {\b WordlistIndexEntry.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.CheckBasicValidity()}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.CheckInstallation()}, {\b SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata.Checksum}, {\b SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata.FragmentId}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.GetMetadata()}, {\b SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection.GetWordIdentifier()}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Hash}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.InstallDirectory}, and {\b SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata.LookupString}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Compressed\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Compressed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Compressed{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the compressed status of the wordlist file. if it's true, the downloader will try to decompress it, otherwise it will be processed as is. }}\par
{
Definition at line {\b 40} of file {\b WordlistIndexEntry.cs}.}\par
}
{\xe \v Enforced\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Enforced}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Enforced{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the enforcement status of the wordlist. if it's true, it will block any operations if the word is found in the wordlist, but if set to false, it just shows a warning. }}\par
{
Definition at line {\b 35} of file {\b WordlistIndexEntry.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost.Start()}.}\par
}
{\xe \v Hash\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Hash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Hash{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the SHA256 hash of the wordlist. }}\par
{
Definition at line {\b 30} of file {\b WordlistIndexEntry.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.Add()}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.CheckBasicValidity()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.GetInstallationPermission()}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Verify()}, and {\b SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection.WordlistFragmentCollection()}.}\par
}
{\xe \v Id\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Id{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the identifier of the wordlist. }}\par
{
Definition at line {\b 15} of file {\b WordlistIndexEntry.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistIndex.Add()}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.CheckBasicValidity()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.GetInstallationPermission()}, and {\b SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection.WordlistFragmentCollection()}.}\par
}
{\xe \v InstallDirectory\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:InstallDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.InstallDirectory{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the install directory of thw wordlist. }}\par
{
Definition at line {\b 50} of file {\b WordlistIndexEntry.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.CheckInstallation()}, {\b SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection.LookupAsync()}, {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost.RemoveWordlist()}, {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Verify()}, and {\b SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection.WordlistFragmentCollection()}.}\par
}
{\xe \v Lines\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Lines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Lines{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the number of lines in this wordlist. }}\par
{
Definition at line {\b 55} of file {\b WordlistIndexEntry.cs}.}\par
}
{\xe \v Name\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Name{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the user-friendly name of the wordlist. }}\par
{
Definition at line {\b 20} of file {\b WordlistIndexEntry.cs}.}\par
}
{\xe \v Optimized\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Optimized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Optimized{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the optimization status of the wordlist file. if it's true, it means that the wordlist is optimized by fragment compiler and all duplicated entries are removed, otherwise it means that the wordlist is not optimized and may be have some duplicated entries. }}\par
{
Definition at line {\b 45} of file {\b WordlistIndexEntry.cs}.}\par
}
{\xe \v Size\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Size{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the wordlist file size. }}\par
{
Definition at line {\b 65} of file {\b WordlistIndexEntry.cs}.}\par
}
{\xe \v Uri\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Uri}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Uri SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Uri{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the URI used to download the wordlist. }}\par
{
Definition at line {\b 25} of file {\b WordlistIndexEntry.cs}.}\par
}
{\xe \v Words\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntry\:Words}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Words{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the number of actual words in this wordlist. }}\par
{
Definition at line {\b 60} of file {\b WordlistIndexEntry.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndexEntry.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy}
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlist informations. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b Name}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the user-friendly name of the wordlist. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Uri {\b DownloadUri}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the URI used to download the wordlist. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QuickCheckPriority}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the priority of the wordlist in the quick checks might be made by clients. 0 means highest priority and 2 means lowest priority. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Compressed}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets whether this wordlist is compressed. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlist informations. \par
}{
Definition at line {\b 6} of file {\b WordlistIndexEntryLegacy.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Compressed\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy\:Compressed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy.Compressed{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets whether this wordlist is compressed. }}\par
{
Definition at line {\b 26} of file {\b WordlistIndexEntryLegacy.cs}.}\par
}
{\xe \v DownloadUri\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy\:DownloadUri}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Uri SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy.DownloadUri{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the URI used to download the wordlist. }}\par
{
Definition at line {\b 16} of file {\b WordlistIndexEntryLegacy.cs}.}\par
}
{\xe \v Name\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy\:Name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy.Name{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the user-friendly name of the wordlist. }}\par
{
Definition at line {\b 11} of file {\b WordlistIndexEntryLegacy.cs}.}\par
}
{\xe \v QuickCheckPriority\:SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy\:QuickCheckPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy.QuickCheckPriority{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the priority of the wordlist in the quick checks might be made by clients. 0 means highest priority and 2 means lowest priority. }}\par
{
Definition at line {\b 21} of file {\b WordlistIndexEntryLegacy.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndexEntryLegacy.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy}
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlists informations. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndexEntryLegacy} {\b this[string id]}{\f2  [get]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the wordlist by the id. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, {\b WordlistIndexEntryLegacy} > {\b Wordlists} = new Dictionary<string, {\b WordlistIndexEntryLegacy}>(){\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the wordlists container. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlists informations. \par
}{
Definition at line {\b 6} of file {\b WordlistIndexLegacy.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v this[string id]\:SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy\:this[string id]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WordlistIndexEntryLegacy} SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy.this[string id]{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the wordlist by the id. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i id} \cell }{The id of the wordlist. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 15} of file {\b WordlistIndexLegacy.cs}.}\par
}
{\xe \v Wordlists\:SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy\:Wordlists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, {\b WordlistIndexEntryLegacy}> SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy.Wordlists = new Dictionary<string, {\b WordlistIndexEntryLegacy}>(){\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets or sets the wordlists container. }}\par
{
Definition at line {\b 20} of file {\b WordlistIndexLegacy.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndexLegacy.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Cli.WordlistJsonContainer Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Cli.WordlistJsonContainer}
{\xe \v SAPTeam.Kryptor.Cli.WordlistJsonContainer}
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistJsonContainer} (string filePath)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Write} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistIndex} {\b Index}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b WordlistJsonContainer.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v WordlistJsonContainer\:SAPTeam.Kryptor.Cli.WordlistJsonContainer}
{\xe \v SAPTeam.Kryptor.Cli.WordlistJsonContainer\:WordlistJsonContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SAPTeam.Kryptor.Cli.WordlistJsonContainer.WordlistJsonContainer (string filePath)}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b WordlistJsonContainer.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.WordlistJsonContainer.Index}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Write\:SAPTeam.Kryptor.Cli.WordlistJsonContainer}
{\xe \v SAPTeam.Kryptor.Cli.WordlistJsonContainer\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SAPTeam.Kryptor.Cli.WordlistJsonContainer.Write ()}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b WordlistJsonContainer.cs}.}\par
{
\ql
References {\b SAPTeam.Kryptor.Cli.WordlistJsonContainer.Index}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Index\:SAPTeam.Kryptor.Cli.WordlistJsonContainer}
{\xe \v SAPTeam.Kryptor.Cli.WordlistJsonContainer\:Index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WordlistIndex} SAPTeam.Kryptor.Cli.WordlistJsonContainer.Index{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b WordlistJsonContainer.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Cli.WordlistJsonContainer.WordlistJsonContainer()}, and {\b SAPTeam.Kryptor.Cli.WordlistJsonContainer.Write()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistJsonContainer.cs}}\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata Class Reference\par \pard\plain 
{\tc\tcl2 \v SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata}
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents wordlist's metadata needed for verification. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FragmentId}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The numeric id of the fragment. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b LookupString}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The existing string in the fragment to verify the compatibility of the compiler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte[] {\b Checksum}{\f2  [get, set]}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checksum populated by XORing the file hash with the wordlist hash. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents wordlist's metadata needed for verification. \par
}{
Definition at line {\b 6} of file {\b WordlistVerificationMetadata.cs}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v Checksum\:SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata\:Checksum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte [] SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata.Checksum{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checksum populated by XORing the file hash with the wordlist hash. }}\par
{
Definition at line {\b 21} of file {\b WordlistVerificationMetadata.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Verify()}.}\par
}
{\xe \v FragmentId\:SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata\:FragmentId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata.FragmentId{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The numeric id of the fragment. }}\par
{
Definition at line {\b 11} of file {\b WordlistVerificationMetadata.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Verify()}.}\par
}
{\xe \v LookupString\:SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata}
{\xe \v SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata\:LookupString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata.LookupString{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The existing string in the fragment to verify the compatibility of the compiler. }}\par
{
Definition at line {\b 16} of file {\b WordlistVerificationMetadata.cs}.}\par
{
\ql
Referenced by {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry.Verify()}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WordlistVerificationMetadata.cs}}
\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AssemblyPlatformAttribute.cs File Reference\par \pard\plain 
{\tc\tcl2 \v AssemblyPlatformAttribute.cs}
{\xe \v AssemblyPlatformAttribute.cs}
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.AssemblyPlatformAttribute}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AssemblyPlatformAttribute.cs\par \pard\plain 
{\tc\tcl2 \v AssemblyPlatformAttribute.cs}
{\xe \v AssemblyPlatformAttribute.cs}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00002 \{\par
00003     {\cf17 public} {\cf17 class }AssemblyPlatformAttribute : Attribute\par
00004     \{\par
00005         {\cf17 public} {\cf18 string} TargetFrameworkMoniker \{ {\cf17 get}; {\cf17 set}; \}\par
00006 \par
00007         {\cf17 public} {\cf18 string} RuntimeIdentifier \{ {\cf17 get}; {\cf17 set}; \}\par
00008 \par
00009         {\cf17 public} AssemblyPlatformAttribute({\cf18 string} tfm, {\cf18 string} rid)\par
00010         \{\par
00011             TargetFrameworkMoniker = tfm;\par
00012             RuntimeIdentifier = rid;\par
00013         \}\par
00014     \}\par
00015 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BuildBranch.cs File Reference\par \pard\plain 
{\tc\tcl2 \v BuildBranch.cs}
{\xe \v BuildBranch.cs}
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SAPTeam.Kryptor.Cli.BuildBranch} \{ {\b SAPTeam.Kryptor.Cli.None} = 0
, {\b SAPTeam.Kryptor.Cli.Debug}
, {\b SAPTeam.Kryptor.Cli.Release}
, {\b SAPTeam.Kryptor.Cli.Nuget}
, {\b SAPTeam.Kryptor.Cli.Indexer}
, {\b SAPTeam.Kryptor.Cli.Light}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BuildBranch.cs\par \pard\plain 
{\tc\tcl2 \v BuildBranch.cs}
{\xe \v BuildBranch.cs}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00002 \{\par
00003     {\cf17 public} {\cf17 enum} BuildBranch\par
00004     \{\par
00005         None = 0,\par
00006         Debug,\par
00007         Release,\par
00008         Nuget,\par
00009         Indexer,\par
00010         Light\par
00011     \}\par
00012 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BuildInformation.cs File Reference\par \pard\plain 
{\tc\tcl2 \v BuildInformation.cs}
{\xe \v BuildInformation.cs}
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.BuildInformation}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BuildInformation.cs\par \pard\plain 
{\tc\tcl2 \v BuildInformation.cs}
{\xe \v BuildInformation.cs}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Globalization;\par
00002 {\cf17 using }System.Reflection;\par
00003 \par
00004 {\cf17 using }SAPTeam.Kryptor.Client;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00007 \{\par
00008     {\cf17 internal} {\cf17 static} {\cf17 partial class }BuildInformation\par
00009     \{\par
00010         {\cf17 public} {\cf17 static} BuildVariant Variant \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00011 \par
00012         {\cf17 public} {\cf17 static} BuildBranch Branch \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00013 \par
00014         {\cf17 public} {\cf17 static} {\cf18 bool} IsAot \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00015 \par
00016         {\cf17 public} {\cf17 static} {\cf18 bool} IsAndroidPlatform \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00017 \par
00018         {\cf17 public} {\cf17 static} DateTime BuildTime \{ {\cf17 get}; \}\par
00019 \par
00020         {\cf17 public} {\cf17 static} {\cf18 string} TargetPlatform \{ {\cf17 get}; \}\par
00021 \par
00022         {\cf17 public} {\cf17 static} {\cf18 string} TargetFramework \{ {\cf17 get}; \}\par
00023 \par
00024         {\cf17 public} {\cf17 static} Version ApplicationVersion \{ {\cf17 get}; \}\par
00025         \par
00026         {\cf17 public} {\cf17 static} {\cf18 string} ApplicationInformationalVersion \{ {\cf17 get}; \}\par
00027 \par
00028         {\cf17 public} {\cf17 static} Version ClientVersion \{ {\cf17 get}; \}\par
00029 \par
00030         {\cf17 public} {\cf17 static} Version EngineVersion \{ {\cf17 get}; \}\par
00031 \par
00032         {\cf17 static} BuildInformation()\par
00033         \{\par
00034             DefineVariant();\par
00035             DefineConstants();\par
00036 \par
00037             {\cf18 bool} isAndroid = {\cf17 false};\par
00038 {\cf21 #if NET6_0_OR_GREATER}\par
00039             isAndroid = OperatingSystem.IsAndroid();\par
00040 {\cf21 #endif}\par
00041 \par
00042             IsAndroidPlatform = isAndroid;\par
00043 \par
00044             {\cf19 if} (IsAndroidPlatform)\par
00045             \{\par
00046                 TargetPlatform = {\cf22 "android"};\par
00047             \}\par
00048 \par
00049             {\cf18 string} format = {\cf22 "MM/dd/yyyy HH:mm:ss"};\par
00050             {\cf18 string} dateTimeString = Assembly.GetAssembly(typeof(Program)).GetCustomAttributes<AssemblyMetadataAttribute>().Where(x => x.Key == {\cf22 "BuildTime"}).First().Value;\par
00051 \par
00052             {\cf20 // Parse the string into a DateTime object}\par
00053             DateTime parsedDateTime = DateTime.ParseExact(dateTimeString, format, CultureInfo.InvariantCulture, DateTimeStyles.AssumeUniversal);\par
00054 \par
00055             BuildTime = parsedDateTime;\par
00056 \par
00057             AssemblyPlatformAttribute platformInfo = Assembly.GetAssembly(typeof(Program)).GetCustomAttribute<AssemblyPlatformAttribute>();\par
00058             {\cf19 if} (!{\cf18 string}.IsNullOrEmpty(platformInfo.RuntimeIdentifier))\par
00059             \{\par
00060                 TargetPlatform = platformInfo.RuntimeIdentifier;\par
00061             \}\par
00062             TargetFramework = platformInfo.TargetFrameworkMoniker;\par
00063 \par
00064             ApplicationVersion = {\cf17 new} Version(Assembly.GetAssembly(typeof(Program)).GetCustomAttribute<AssemblyFileVersionAttribute>().Version);\par
00065             ApplicationInformationalVersion = Assembly.GetAssembly(typeof(Program)).GetCustomAttribute<AssemblyInformationalVersionAttribute>().InformationalVersion;\par
00066 \par
00067             ClientVersion = ClientContext.ClientVersion;\par
00068             EngineVersion = ClientContext.EngineVersion;\par
00069         \}\par
00070 \par
00071         {\cf17 private} {\cf17 static} {\cf18 void} DefineConstants()\par
00072         \{\par
00073 {\cf21 #if DEBUG}\par
00074             Branch = BuildBranch.Debug;\par
00075 {\cf21 #elif NUGET}\par
00076             Branch = BuildBranch.Nuget;\par
00077 {\cf21 #elif INDEXER}\par
00078             Branch = BuildBranch.Indexer;\par
00079 {\cf21 #elif LIGHT}\par
00080             Branch = BuildBranch.Light;\par
00081 {\cf21 #elif RELEASE}\par
00082             Branch = BuildBranch.Release;\par
00083 {\cf21 #else}\par
00084             Branch = BuildBranch.None;\par
00085 {\cf21 #endif}\par
00086 \par
00087 {\cf21 #if AOT}\par
00088             IsAot = {\cf17 true};\par
00089 {\cf21 #else}\par
00090             IsAot = {\cf17 false};\par
00091 {\cf21 #endif}\par
00092         \}\par
00093     \}\par
00094 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BuildVariant.cs File Reference\par \pard\plain 
{\tc\tcl2 \v BuildVariant.cs}
{\xe \v BuildVariant.cs}
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SAPTeam.Kryptor.Cli.BuildVariant} \{ {\b SAPTeam.Kryptor.Cli.None} = 0
, {\b SAPTeam.Kryptor.Cli.Standard}
, {\b SAPTeam.Kryptor.Cli.Legacy}
, {\b SAPTeam.Kryptor.Cli.Native}
, {\b SAPTeam.Kryptor.Cli.Android}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BuildVariant.cs\par \pard\plain 
{\tc\tcl2 \v BuildVariant.cs}
{\xe \v BuildVariant.cs}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00002 \{\par
00003     {\cf17 public} {\cf17 enum} BuildVariant\par
00004     \{\par
00005         None = 0,\par
00006         Standard,\par
00007         Legacy,\par
00008         Native,\par
00009         Android\par
00010     \}\par
00011 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CastExtentions.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CastExtentions.cs}
{\xe \v CastExtentions.cs}
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.CastExtensions}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CastExtentions.cs\par \pard\plain 
{\tc\tcl2 \v CastExtentions.cs}
{\xe \v CastExtentions.cs}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Diagnostics.CodeAnalysis;\par
00003 {\cf17 using }System.Linq;\par
00004 {\cf17 using }System.Reflection;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00007 \{\par
00008     {\cf17 public} {\cf17 static} {\cf17 class }CastExtensions\par
00009     \{\par
00010         {\cf17 private} {\cf17 const} {\cf18 string} ImplicitCastMethodName = {\cf22 "op_Implicit"};\par
00011 \par
00012         {\cf17 private} {\cf17 const} {\cf18 string} ExplicitCastMethodName = {\cf22 "op_Explicit"};\par
00013 \par
00014 {\cf21 #if NET8_0_OR_GREATER}\par
00015         {\cf17 public} {\cf17 static} {\cf18 bool} CanCast<T>([DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicMethods)] {\cf17 this} Type baseType)\par
00016 {\cf21 #else}\par
00017         {\cf17 public} {\cf17 static} {\cf18 bool} CanCast<T>({\cf17 this} Type baseType)\par
00018 {\cf21 #endif}\par
00019         \{\par
00020             {\cf19 if} (!baseType.CanImplicitCast<T>())\par
00021             \{\par
00022                 {\cf19 return} baseType.CanExplicitCast<T>();\par
00023             \}\par
00024 \par
00025             {\cf19 return} {\cf17 true};\par
00026         \}\par
00027 \par
00028         {\cf17 public} {\cf17 static} {\cf18 bool} CanCast<T>({\cf17 this} {\cf18 object} obj)\par
00029         \{\par
00030             {\cf19 return} obj.GetType().CanCast<T>();\par
00031         \}\par
00032 \par
00033         {\cf17 public} {\cf17 static} T Cast<T>({\cf17 this} {\cf18 object} obj)\par
00034         \{\par
00035             {\cf19 try}\par
00036             \{\par
00037                 {\cf19 return} (T)obj;\par
00038             \}\par
00039             {\cf19 catch} (InvalidCastException)\par
00040             \{\par
00041                 {\cf19 if} (obj.CanImplicitCast<T>())\par
00042                 \{\par
00043                     {\cf19 return} obj.ImplicitCast<T>();\par
00044                 \}\par
00045 \par
00046                 {\cf19 if} (obj.CanExplicitCast<T>())\par
00047                 \{\par
00048                     {\cf19 return} obj.ExplicitCast<T>();\par
00049                 \}\par
00050 \par
00051                 {\cf19 throw};\par
00052             \}\par
00053         \}\par
00054 \par
00055 {\cf21 #if NET8_0_OR_GREATER}\par
00056         {\cf17 private} {\cf17 static} {\cf18 bool} CanImplicitCast<T>([DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicMethods)] {\cf17 this} Type baseType)\par
00057 {\cf21 #else}\par
00058         {\cf17 private} {\cf17 static} {\cf18 bool} CanImplicitCast<T>({\cf17 this} Type baseType)\par
00059 {\cf21 #endif}\par
00060         \{\par
00061             {\cf19 return} baseType.CanCast<T>({\cf22 "op_Implicit"});\par
00062         \}\par
00063 \par
00064         {\cf17 private} {\cf17 static} {\cf18 bool} CanImplicitCast<T>({\cf17 this} {\cf18 object} obj)\par
00065         \{\par
00066             {\cf19 return} obj.GetType().CanImplicitCast<T>();\par
00067         \}\par
00068 \par
00069 {\cf21 #if NET8_0_OR_GREATER}\par
00070         {\cf17 private} {\cf17 static} {\cf18 bool} CanExplicitCast<T>([DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicMethods)] {\cf17 this} Type baseType)\par
00071 {\cf21 #else}\par
00072         {\cf17 private} {\cf17 static} {\cf18 bool} CanExplicitCast<T>({\cf17 this} Type baseType)\par
00073 {\cf21 #endif}\par
00074         \{\par
00075             {\cf19 return} baseType.CanCast<T>({\cf22 "op_Explicit"});\par
00076         \}\par
00077 \par
00078         {\cf17 private} {\cf17 static} {\cf18 bool} CanExplicitCast<T>({\cf17 this} {\cf18 object} obj)\par
00079         \{\par
00080             {\cf19 return} obj.GetType().CanExplicitCast<T>();\par
00081         \}\par
00082 \par
00083 {\cf21 #if NET8_0_OR_GREATER}\par
00084         {\cf17 private} {\cf17 static} {\cf18 bool} CanCast<T>([DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicMethods)]{\cf17 this} Type baseType, {\cf18 string} castMethodName)\par
00085 {\cf21 #else}\par
00086         {\cf17 private} {\cf17 static} {\cf18 bool} CanCast<T>({\cf17 this} Type baseType, {\cf18 string} castMethodName)\par
00087 {\cf21 #endif}\par
00088         \{\par
00089             Type targetType = typeof(T);\par
00090             {\cf19 return} (from mi in baseType.GetMethods(BindingFlags.Static | BindingFlags.Public)\par
00091                     where mi.Name == castMethodName && mi.ReturnType == targetType\par
00092                     select mi).Any(delegate (MethodInfo mi)\par
00093                     \{\par
00094                         ParameterInfo parameterInfo = mi.GetParameters().FirstOrDefault();\par
00095                         {\cf19 return} parameterInfo != {\cf17 null} && parameterInfo.ParameterType == baseType;\par
00096                     \});\par
00097         \}\par
00098 \par
00099         {\cf17 private} {\cf17 static} T ImplicitCast<T>({\cf17 this} {\cf18 object} obj)\par
00100         \{\par
00101             {\cf19 return} obj.Cast<T>({\cf22 "op_Implicit"});\par
00102         \}\par
00103 \par
00104         {\cf17 private} {\cf17 static} T ExplicitCast<T>({\cf17 this} {\cf18 object} obj)\par
00105         \{\par
00106             {\cf19 return} obj.Cast<T>({\cf22 "op_Explicit"});\par
00107         \}\par
00108 \par
00109         {\cf17 private} {\cf17 static} T Cast<T>({\cf17 this} {\cf18 object} obj, {\cf18 string} castMethodName)\par
00110         \{\par
00111             Type objType = obj.GetType();\par
00112             MethodInfo methodInfo = (from mi in objType.GetMethods(BindingFlags.Static | BindingFlags.Public)\par
00113                                      where mi.Name == castMethodName && mi.ReturnType == typeof(T)\par
00114                                      select mi).SingleOrDefault(delegate (MethodInfo mi)\par
00115                                      \{\par
00116                                          ParameterInfo parameterInfo = mi.GetParameters().FirstOrDefault();\par
00117                                          {\cf19 return} parameterInfo != {\cf17 null} && parameterInfo.ParameterType == objType;\par
00118                                      \});\par
00119             {\cf19 if} (methodInfo != {\cf17 null})\par
00120             \{\par
00121                 {\cf19 return} (T)methodInfo.Invoke({\cf17 null}, {\cf17 new} {\cf18 object}[1] \{ obj \});\par
00122             \}\par
00123 \par
00124             {\cf19 throw} {\cf17 new} InvalidCastException({\cf22 "No method to cast "} + objType.FullName + {\cf22 " to "} + typeof(T).FullName);\par
00125         \}\par
00126     \}\par
00127 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CliContext.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CliContext.cs}
{\xe \v CliContext.cs}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.CliContext}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CliContext.cs\par \pard\plain 
{\tc\tcl2 \v CliContext.cs}
{\xe \v CliContext.cs}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Drawing;\par
00002 {\cf17 using }System.Reflection;\par
00003 {\cf17 using }System.Diagnostics.CodeAnalysis;\par
00004 \par
00005 {\cf17 using }SAPTeam.Kryptor.Client;\par
00006 \par
00007 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00008 \{\par
00009     {\cf17 public} {\cf17 partial class }CliContext : ClientContext\par
00010     \{\par
00011         {\cf17 public} {\cf18 bool} CatchExceptions \{ {\cf17 get}; {\cf17 set}; \}\par
00012 \par
00013         {\cf17 public} {\cf18 bool} NoColor \{ {\cf17 get}; {\cf17 set}; \}\par
00014 \par
00018         {\cf17 public} {\cf18 string} ApplicationDataDirectory \{ {\cf17 get}; \}\par
00019 \par
00020         {\cf17 public} {\cf18 bool} ApplicationDataDirectoryIsWritable\par
00021         \{\par
00022             {\cf17 get}\par
00023             \{\par
00024                 {\cf19 try}\par
00025                 \{\par
00026                     var f = File.Open(Path.Combine(ApplicationDataDirectory, {\cf22 ".write_test"}), FileMode.Create, FileAccess.Write);\par
00027                     var buffer = {\cf17 new} {\cf18 byte}[] \{ 79, 75 \};\par
00028                     f.Write(buffer, 0, buffer.Length);\par
00029                     f.Flush();\par
00030                     f.Close();\par
00031                     {\cf19 return} {\cf17 true};\par
00032                 \}\par
00033                 {\cf19 catch}\par
00034                 \{\par
00035                     {\cf19 return} {\cf17 false};\par
00036                 \}\par
00037             \}\par
00038         \}\par
00039 \par
00040         {\cf17 public} {\cf18 string} WordlistDirectory \{ {\cf17 get}; \}\par
00041 \par
00042         {\cf17 public} {\cf18 string} CliVersion \{ {\cf17 get}; \} =\par
00043 {\cf21 #if DEBUG}\par
00044         BuildInformation.ApplicationInformationalVersion;\par
00045 {\cf21 #else}\par
00046         BuildInformation.ApplicationVersion.ToString(3);\par
00047 {\cf21 #endif}\par
00048 \par
00049         {\cf17 public} CliContext()\par
00050         \{\par
00051             {\cf18 string} localAppData = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);\par
00052             {\cf18 string} unixHome = Environment.GetEnvironmentVariable({\cf22 "HOME"}) ?? Path.GetFullPath({\cf22 "."});\par
00053             {\cf18 string} altAppData = Path.Combine(unixHome, {\cf22 ".config"});\par
00054 \par
00055             ApplicationDataDirectory = Path.Combine({\cf18 string}.IsNullOrEmpty(localAppData) ? altAppData : localAppData, {\cf22 "Kryptor"}.ToLowerIfUnix());\par
00056             WordlistDirectory = Path.Combine(ApplicationDataDirectory, {\cf22 "Wordlist"}.ToLowerIfUnix());\par
00057         \}\par
00058 \par
00059         [SuppressMessage({\cf22 "Interoperability"}, {\cf22 "CA1416:Validate platform compatibility"}, Justification = {\cf22 "All non-compatible calls checked with IsAndroidPlatform property of BuildInformation"})]\par
00060         {\cf17 protected} {\cf17 override} {\cf18 void} CreateContext()\par
00061         \{\par
00062             base.CreateContext();\par
00063 \par
00064             {\cf19 if} (!BuildInformation.IsAndroidPlatform)\par
00065             \{\par
00066                 Console.CancelKeyPress += delegate\par
00067                 \{\par
00068                     Dispose();\par
00069                 \};\par
00070             \}\par
00071 \par
00072             {\cf19 if} (!Directory.Exists(ApplicationDataDirectory))\par
00073             \{\par
00074                 Directory.CreateDirectory(ApplicationDataDirectory);\par
00075             \}\par
00076 \par
00077             {\cf19 if} (!Directory.Exists(WordlistDirectory))\par
00078             \{\par
00079                 Directory.CreateDirectory(WordlistDirectory);\par
00080             \}\par
00081         \}\par
00082 \par
00083         {\cf17 protected} {\cf17 override} {\cf18 void} StartSessionHost()\par
00084         \{\par
00085             {\cf19 try}\par
00086             \{\par
00087                 base.StartSessionHost();\par
00088             \}\par
00089             {\cf19 catch} (Exception ex)\par
00090             \{\par
00091                 {\cf19 if} (CatchExceptions)\par
00092                 \{\par
00093                     Console.Error.WriteLine(${\cf22 "\{ex.GetType().Name.WithColor(Color.Red)\}: \{ex.Message\}"});\par
00094                     Environment.Exit(255);\par
00095                 \}\par
00096                 {\cf19 else}\par
00097                 \{\par
00098                     {\cf19 throw};\par
00099                 \}\par
00100             \}\par
00101         \}\par
00102     \}\par
00103 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CliHeader.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CliHeader.cs}
{\xe \v CliHeader.cs}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.CliHeader}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CliHeader.cs\par \pard\plain 
{\tc\tcl2 \v CliHeader.cs}
{\xe \v CliHeader.cs}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Reflection;\par
00002 \par
00003 {\cf21 #if NET6_0_OR_GREATER}\par
00004 {\cf17 using }System.Text.Json.Serialization;\par
00005 {\cf21 #endif}\par
00006 \par
00007 {\cf17 using }SAPTeam.Kryptor.Client;\par
00008 \par
00009 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00010 \{\par
00011     {\cf17 public} {\cf17 class }CliHeader : ClientHeader\par
00012     \{\par
00013 {\cf21 #if NET6_0_OR_GREATER}\par
00015         {\cf17 protected} {\cf17 override} JsonSerializerContext JsonSerializerContext => SourceGenerationCliHeaderContext.Default;\par
00016 {\cf21 #endif}\par
00017 \par
00018         {\cf17 public} {\cf17 static} ClientHeader Create()\par
00019         \{\par
00020             Dictionary<string, string> extra = {\cf17 new} Dictionary<string, string>\par
00021             \{\par
00022                 [{\cf22 "client"}] = {\cf22 "kryptor-cli"}\par
00023             \};\par
00024 \par
00025             {\cf19 return} {\cf17 new} CliHeader()\par
00026             \{\par
00027                 ClientName = {\cf22 "Kryptor Cli"},\par
00028                 ClientVersion = {\cf17 new} Version(Assembly.GetAssembly(typeof(Program)).GetCustomAttribute<AssemblyFileVersionAttribute>().Version),\par
00029                 Extra = extra\par
00030             \};\par
00031         \}\par
00032     \}\par
00033 \par
00034 {\cf21 #if NET6_0_OR_GREATER}\par
00035     [JsonSourceGenerationOptions(GenerationMode = JsonSourceGenerationMode.Metadata, WriteIndented = {\cf17 false}, DefaultIgnoreCondition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]\par
00036     [JsonSerializable(typeof(Header))]\par
00037     [JsonSerializable(typeof(ClientHeader))]\par
00038     [JsonSerializable(typeof(CliHeader))]\par
00039     {\cf17 internal} {\cf17 partial class }SourceGenerationCliHeaderContext : JsonSerializerContext\par
00040     \{\par
00041     \}\par
00042 {\cf21 #endif}\par
00043 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CliSessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CliSessionHost.cs}
{\xe \v CliSessionHost.cs}
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.CliSessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CliSessionHost.cs\par \pard\plain 
{\tc\tcl2 \v CliSessionHost.cs}
{\xe \v CliSessionHost.cs}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Diagnostics;\par
00002 {\cf17 using }System.Drawing;\par
00003 {\cf17 using }System.Runtime.InteropServices;\par
00004 {\cf17 using }System.Security.Cryptography;\par
00005 {\cf17 using }System.Diagnostics.CodeAnalysis;\par
00006 \par
00007 {\cf17 using }SAPTeam.Kryptor.Client;\par
00008 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00009 \par
00010 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00011 \{\par
00012     {\cf17 public} {\cf17 class }CliSessionHost : SessionHost\par
00013     \{\par
00014         {\cf17 public} {\cf18 bool} Quiet \{ {\cf17 get}; \}\par
00015 \par
00016         {\cf17 public} {\cf18 bool} NoColor \{ {\cf17 get}; \}\par
00017 \par
00018         {\cf17 public} {\cf18 bool} NoInteractions \{ {\cf17 get}; \}\par
00019 \par
00020         {\cf17 public} {\cf18 bool} IsOutputRedirected \{ {\cf17 get}; \}\par
00021 \par
00022         {\cf17 public} PauseRequest Request \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \} = {\cf17 new} PauseRequest({\cf17 null}, {\cf17 false});\par
00023 \par
00024         {\cf17 public} {\cf18 bool} HasRequest => !Request.IsEmpty() && !Request.IsResponsed;\par
00025 \par
00026         {\cf17 private} readonly {\cf18 object} _requestLock = {\cf17 new} object();\par
00027         {\cf17 private} MemoryStream mem;\par
00028         {\cf17 private} ConsoleKeyInfo cKey;\par
00029         {\cf17 private} {\cf18 bool} _readerRunning;\par
00030 \par
00031         {\cf17 protected} ConsoleKeyInfo KeyQueue\par
00032         \{\par
00033             {\cf17 get}\par
00034             \{\par
00035                 ConsoleKeyInfo key = cKey;\par
00036                 cKey = {\cf19 default};\par
00037                 {\cf19 return} key;\par
00038             \}\par
00039 \par
00040             {\cf17 set} => cKey = value;\par
00041         \}\par
00042 \par
00043         {\cf17 public} CliSessionHost(GlobalOptions globalOptions)\par
00044         \{\par
00045             Verbose = globalOptions.Verbose;\par
00046             Quiet = globalOptions.Quiet;\par
00047             NoColor = BuildInformation.IsAndroidPlatform || globalOptions.NoColor;\par
00048 \par
00049             IsOutputRedirected = BuildInformation.IsAndroidPlatform || Console.IsOutputRedirected || Quiet;\par
00050             NoInteractions = IsOutputRedirected || !{\cf18 string}.IsNullOrEmpty(Environment.GetEnvironmentVariable({\cf22 "KRYPTOR_NO_INTERACTION"}));\par
00051         \}\par
00052 \par
00053         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00054         \{\par
00055             CliContext cliContext = context as CliContext;\par
00056             cliContext.CatchExceptions = !BuildInformation.IsAndroidPlatform && !Verbose;\par
00057             cliContext.NoColor = NoColor;\par
00058 \par
00059             {\cf19 if} (Quiet)\par
00060             \{\par
00061                 StreamWriter tw = {\cf17 new} StreamWriter(mem = {\cf17 new} MemoryStream());\par
00062                 Console.SetOut(tw);\par
00063             \}\par
00064 \par
00065             {\cf19 if} (BuildInformation.IsAot) LogError({\cf22 "The AOT builds are in development stage and may have unintended behaviors"}.WithColor(Color.Yellow));\par
00066             {\cf19 if} (BuildInformation.Variant == BuildVariant.Legacy) LogError({\cf22 "The Legacy version have poor performance and uses old libraries and APIs, it's highly recommended to use the standard or Native variants"}.WithColor(Color.Yellow));\par
00067 \par
00068             Log(${\cf22 "Kryptor Command-Line Interface v\{Program.Context.CliVersion.WithColor(Color.Cyan)\}"});\par
00069 \par
00070             {\cf19 if} (BuildInformation.Branch == BuildBranch.Debug)\par
00071             \{\par
00072                 Log(${\cf22 "Engine version: \{BuildInformation.EngineVersion.ToString(3).WithColor(Color.Cyan)\}"});\par
00073             \}\par
00074         \}\par
00075 \par
00076         {\cf17 protected} {\cf18 void} Log({\cf18 string} message = {\cf17 null}) => Console.WriteLine(message);\par
00077 \par
00078         {\cf17 protected} {\cf18 void} LogError({\cf18 string} message = {\cf17 null}) => Console.Error.WriteLine(message);\par
00079 \par
00080         {\cf17 protected} {\cf18 void} DebugLog({\cf18 string} message)\par
00081         \{\par
00082             {\cf19 if} (Verbose)\par
00083             \{\par
00084                 Console.WriteLine(message);\par
00085 {\cf21 #if false}\par
00086                 File.AppendAllText({\cf22 "debug.txt"}, DateTime.Now.ToString() + {\cf22 " - "} + message + {\cf22 "\\r\\n"});\par
00087 {\cf21 #endif}\par
00088             \}\par
00089         \}\par
00090 \par
00091         [SuppressMessage({\cf22 "Interoperability"}, {\cf22 "CA1416:Validate platform compatibility"}, Justification = {\cf22 "All non-compatible calls checked with IsAndroidPlatform property of BuildInformation"})]\par
00092         {\cf17 private} async Task ShowProgressImpl({\cf18 bool} showOverall, {\cf18 bool} showRemaining = {\cf17 true})\par
00093         \{\par
00094             {\cf18 int} bufferWidth = BuildInformation.IsAndroidPlatform ? int.MaxValue : Console.BufferWidth;\par
00095             {\cf18 int} paddingBufferSize = IsOutputRedirected ? 1 : bufferWidth;\par
00096 \par
00097             Stopwatch sw = {\cf17 null};\par
00098             ConsoleFrameBuffer animations = {\cf17 new} ConsoleFrameBuffer();\par
00099             {\cf18 int} qCounter = 0;\par
00100 \par
00101             {\cf19 if} (!BuildInformation.IsAndroidPlatform && !IsOutputRedirected)\par
00102             \{\par
00103                 Console.CursorVisible = {\cf17 false};\par
00104             \}\par
00105 \par
00106             SessionHolder[] holders = Container.Holders.ToArray();\par
00107             List<ISession> sessions = holders.Select(x => x.Session).ToList();\par
00108 \par
00109             {\cf19 if} (sessions.Count == 0 || (!IsOutputRedirected && bufferWidth < 50))\par
00110             \{\par
00111                 showOverall = {\cf17 false};\par
00112             \}\par
00113 \par
00114             {\cf18 int} extraLines = 0;\par
00115 \par
00116             {\cf19 if} (showOverall)\par
00117             \{\par
00118                 sw = Stopwatch.StartNew();\par
00119                 extraLines++;\par
00120             \}\par
00121 \par
00122             IEnumerable<ISession> blockingSessions = sessions.Where(x => x.Status != SessionStatus.Managed);\par
00123             List<ISession> flaggedSessions = {\cf17 new} List<ISession>();\par
00124 \par
00125             {\cf18 int} lines = Container.Sessions.Where(x => !x.IsHidden).Count() + extraLines;\par
00126             {\cf18 int} maxLines = BuildInformation.IsAndroidPlatform ? int.MaxValue : Console.BufferHeight - 1;\par
00127             {\cf18 int} ceilingLine = 0;\par
00128 \par
00129             {\cf19 while} ({\cf17 true})\par
00130             \{\par
00131                 {\cf18 bool} isCompleted = blockingSessions.All(x => x.Status == SessionStatus.Ended);\par
00132                 {\cf18 int} curLines = extraLines;\par
00133 \par
00134                 {\cf18 double} totalProg = 0;\par
00135                 {\cf18 int} count = 0;\par
00136 \par
00137                 {\cf18 double} runningProg = 0;\par
00138                 {\cf18 double} runningRem = 0;\par
00139                 {\cf18 int} runningCount = 0;\par
00140 \par
00141                 {\cf19 foreach} (ISession session {\cf19 in} sessions)\par
00142                 \{\par
00143                     {\cf19 if} (session.Progress >= 0\par
00144                         && (session.IsRunning\par
00145                             || session.Status == SessionStatus.NotStarted\par
00146                             || (session.Status == SessionStatus.Ended && (session.EndReason == SessionEndReason.Completed\par
00147                                                                           || session.EndReason == SessionEndReason.Cancelled))))\par
00148                     \{\par
00149                         {\cf18 double} sProg = session.Progress;\par
00150 \par
00151                         totalProg += sProg;\par
00152                         count++;\par
00153 \par
00154                         {\cf19 if} (session.IsRunning && session.Timer != {\cf17 null})\par
00155                         \{\par
00156                             runningProg += sProg;\par
00157                             runningRem += Utilities.CalculateRemainingTime(sProg, session.Timer.ElapsedMilliseconds);\par
00158                             runningCount++;\par
00159                         \}\par
00160                     \}\par
00161 \par
00162                     {\cf19 if} (!session.IsHidden && (!IsOutputRedirected || session.Status == SessionStatus.Ended))\par
00163                     \{\par
00164                         {\cf19 if} (IsOutputRedirected)\par
00165                         \{\par
00166                             flaggedSessions.Add(session);\par
00167                         \}\par
00168                         {\cf19 else}\par
00169                         \{\par
00170                             {\cf19 if} (!isCompleted && lines > maxLines)\par
00171                             \{\par
00172                                 {\cf19 if} (!session.IsRunning || curLines >= maxLines)\par
00173                                 \{\par
00174                                     {\cf19 continue};\par
00175                                 \}\par
00176                             \}\par
00177                         \}\par
00178 \par
00179                         GetSessionInfo(bufferWidth, animations, session, out Color color, out {\cf18 string} prog, out {\cf18 string} desc);\par
00180 \par
00181                         Console.Write(${\cf22 "[\{prog.WithColor(color)\}] \{desc\}"});\par
00182 \par
00183                         {\cf18 int} padLength = paddingBufferSize - prog.Length - 3 - desc.Length;\par
00184                         Console.WriteLine({\cf22 ""}.PadRight(padLength > -1 ? padLength : 0));\par
00185 \par
00186                         curLines++;\par
00187                     \}\par
00188                 \};\par
00189 \par
00190                 {\cf19 foreach} (ISession session {\cf19 in} flaggedSessions)\par
00191                 \{\par
00192                     sessions.Remove(session);\par
00193                 \}\par
00194 \par
00195                 flaggedSessions.Clear();\par
00196 \par
00197                 {\cf19 if} (showOverall && (!IsOutputRedirected || isCompleted))\par
00198                 \{\par
00199                     ShowOverallTime(showRemaining, paddingBufferSize, sw, ref totalProg, count, ref runningRem, runningCount, isCompleted);\par
00200                 \}\par
00201 \par
00202                 {\cf19 if} (!IsOutputRedirected)\par
00203                 \{\par
00204                     FillToCeiling(paddingBufferSize, ref ceilingLine, ref curLines);\par
00205                 \}\par
00206 \par
00207                 HandleRequests(bufferWidth, paddingBufferSize);\par
00208 \par
00209                 animations.Next();\par
00210 \par
00211                 {\cf19 if} (isCompleted)\par
00212                 \{\par
00213                     sw?.Stop();\par
00214 \par
00215                     {\cf19 if} (!BuildInformation.IsAndroidPlatform && !IsOutputRedirected)\par
00216                     \{\par
00217                         Console.CursorVisible = {\cf17 true};\par
00218                     \}\par
00219 \par
00220                     PrintMessages(holders);\par
00221 \par
00222                     {\cf19 break};\par
00223                 \}\par
00224 \par
00225                 {\cf19 if} (MasterToken.IsCancellationRequested && qCounter++ % 10 == 6)\par
00226                 \{\par
00227                     Container.StartQueuedSessions();\par
00228                 \}\par
00229 \par
00230                 {\cf19 if} (!IsOutputRedirected)\par
00231                 \{\par
00232                     await AsyncCompat.Delay(100);\par
00233 \par
00234                     {\cf19 if} (!BuildInformation.IsAndroidPlatform)\par
00235                     \{\par
00236                         Console.CursorLeft = 0;\par
00237                         Console.CursorTop -= Math.Min(ceilingLine, maxLines);\par
00238                     \}\par
00239                 \}\par
00240             \}\par
00241         \}\par
00242 \par
00243         [SuppressMessage({\cf22 "Interoperability"}, {\cf22 "CA1416:Validate platform compatibility"}, Justification = {\cf22 "All non-compatible calls checked with IsAndroidPlatform property of BuildInformation"})]\par
00244         {\cf17 private} {\cf18 void} HandleRequests({\cf18 int} bufferWidth, {\cf18 int} paddingBufferSize)\par
00245         \{\par
00246             {\cf19 if} (!BuildInformation.IsAndroidPlatform && !NoInteractions)\par
00247             \{\par
00248                 {\cf19 if} (HasRequest)\par
00249                 \{\par
00250                     {\cf18 string} choices = Request.Default ? {\cf22 "Y/n"} : {\cf22 "y/N"};\par
00251                     Console.Write(${\cf22 "\{Request.Message.Shrink(bufferWidth - 8)\} (\{choices\})"});\par
00252                 \}\par
00253                 {\cf19 else}\par
00254                 \{\par
00255                     Console.Write({\cf22 ""}.PadRight(paddingBufferSize));\par
00256                     Console.CursorLeft = 0;\par
00257                 \}\par
00258 \par
00259                 ConsoleKeyInfo key = KeyQueue;\par
00260                 {\cf19 if} (key != {\cf19 default})\par
00261                 \{\par
00262                     {\cf19 if} (HasRequest)\par
00263                     \{\par
00264                         {\cf19 if} (key.Key == ConsoleKey.Y || key.Key == ConsoleKey.N)\par
00265                         \{\par
00266                             Request.SetResponse(key.Key == ConsoleKey.Y);\par
00267                         \}\par
00268                         {\cf19 else} {\cf19 if} (key.Key == ConsoleKey.Enter)\par
00269                         \{\par
00270                             Request.SetResponse(Request.Default);\par
00271                         \}\par
00272                     \}\par
00273                 \}\par
00274             \}\par
00275             {\cf19 else} {\cf19 if} (HasRequest)\par
00276             \{\par
00277                 Request.SetResponse(Request.Default);\par
00278             \}\par
00279         \}\par
00280 \par
00281         [SuppressMessage({\cf22 "Interoperability"}, {\cf22 "CA1416:Validate platform compatibility"}, Justification = {\cf22 "All non-compatible calls checked with IsAndroidPlatform property of BuildInformation"})]\par
00282         {\cf17 private} async Task ShowProgressNewImpl(SessionGroup sessionGroup)\par
00283         \{\par
00284             var bw = BuildInformation.IsAndroidPlatform ? int.MaxValue : Console.BufferWidth;\par
00285             var paddingSize = IsOutputRedirected ? 1 : bw;\par
00286             {\cf18 int} counter = 0;\par
00287 \par
00288             {\cf19 if} (!BuildInformation.IsAndroidPlatform && !IsOutputRedirected)\par
00289             \{\par
00290                 Console.CursorVisible = {\cf17 false};\par
00291             \}\par
00292 \par
00293             {\cf19 while} ({\cf17 true})\par
00294             \{\par
00295                 var ended = sessionGroup.Status == SessionStatus.Ended;\par
00296 \par
00297                 {\cf18 string} progress;\par
00298                 Color color;\par
00299                 {\cf19 if} (ended)\par
00300                 \{\par
00301                     SetEndReasonStatus(sessionGroup.EndReason, out color, out progress);\par
00302                     {\cf19 if} (sessionGroup.EndReason != SessionEndReason.Completed && sessionGroup.Completed > 0)\par
00303                     \{\par
00304                         progress = ${\cf22 "some tasks \{progress\}"};\par
00305                     \}\par
00306                 \}\par
00307                 {\cf19 else}\par
00308                 \{\par
00309                     progress = ${\cf22 "\{Math.Round(sessionGroup.Progress, 2)\}%"}.PadBoth(6);\par
00310                     color = Color.Yellow;\par
00311                 \}\par
00312 \par
00313                 var description = ${\cf22 "Finnished \{sessionGroup.Completed\} of \{sessionGroup.Count\} tasks"};\par
00314 \par
00315                 {\cf19 if} (BuildInformation.Branch == BuildBranch.Debug || Verbose)\par
00316                 \{\par
00317                     {\cf19 if} (sessionGroup.Cancelled > 0)\par
00318                     \{\par
00319                         description += ${\cf22 ", cancelled: \{sessionGroup.Cancelled\}"};\par
00320                     \}\par
00321                     {\cf19 if} (sessionGroup.Failed > 0)\par
00322                     \{\par
00323                         description += ${\cf22 ", failed: \{sessionGroup.Failed\}"};\par
00324                     \}\par
00325                     {\cf19 if} (sessionGroup.Skipped > 0)\par
00326                     \{\par
00327                         description += ${\cf22 ", skipped: \{sessionGroup.Skipped\}"};\par
00328                     \}\par
00329                     {\cf19 if} (sessionGroup.Unknown > 0)\par
00330                     \{\par
00331                         description += ${\cf22 ", unknown: \{sessionGroup.Unknown\}"};\par
00332                     \}\par
00333                 \}\par
00334 \par
00335                 {\cf19 if} (!IsOutputRedirected)\par
00336                 \{\par
00337                     {\cf18 int} expectedLength = bw - progress.Length - 5;\par
00338                     description = description.Shrink(expectedLength);\par
00339                 \}\par
00340 \par
00341                 {\cf19 if} (!IsOutputRedirected || ended)\par
00342                 \{\par
00343                     Console.Write(${\cf22 "[\{progress.WithColor(color)\}] \{description\}"});\par
00344 \par
00345                     {\cf18 int} padLength = paddingSize - progress.Length - 3 - description.Length;\par
00346                     Console.WriteLine({\cf22 ""}.PadRight(padLength > -1 ? padLength : 0));\par
00347                 \}\par
00348 \par
00349                 {\cf18 string} overall = ${\cf22 "Elapsed: \{sessionGroup.Timer.Elapsed:hh\\\\:mm\\\\:ss\}"};\par
00350 \par
00351                 {\cf19 if} (!ended)\par
00352                 \{\par
00353                     overall += ${\cf22 " Remaining: \{Utilities.CalculateRemainingTimeSpan(sessionGroup.Progress, sessionGroup.Timer.ElapsedMilliseconds):hh\\\\:mm\\\\:ss\}"};\par
00354                 \}\par
00355 \par
00356                 {\cf19 if} (!IsOutputRedirected || ended)\par
00357                 \{\par
00358                     Console.WriteLine(overall.PadRight(paddingSize));\par
00359                 \}\par
00360 \par
00361                 HandleRequests(bw, paddingSize);\par
00362 \par
00363                 {\cf19 if} (ended)\par
00364                 \{\par
00365                     {\cf19 foreach} (var msg {\cf19 in} sessionGroup.Messages)\par
00366                     \{\par
00367                         LogError(msg);\par
00368                     \}\par
00369 \par
00370                     {\cf19 if} (!BuildInformation.IsAndroidPlatform && !IsOutputRedirected)\par
00371                     \{\par
00372                         Console.CursorVisible = {\cf17 true};\par
00373                     \}\par
00374 \par
00375                     {\cf19 break};\par
00376                 \}\par
00377 \par
00378                 {\cf19 if} (MasterToken.IsCancellationRequested && counter++ % 10 == 6)\par
00379                 \{\par
00380                     Container.StartQueuedSessions();\par
00381                 \}\par
00382 \par
00383                 {\cf19 if} (!IsOutputRedirected)\par
00384                 \{\par
00385                     await AsyncCompat.Delay(100);\par
00386 \par
00387                     {\cf19 if} (!BuildInformation.IsAndroidPlatform)\par
00388                     \{\par
00389                         Console.SetCursorPosition(0, Console.CursorTop - 2);\par
00390                     \}\par
00391                 \}\par
00392             \}\par
00393         \}\par
00394 \par
00395         {\cf17 private} {\cf17 static} {\cf18 void} FillToCeiling({\cf18 int} paddingBufferSize, ref {\cf18 int} ceilingLine, ref {\cf18 int} curLines)\par
00396         \{\par
00397             {\cf19 if} (curLines > ceilingLine)\par
00398             \{\par
00399                 ceilingLine = curLines;\par
00400             \}\par
00401             {\cf19 else} {\cf19 if} (curLines < ceilingLine)\par
00402             \{\par
00403                 {\cf19 while} (curLines < ceilingLine)\par
00404                 \{\par
00405                     Console.WriteLine({\cf22 ""}.PadRight(paddingBufferSize));\par
00406                     curLines++;\par
00407                 \}\par
00408             \}\par
00409         \}\par
00410 \par
00411         {\cf17 private} {\cf18 void} PrintMessages(SessionHolder[] holders)\par
00412         \{\par
00413             IEnumerable<ISession> _sessions = holders.Select(x => x.Session);\par
00414             {\cf19 foreach} (SessionHolder holder {\cf19 in} holders.Where(x => x.Session.Messages.Count > 0))\par
00415             \{\par
00416                 {\cf18 bool} showId = _sessions.Where(x => x.GetType().IsAssignableFrom(holder.Session.GetType())).Count() > 1;\par
00417                 {\cf18 string} prefix = ${\cf22 "\{holder.Session.Name\}"};\par
00418                 {\cf19 if} (showId)\par
00419                 \{\par
00420                     prefix = ${\cf22 "\{holder.Id\}:\{prefix\}"};\par
00421                 \}\par
00422 \par
00423                 {\cf19 foreach} ({\cf18 string} message {\cf19 in} holder.Session.Messages)\par
00424                 \{\par
00425                     LogError(${\cf22 "\{prefix\} -> \{message\}"});\par
00426                 \}\par
00427             \}\par
00428         \}\par
00429 \par
00430         {\cf17 private} {\cf17 static} {\cf18 void} ShowOverallTime({\cf18 bool} showRemaining, {\cf18 int} paddingBufferSize, Stopwatch sw, ref {\cf18 double} totalProg, {\cf18 int} count, ref {\cf18 double} runningRem, {\cf18 int} runningCount, {\cf18 bool} isCompleted)\par
00431         \{\par
00432             totalProg = count > 0 ? Math.Round(totalProg / count, 2) : 0;\par
00433             runningRem = runningCount > 0 ? runningRem / runningCount : 0;\par
00434             TimeSpan elapsedTime = sw.Elapsed;\par
00435             TimeSpan remainingTime;\par
00436 \par
00437             {\cf19 try}\par
00438             \{\par
00439                 remainingTime = TimeSpan.FromMilliseconds(runningRem);\par
00440             \}\par
00441             {\cf19 catch}\par
00442             \{\par
00443                 remainingTime = {\cf19 default};\par
00444             \}\par
00445 \par
00446             {\cf18 string} ovText = {\cf22 ""};\par
00447 \par
00448             {\cf19 if} (!isCompleted && totalProg > 0)\par
00449             \{\par
00450                 ovText = ${\cf22 "[\{totalProg\}%] "};\par
00451             \}\par
00452 \par
00453             ovText += ${\cf22 "Elapsed: \{elapsedTime:hh\\\\:mm\\\\:ss\}"};\par
00454 \par
00455             {\cf19 if} (showRemaining && runningRem > 0 && remainingTime != {\cf19 default})\par
00456             \{\par
00457                 ovText += ${\cf22 " Remaining: \{remainingTime:hh\\\\:mm\\\\:ss\}"};\par
00458             \}\par
00459 \par
00460             Console.WriteLine(ovText.PadRight(paddingBufferSize));\par
00461         \}\par
00462 \par
00463         {\cf17 private} {\cf18 void} GetSessionInfo({\cf18 int} bufferWidth, ConsoleFrameBuffer animations, ISession session, out Color color, out {\cf18 string} prog, out {\cf18 string} desc)\par
00464         \{\par
00465             color = Color.DarkCyan;\par
00466             prog = animations.Waiting;\par
00467 \par
00468             {\cf19 if} (session.IsRunning)\par
00469             \{\par
00470                 color = Color.Yellow;\par
00471                 prog = session.IsPaused ? animations.Paused : session.Progress <= 0 || session.Progress > 100.00 ? animations.Loading : ${\cf22 "\{Math.Round(session.Progress, 2)\}%"}.PadBoth(6);\par
00472             \}\par
00473             {\cf19 else} {\cf19 if} (session.Status == SessionStatus.Ended)\par
00474             \{\par
00475                 SetEndReasonStatus(session.EndReason, out color, out prog);\par
00476 \par
00477                 {\cf18 string} time;\par
00478                 {\cf19 if} (Verbose && session.Timer != {\cf17 null} && (((time = (({\cf18 double})session.Timer.ElapsedMilliseconds / 1000).ToString({\cf22 "N1"})) != {\cf22 "0.0"}) || session.EndReason == SessionEndReason.Completed))\par
00479                 \{\par
00480                     prog += ${\cf22 " in \{time\}s"};\par
00481                 \}\par
00482             \}\par
00483 \par
00484             desc = session.Description;\par
00485 \par
00486             {\cf19 if} (!IsOutputRedirected)\par
00487             \{\par
00488                 {\cf18 int} expectedLength = bufferWidth - prog.Length - 5;\par
00489                 desc = desc.Shrink(expectedLength);\par
00490             \}\par
00491         \}\par
00492 \par
00493         {\cf17 private} {\cf17 static} {\cf18 void} SetEndReasonStatus(SessionEndReason endReason, out Color color, out {\cf18 string} prog)\par
00494         \{\par
00495             {\cf19 switch} (endReason)\par
00496             \{\par
00497                 {\cf19 case} SessionEndReason.Completed:\par
00498                     color = Color.LawnGreen;\par
00499                     prog = {\cf22 "done"};\par
00500                     {\cf19 break};\par
00501                 {\cf19 case} SessionEndReason.Failed:\par
00502                     color = Color.Red;\par
00503                     prog = {\cf22 "failed"};\par
00504                     {\cf19 break};\par
00505                 {\cf19 case} SessionEndReason.Cancelled:\par
00506                     color = Color.Orange;\par
00507                     prog = {\cf22 "cancelled"};\par
00508                     {\cf19 break};\par
00509                 {\cf19 case} SessionEndReason.Skipped:\par
00510                     color = Color.Silver;\par
00511                     prog = {\cf22 "skipped"};\par
00512                     {\cf19 break};\par
00513                 {\cf19 default}:\par
00514                     color = Color.DarkRed;\par
00515                     prog = {\cf22 "unknown"};\par
00516                     {\cf19 break};\par
00517             \}\par
00518         \}\par
00519 \par
00520         [SuppressMessage({\cf22 "Interoperability"}, {\cf22 "CA1416:Validate platform compatibility"}, Justification = {\cf22 "All non-compatible calls checked with IsAndroidPlatform property of BuildInformation"})]\par
00521         {\cf17 private} async Task ReadKey()\par
00522         \{\par
00523             {\cf19 if} (BuildInformation.IsAndroidPlatform)\par
00524             \{\par
00525                 {\cf19 throw} {\cf17 new} NotSupportedException({\cf22 "The key reading feature is not supported in this platform"});\par
00526             \}\par
00527 \par
00528             {\cf19 if} (_readerRunning) {\cf19 return};\par
00529             _readerRunning = {\cf17 true};\par
00530 \par
00531             {\cf19 while} ({\cf17 true})\par
00532             \{\par
00533                 KeyQueue = Console.ReadKey({\cf17 true});\par
00534 \par
00535                 await AsyncCompat.Delay(50);\par
00536 \par
00537                 {\cf19 if} (!HasRequest)\par
00538                 \{\par
00539                     {\cf19 break};\par
00540                 \}\par
00541             \}\par
00542 \par
00543             _readerRunning = {\cf17 false};\par
00544         \}\par
00545 \par
00546         {\cf17 protected} Task ShowProgress({\cf18 bool} showOverall, {\cf18 bool} showRemaining)\par
00547         \{\par
00548             Task pTask = ShowProgressImpl(showOverall, showRemaining);\par
00549             \par
00550             {\cf19 return} pTask;\par
00551         \}\par
00552 \par
00553         {\cf17 protected} Task ShowProgressMonitored({\cf18 bool} showOverall, {\cf18 bool} showRemaining = {\cf17 true})\par
00554         \{\par
00555             Task pTask = ShowProgress(showOverall, showRemaining);\par
00556             MonitorTask(pTask);\par
00557             {\cf19 return} pTask;\par
00558         \}\par
00559 \par
00560         {\cf17 protected} Task ShowProgress(SessionGroup sessionGroup)\par
00561         \{\par
00562             Task pTask = ShowProgressNewImpl(sessionGroup);\par
00563 \par
00564             {\cf19 return} pTask;\par
00565         \}\par
00566 \par
00567         {\cf17 protected} Task ShowProgressMonitored(SessionGroup sessionGroup)\par
00568         \{\par
00569             Task pTask = ShowProgress(sessionGroup);\par
00570             MonitorTask(pTask);\par
00571             {\cf19 return} pTask;\par
00572         \}\par
00573 \par
00574         {\cf17 protected} KeyStore LoadKeyStore({\cf18 string} keyStore)\par
00575         \{\par
00576             KeyStore ks;\par
00577 \par
00578             KeyStoreLoadSession session = CreateKeyStoreLoadSession(keyStore);\par
00579             NewSession(session, {\cf17 true});\par
00580 \par
00581             ShowProgressMonitored({\cf17 false}).Wait();\par
00582             ks = session.KeyStore;\par
00583 \par
00584             {\cf19 return} session.EndReason != SessionEndReason.Completed ? {\cf19 throw} {\cf17 new} ApplicationException({\cf22 "KeyStoreLoad failed"}) : ks;\par
00585         \}\par
00586 \par
00587         {\cf17 protected} KeyStoreLoadSession CreateKeyStoreLoadSession({\cf18 string} keyStore)\par
00588         \{\par
00589             KeyStoreLoadSession session;\par
00590             {\cf19 if} (File.Exists(keyStore))\par
00591             \{\par
00592                 DebugLog(${\cf22 "Keystore file: \{keyStore\}"});\par
00593                 session = {\cf17 new} KeyStoreFileLoadSession(Verbose, keyStore);\par
00594 \par
00595             \}\par
00596             {\cf19 else} {\cf19 if} (TransformerToken.IsValid(keyStore))\par
00597             \{\par
00598                 DebugLog(${\cf22 "Transformer token: \{keyStore\}"});\par
00599                 TransformerToken token = TransformerToken.Parse(keyStore);\par
00600 \par
00601                 {\cf19 if} (Verbose)\par
00602                 \{\par
00603                     ITranformer tranformer = Transformers.GetTranformer(token);\par
00604                     DebugLog(${\cf22 "Generating keystore with \{token.KeySize\} keys using \{tranformer.GetType().Name\}"});\par
00605                 \}\par
00606 \par
00607                 session = {\cf17 new} KeyStoreTokenLoadSession(Verbose, token, 0);\par
00608             \}\par
00609             {\cf19 else}\par
00610             \{\par
00611                 {\cf19 throw} {\cf17 new} FileNotFoundException(keyStore);\par
00612             \}\par
00613 \par
00614             {\cf19 return} session;\par
00615         \}\par
00616 \par
00617         {\cf17 public} {\cf17 override} async Task<TResponse> OnSessionRequest<TResponse>(ISession session, SessionRequest<TResponse> request, CancellationToken cancellationToken)\par
00618         \{\par
00619             await AsyncCompat.Delay(2);\par
00620 \par
00621             lock (_requestLock)\par
00622             \{\par
00623                 {\cf19 return} RequestHandler(session, request, cancellationToken).Result;\par
00624             \}\par
00625         \}\par
00626 \par
00627         {\cf17 private} async Task<TResponse> RequestHandler<TResponse>(ISession session, SessionRequest<TResponse> request, CancellationToken cancellationToken)\par
00628         \{\par
00629             {\cf19 if} (!session.IsPaused)\par
00630             \{\par
00631                 {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "The session must be paused before send request"});\par
00632             \}\par
00633 \par
00634             {\cf19 if} (request.DefaultValue is {\cf18 bool})\par
00635             \{\par
00636                 Request = {\cf17 new} PauseRequest(request.Message, request.DefaultValue.Cast<{\cf18 bool}>());\par
00637 \par
00638                 {\cf19 if} (!BuildInformation.IsAndroidPlatform && !NoInteractions && !_readerRunning)\par
00639                 \{\par
00640                     _ = Task.Run(ReadKey);\par
00641                 \}\par
00642 \par
00643                 {\cf19 while} (!Request.IsResponsed)\par
00644                 \{\par
00645                     await AsyncCompat.Delay(5, cancellationToken);\par
00646                 \}\par
00647 \par
00648                 {\cf19 return} Request.Response.Cast<TResponse>();\par
00649             \}\par
00650             {\cf19 else}\par
00651             \{\par
00652                 {\cf19 throw} {\cf17 new} NotSupportedException({\cf22 "The request type is not supported"});\par
00653             \}\par
00654         \}\par
00655     \}\par
00656 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ConsoleFrameBuffer.cs File Reference\par \pard\plain 
{\tc\tcl2 \v ConsoleFrameBuffer.cs}
{\xe \v ConsoleFrameBuffer.cs}
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.ConsoleFrameBuffer}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ConsoleFrameBuffer.cs\par \pard\plain 
{\tc\tcl2 \v ConsoleFrameBuffer.cs}
{\xe \v ConsoleFrameBuffer.cs}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00002 \{\par
00003     {\cf17 public} {\cf17 class }ConsoleFrameBuffer\par
00004     \{\par
00005         {\cf17 private} readonly {\cf18 string}[] LoadingFrameBuffer = {\cf17 new} {\cf18 string}[]\par
00006         \{\par
00007             {\cf22 "||--"},\par
00008             {\cf22 "|||-"},\par
00009             {\cf22 "-|||"},\par
00010             {\cf22 "--||"},\par
00011             {\cf22 "---|"},\par
00012             {\cf22 "--||"},\par
00013             {\cf22 "-|||"},\par
00014             {\cf22 "|||-"},\par
00015             {\cf22 "||--"},\par
00016             {\cf22 "|---"},\par
00017         \};\par
00018         {\cf17 private} readonly {\cf18 string}[] WaitingFrameBuffer = {\cf17 new} {\cf18 string}[]\par
00019         \{\par
00020             {\cf22 "|---"},\par
00021             {\cf22 "||--"},\par
00022             {\cf22 "|||-"},\par
00023             {\cf22 "||||"},\par
00024             {\cf22 "-|||"},\par
00025             {\cf22 "--||"},\par
00026             {\cf22 "---|"},\par
00027             {\cf22 "----"},\par
00028             {\cf22 "----"},\par
00029             {\cf22 "----"},\par
00030             {\cf22 "----"},\par
00031         \};\par
00032         {\cf17 private} readonly {\cf18 string}[] PausedFrameBuffer = {\cf17 new} {\cf18 string}[]\par
00033         \{\par
00034             {\cf22 "||||"},\par
00035             {\cf22 "||||"},\par
00036             {\cf22 "----"},\par
00037             {\cf22 "----"},\par
00038             {\cf22 "----"},\par
00039             {\cf22 "----"},\par
00040         \};\par
00041         {\cf17 private} {\cf18 int} loadingPos = 0;\par
00042         {\cf17 private} {\cf18 int} waitingPos = 0;\par
00043         {\cf17 private} {\cf18 int} pausedPos = 0;\par
00044 \par
00045         {\cf17 public} {\cf18 string} Loading => LoadingFrameBuffer[loadingPos];\par
00046         {\cf17 public} {\cf18 string} Waiting => WaitingFrameBuffer[waitingPos];\par
00047         {\cf17 public} {\cf18 string} Paused => PausedFrameBuffer[pausedPos];\par
00048 \par
00049         {\cf17 public} {\cf18 void} Next()\par
00050         \{\par
00051             loadingPos = (loadingPos + 1) % LoadingFrameBuffer.Length;\par
00052             waitingPos = (waitingPos + 1) % WaitingFrameBuffer.Length;\par
00053             pausedPos = (pausedPos + 1) % PausedFrameBuffer.Length;\par
00054         \}\par
00055     \}\par
00056 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DataProcessingOptions.cs File Reference\par \pard\plain 
{\tc\tcl2 \v DataProcessingOptions.cs}
{\xe \v DataProcessingOptions.cs}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.DataProcessingOptions}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.DataProcessingOptionsBinder}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DataProcessingOptions.cs\par \pard\plain 
{\tc\tcl2 \v DataProcessingOptions.cs}
{\xe \v DataProcessingOptions.cs}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.CommandLine;\par
00002 {\cf17 using }System.CommandLine.Binding;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00005 \{\par
00006     {\cf17 public} {\cf17 class }DataProcessingOptions\par
00007     \{\par
00008         {\cf17 public} {\cf18 int} BlockSize \{ {\cf17 get}; {\cf17 set}; \}\par
00009         {\cf17 public} {\cf18 string} Provider \{ {\cf17 get}; {\cf17 set}; \}\par
00010         {\cf17 public} {\cf18 bool} Continuous \{ {\cf17 get}; {\cf17 set}; \}\par
00011         {\cf17 public} {\cf18 bool} RemoveHash \{ {\cf17 get}; {\cf17 set}; \}\par
00012         {\cf17 public} {\cf18 bool} DynamicBlockProcessing \{ {\cf17 get}; {\cf17 set}; \}\par
00013         {\cf17 public} {\cf18 string} OutputPath \{ {\cf17 get}; {\cf17 set}; \}\par
00014         {\cf17 public} {\cf18 string} KeyStore \{ {\cf17 get}; {\cf17 set}; \}\par
00015         {\cf17 public} {\cf18 string}[] Files \{ {\cf17 get}; {\cf17 set}; \}\par
00016     \}\par
00017 \par
00018     {\cf17 public} {\cf17 class }DataProcessingOptionsBinder : BinderBase<DataProcessingOptions>\par
00019     \{\par
00020         {\cf17 private} readonly Option<int> blockSize;\par
00021         {\cf17 private} readonly Option<string> provider;\par
00022         {\cf17 private} readonly Option<bool> continuous;\par
00023         {\cf17 private} readonly Option<bool> removeHash;\par
00024         {\cf17 private} readonly Option<bool> dbp;\par
00025         {\cf17 private} readonly Option<string> outputPath;\par
00026         {\cf17 private} readonly Option<string> keyStore;\par
00027         {\cf17 private} readonly Argument<IEnumerable<string>> files;\par
00028 \par
00029         {\cf17 public} DataProcessingOptionsBinder(Option<int> blockSize, Option<string> provider, Option<bool> continuous, Option<bool> removeHash, Option<bool> dbp, Option<string> outputPath, Option<string> keyStore, Argument<IEnumerable<string>> files)\par
00030         \{\par
00031             this.blockSize = blockSize;\par
00032             this.provider = provider;\par
00033             this.continuous = continuous;\par
00034             this.removeHash = removeHash;\par
00035             this.dbp = dbp;\par
00036             this.outputPath = outputPath;\par
00037             this.keyStore = keyStore;\par
00038             this.files = files;\par
00039         \}\par
00040 \par
00041         {\cf17 protected} {\cf17 override} DataProcessingOptions GetBoundValue(BindingContext bindingContext)\par
00042         \{\par
00043             {\cf19 return} {\cf17 new} DataProcessingOptions()\par
00044             \{\par
00045                 BlockSize = bindingContext.ParseResult.GetValueForOption(blockSize),\par
00046                 Provider = bindingContext.ParseResult.GetValueForOption(provider),\par
00047                 Continuous = bindingContext.ParseResult.GetValueForOption(continuous),\par
00048                 RemoveHash = bindingContext.ParseResult.GetValueForOption(removeHash),\par
00049                 DynamicBlockProcessing = bindingContext.ParseResult.GetValueForOption(dbp),\par
00050                 OutputPath = bindingContext.ParseResult.GetValueForOption(outputPath),\par
00051                 KeyStore = bindingContext.ParseResult.GetValueForOption(keyStore),\par
00052                 Files = bindingContext.ParseResult.GetValueForArgument(files).ToArray(),\par
00053             \};\par
00054         \}\par
00055     \}\par
00056 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DataProcessingSessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v DataProcessingSessionHost.cs}
{\xe \v DataProcessingSessionHost.cs}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.DataProcessingSessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DataProcessingSessionHost.cs\par \pard\plain 
{\tc\tcl2 \v DataProcessingSessionHost.cs}
{\xe \v DataProcessingSessionHost.cs}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.CommandLine;\par
00002 \par
00003 {\cf17 using }SAPTeam.Kryptor.Client;\par
00004 \par
00005 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00006 \{\par
00007     {\cf17 public} {\cf17 class }DataProcessingSessionHost : CliSessionHost\par
00008     \{\par
00009         {\cf18 string}[] fString;\par
00010 \par
00011         {\cf17 public} {\cf18 int} BlockSize \{ {\cf17 get}; \}\par
00012 \par
00013         {\cf17 public} CryptoProviderConfiguration Configuration \{ {\cf17 get}; \}\par
00014 \par
00015         {\cf17 public} {\cf18 string} OutputPath \{ {\cf17 get}; \}\par
00016 \par
00017         {\cf17 public} KeyStore KeyStore \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00018 \par
00019         {\cf17 public} readonly {\cf18 string} KeystoreString;\par
00020 \par
00021         {\cf17 public} DataProcessingSessionHost(GlobalOptions globalOptions, DataProcessingOptions options) : base(globalOptions)\par
00022         \{\par
00023             BlockSize = options.BlockSize;\par
00024 \par
00025             Configuration = {\cf17 new} CryptoProviderConfiguration()\par
00026             \{\par
00027                 Id = CryptoProviderFactory.GetRegisteredCryptoProviderId(options.Provider),\par
00028                 Continuous = options.Continuous,\par
00029                 RemoveHash = options.RemoveHash,\par
00030                 DynamicBlockProccessing = options.DynamicBlockProcessing,\par
00031             \};\par
00032 \par
00033             OutputPath = Utilities.EnsureDirectoryExists(options.OutputPath);\par
00034 \par
00035             fString = options.Files;\par
00036 \par
00037             KeystoreString = options.KeyStore;\par
00038         \}\par
00039 \par
00040         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00041         \{\par
00042             base.Start(context);\par
00043 \par
00044             KeyStore = LoadKeyStore(KeystoreString);\par
00045         \}\par
00046 \par
00047         {\cf17 public} Task GetSmartProgress(SessionGroup sessionGroup)\par
00048         \{\par
00049             Task progress;\par
00050             {\cf19 if} (sessionGroup.Count > 20)\par
00051             \{\par
00052                 progress = ShowProgressMonitored(sessionGroup);\par
00053             \}\par
00054             {\cf19 else}\par
00055             \{\par
00056                 progress = ShowProgressMonitored({\cf17 true});\par
00057             \}\par
00058 \par
00059             {\cf19 return} progress;\par
00060         \}\par
00061 \par
00062         {\cf17 public} {\cf18 void} EnumerateFiles(Action<string, string> action)\par
00063         \{\par
00064             Parallel.ForEach(fString, file =>\par
00065             \{\par
00066                 {\cf19 if} (Directory.Exists(file))\par
00067                 \{\par
00068                     {\cf19 foreach} (var subfile {\cf19 in} Directory.GetFiles(file, {\cf22 "*"}, SearchOption.AllDirectories))\par
00069                     \{\par
00070                         action(subfile, Utilities.EnsureDirectoryExists(Path.Combine(OutputPath, GetRelativePath(file, Path.GetDirectoryName(subfile)))));\par
00071                     \}\par
00072                 \}\par
00073                 {\cf19 else}\par
00074                 \{\par
00075                     action(Path.GetFullPath(file), OutputPath);\par
00076                 \}\par
00077             \});\par
00078         \}\par
00079 \par
00080         {\cf17 public} {\cf17 static} {\cf18 string} GetRelativePath({\cf18 string} relativeTo, {\cf18 string} path)\par
00081         \{\par
00082 {\cf21 #if NET6_0_OR_GREATER}\par
00083             {\cf19 return} Path.GetRelativePath(relativeTo, path);\par
00084 {\cf21 #else}\par
00085             {\cf19 return} RelativePathLegacy(relativeTo, path);\par
00086 {\cf21 #endif}\par
00087         \}\par
00088 \par
00089         {\cf17 static} {\cf18 string} RelativePathLegacy({\cf18 string} relativeTo, {\cf18 string} path)\par
00090         \{\par
00091             {\cf19 if} (Directory.Exists(path) && !path.EndsWith(Path.DirectorySeparatorChar.ToString()))\par
00092             \{\par
00093                 path += Path.DirectorySeparatorChar;\par
00094             \}\par
00095             Uri pathUri = {\cf17 new} Uri(path);\par
00096             {\cf20 // Folders must end in a slash}\par
00097             {\cf19 if} (!relativeTo.EndsWith(Path.DirectorySeparatorChar.ToString()))\par
00098             \{\par
00099                 relativeTo += Path.DirectorySeparatorChar;\par
00100             \}\par
00101             Uri folderUri = {\cf17 new} Uri(relativeTo);\par
00102             {\cf19 return} Uri.UnescapeDataString(folderUri.MakeRelativeUri(pathUri).ToString().Replace({\cf23 '/'}, Path.DirectorySeparatorChar));\par
00103         \}\par
00104     \}\par
00105 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DecryptionSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v DecryptionSession.cs}
{\xe \v DecryptionSession.cs}
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.DecryptionSession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DecryptionSession.cs\par \pard\plain 
{\tc\tcl2 \v DecryptionSession.cs}
{\xe \v DecryptionSession.cs}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00004 \{\par
00005     {\cf17 public} {\cf17 class }DecryptionSession : Session\par
00006     \{\par
00007         {\cf17 private} readonly KeyStore keyStore;\par
00008         {\cf17 private} readonly CryptoProviderConfiguration configuration;\par
00009         {\cf17 private} readonly {\cf18 int} blockSize;\par
00010         {\cf17 private} readonly {\cf18 string} file;\par
00011         {\cf17 private} readonly {\cf18 string} outputPath;\par
00012 \par
00013         {\cf17 public} {\cf17 override} {\cf18 string} Name => ${\cf22 "\{base.Name\}[\{file\}]"};\par
00014 \par
00015         {\cf17 public} DecryptionSession(KeyStore keyStore, CryptoProviderConfiguration configuration, {\cf18 int} blockSize, {\cf18 string} file, {\cf18 string} outputPath)\par
00016         \{\par
00017             Description = file;\par
00018 \par
00019             this.keyStore = keyStore;\par
00020             this.configuration = configuration;\par
00021             this.blockSize = blockSize;\par
00022             this.file = file;\par
00023             this.outputPath = outputPath;\par
00024         \}\par
00025 \par
00026         {\cf17 protected} {\cf17 override} async Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00027         \{\par
00028             {\cf19 if} (!File.Exists(file))\par
00029             \{\par
00030                 EndReason = SessionEndReason.Skipped;\par
00031                 Description = {\cf22 "file not found"};\par
00032                 {\cf19 return} {\cf17 false};\par
00033             \}\par
00034 \par
00035             FileStream sourceStream = File.OpenRead(file);\par
00036             CliHeader header = Header.ReadHeader<CliHeader>(sourceStream);\par
00037 \par
00038             {\cf18 string} destFileName = {\cf22 "decrypted file.dec"};\par
00039 \par
00040             {\cf18 int} hVerbose = (int)header.Verbosity;\par
00041 \par
00042             {\cf18 int} bs = blockSize;\par
00043             CryptoProviderConfiguration config = configuration;\par
00044 \par
00045             {\cf19 if} (hVerbose > 0)\par
00046             \{\par
00047                 {\cf19 if} (header.Version < Kes.MinimumSupportedVersion || header.Version > Kes.Version)\par
00048                 \{\par
00049                     Description = header.ClientName != {\cf17 null}\par
00050                         ? ${\cf22 "You must use \{header.ClientName\} v\{header.ClientVersion\}"}\par
00051                         : ${\cf22 "You must use a client with engine version \{header.EngineVersion\} or api version \{header.Version\}"};\par
00052 \par
00053                     EndReason = SessionEndReason.Failed;\par
00054                     {\cf19 return} {\cf17 false};\par
00055                 \}\par
00056 \par
00057                 {\cf19 if} (hVerbose > 1)\par
00058                 \{\par
00059                     bs = header.BlockSize;\par
00060 \par
00061                     {\cf19 if} (header.FileName != {\cf17 null})\par
00062                     \{\par
00063                         destFileName = header.FileName;\par
00064                     \}\par
00065                 \}\par
00066 \par
00067                 {\cf19 if} (hVerbose > 2)\par
00068                 \{\par
00069                     config = header.Configuration;\par
00070                 \}\par
00071             \}\par
00072             {\cf19 else}\par
00073             \{\par
00074                 Messages.Add({\cf22 "Warning: Cannot find any valid header in this file"});\par
00075             \}\par
00076 \par
00077             Kes kes = {\cf17 new} Kes(keyStore, config, bs);\par
00078             kes.ProgressChanged += UpdateProgress;\par
00079 \par
00080             destFileName = Utilities.GetNewFileName(outputPath, destFileName);\par
00081             FileStream destStream = File.OpenWrite(destFileName);\par
00082 \par
00083             {\cf19 try}\par
00084             \{\par
00085                 Description = file;\par
00086                 await kes.DecryptAsync(sourceStream, destStream, cancellationToken);\par
00087 \par
00088                 {\cf19 if} (sessionHost.Verbose)\par
00089                 \{\par
00090                     Messages.Add(${\cf22 "Decrypted to \{destFileName\}"});\par
00091                 \}\par
00092 \par
00093                 {\cf19 return} {\cf17 true};\par
00094             \}\par
00095             {\cf19 catch} (Exception)\par
00096             \{\par
00097                 sourceStream.Close();\par
00098                 destStream.Close();\par
00099                 File.Delete(destFileName);\par
00100                 {\cf19 throw};\par
00101             \}\par
00102         \}\par
00103 \par
00104         {\cf17 private} {\cf18 void} UpdateProgress({\cf18 object} sender, {\cf18 double} value) => Progress = value;\par
00105     \}\par
00106 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DecryptionSessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v DecryptionSessionHost.cs}
{\xe \v DecryptionSessionHost.cs}
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.DecryptionSessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DecryptionSessionHost.cs\par \pard\plain 
{\tc\tcl2 \v DecryptionSessionHost.cs}
{\xe \v DecryptionSessionHost.cs}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00004 \{\par
00005     {\cf17 public} {\cf17 class }DecryptionSessionHost : DataProcessingSessionHost\par
00006     \{\par
00007         {\cf17 public} DecryptionSessionHost(GlobalOptions globalOptions, DataProcessingOptions options) : base(globalOptions, options)\par
00008         \{\par
00009 \par
00010         \}\par
00011 \par
00012         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00013         \{\par
00014             base.Start(context);\par
00015 \par
00016             var sessionGroup = Container.SetSessionGroup({\cf17 new} SessionGroup());\par
00017 \par
00018             EnumerateFiles((filePath, outputPath) =>\par
00019             \{\par
00020                 DecryptionSession session = {\cf17 new} DecryptionSession(KeyStore, Configuration, BlockSize, filePath, outputPath);\par
00021                 NewSession(session, autoStart: {\cf17 false});\par
00022             \});\par
00023 \par
00024             Container.StartQueuedSessions();\par
00025             GetSmartProgress(sessionGroup).Wait();\par
00026         \}\par
00027     \}\par
00028 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EncryptionSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v EncryptionSession.cs}
{\xe \v EncryptionSession.cs}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.EncryptionSession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EncryptionSession.cs\par \pard\plain 
{\tc\tcl2 \v EncryptionSession.cs}
{\xe \v EncryptionSession.cs}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 {\cf17 using }SAPTeam.Kryptor.Generators;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00005 \{\par
00006     {\cf17 public} {\cf17 class }EncryptionSession : Session\par
00007     \{\par
00008         {\cf17 private} readonly Kes kes;\par
00009         {\cf17 private} readonly {\cf18 int} hVerbose;\par
00010         {\cf17 private} readonly {\cf18 string} file;\par
00011         {\cf17 private} readonly {\cf18 string} outputPath;\par
00012 \par
00013         {\cf17 public} ClientHeader Header \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00014 \par
00015         {\cf17 public} {\cf17 override} {\cf18 string} Name => ${\cf22 "\{base.Name\}[\{file\}]"};\par
00016 \par
00017         {\cf17 public} EncryptionSession(KeyStore keyStore, CryptoProviderConfiguration configuration, {\cf18 int} blockSize, {\cf18 int} hVerbose, {\cf18 string} file, {\cf18 string} outputPath)\par
00018         \{\par
00019             Description = file;\par
00020 \par
00021             kes = {\cf17 new} Kes(keyStore, configuration, blockSize);\par
00022             kes.ProgressChanged += UpdateProgress;\par
00023 \par
00024             this.hVerbose = hVerbose;\par
00025             this.file = file;\par
00026             this.outputPath = outputPath;\par
00027         \}\par
00028 \par
00029         {\cf17 protected} {\cf17 override} async Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00030         \{\par
00031             EncryptionSessionHost encSessionHost = (EncryptionSessionHost)sessionHost;\par
00032 \par
00033             {\cf19 if} (!File.Exists(file))\par
00034             \{\par
00035                 EndReason = SessionEndReason.Skipped;\par
00036                 Description = {\cf22 "file not found"};\par
00037                 {\cf19 return} {\cf17 false};\par
00038             \}\par
00039 \par
00040             ClientHeader header = Header = CliHeader.Create();\par
00041 \par
00042             {\cf19 if} (hVerbose > 1)\par
00043             \{\par
00044                 header.FileName = Path.GetFileName(file);\par
00045                 header.GenerateSerial();\par
00046             \}\par
00047 \par
00048             header.Verbosity = (HeaderVerbosity)hVerbose;\par
00049 \par
00050             FileStream sourceStream = File.OpenRead(file);\par
00051 \par
00052             {\cf18 string} destName;\par
00053             {\cf19 if} (encSessionHost.Obfuscate)\par
00054             \{\par
00055                 var buffer = {\cf17 new} {\cf18 byte}[12];\par
00056                 CryptoRandom.Instance.Generate(buffer);\par
00057                 destName = BitConverter.ToString(buffer).Replace({\cf22 "-"}, {\cf22 ""}).ToLower();\par
00058             \}\par
00059             {\cf19 else}\par
00060             \{\par
00061                 destName = Path.GetFileName(file);\par
00062             \}\par
00063 \par
00064             {\cf18 string} destFileName = Utilities.GetNewFileName(outputPath, ${\cf22 "\{destName\}.kef"});\par
00065 \par
00066             FileStream destStream = File.OpenWrite(destFileName);\par
00067 \par
00068             {\cf19 try}\par
00069             \{\par
00070                 await kes.EncryptAsync(sourceStream, destStream, header, cancellationToken);\par
00071 \par
00072                 {\cf19 if} (encSessionHost.UseKeyChain)\par
00073                 \{\par
00074                     Description = {\cf22 "Creating keychain"};\par
00075                     encSessionHost.KeyChainCollection.Add(header, kes.Provider.KeyStore, TransformerToken.IsValid(encSessionHost.KeystoreString) ? encSessionHost.KeystoreString : {\cf17 null});\par
00076                     Description = file;\par
00077                 \}\par
00078 \par
00079                 {\cf19 if} (encSessionHost.Verbose)\par
00080                 \{\par
00081                     Messages.Add(${\cf22 "Encrypted to \{destFileName\}"});\par
00082                 \}\par
00083 \par
00084                 {\cf19 return} {\cf17 true};\par
00085             \}\par
00086             {\cf19 catch} (Exception)\par
00087             \{\par
00088                 sourceStream.Close();\par
00089                 destStream.Close();\par
00090 \par
00091                 File.Delete(destFileName);\par
00092                 {\cf19 throw};\par
00093             \}\par
00094         \}\par
00095 \par
00096         {\cf17 private} {\cf18 void} UpdateProgress({\cf18 object} sender, {\cf18 double} value) => Progress = value;\par
00097     \}\par
00098 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EncryptionSessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v EncryptionSessionHost.cs}
{\xe \v EncryptionSessionHost.cs}
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.EncryptionSessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EncryptionSessionHost.cs\par \pard\plain 
{\tc\tcl2 \v EncryptionSessionHost.cs}
{\xe \v EncryptionSessionHost.cs}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00004 \{\par
00005     {\cf17 public} {\cf17 class }EncryptionSessionHost : DataProcessingSessionHost\par
00006     \{\par
00007         {\cf17 public} {\cf18 int} HeaderVerbosity \{ {\cf17 get}; \}\par
00008         {\cf17 public} {\cf18 string} KeyChainPath \{ {\cf17 get}; \}\par
00009         {\cf17 public} {\cf18 bool} UseKeyChain \{ {\cf17 get}; \}\par
00010         {\cf17 public} KeyChainCollection KeyChainCollection \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00011         {\cf17 public} {\cf18 bool} Obfuscate \{ {\cf17 get}; \}\par
00012 \par
00013         {\cf17 public} EncryptionSessionHost(GlobalOptions globalOptions, DataProcessingOptions options, {\cf18 int} hVerbose, {\cf18 string} keyChainPath, {\cf18 bool} obfuscate) : base(globalOptions, options)\par
00014         \{\par
00015             HeaderVerbosity = hVerbose;\par
00016             KeyChainPath = keyChainPath;\par
00017             UseKeyChain = hVerbose > 1 && !{\cf18 string}.IsNullOrEmpty(keyChainPath);\par
00018             Obfuscate = obfuscate;\par
00019         \}\par
00020 \par
00021         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00022         \{\par
00023             base.Start(context);\par
00024 \par
00025             {\cf19 if} (UseKeyChain)\par
00026             \{\par
00027                 KeyChainCollection = {\cf17 new} KeyChainCollection(KeyChainPath);\par
00028             \}\par
00029 \par
00030             var sessionGroup = Container.SetSessionGroup({\cf17 new} SessionGroup());\par
00031 \par
00032             EnumerateFiles((filePath, outputPath) =>\par
00033             \{\par
00034                 EncryptionSession session = {\cf17 new} EncryptionSession(KeyStore, Configuration, BlockSize, HeaderVerbosity, filePath, outputPath);\par
00035                 NewSession(session, autoStart: {\cf17 false});\par
00036             \});\par
00037 \par
00038             Container.StartQueuedSessions();\par
00039             GetSmartProgress(sessionGroup).Wait();\par
00040 \par
00041             {\cf19 if} (UseKeyChain)\par
00042             \{\par
00043                 DebugLog({\cf22 "Updating KeyChain data"});\par
00044                 KeyChainCollection.Save();\par
00045             \}\par
00046         \}\par
00047     \}\par
00048 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Extensions.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Extensions.cs}
{\xe \v Extensions.cs}
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Extensions}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Extensions.cs\par \pard\plain 
{\tc\tcl2 \v Extensions.cs}
{\xe \v Extensions.cs}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Drawing;\par
00002 {\cf17 using }System.Runtime.InteropServices;\par
00003 \par
00004 {\cf17 using }Pastel;\par
00005 \par
00006 {\cf17 using }SAPTeam.Kryptor.Generators;\par
00007 \par
00008 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00009 \{\par
00010     {\cf17 internal} {\cf17 static} {\cf17 partial class }Extensions\par
00011     \{\par
00012         {\cf17 private} {\cf17 static} readonly CryptoRandom _crng = {\cf17 new} CryptoRandom();\par
00013 \par
00014         {\cf17 internal} {\cf17 static} {\cf18 string} FormatFingerprint({\cf17 this} {\cf18 byte}[] src) => BitConverter.ToString(src).Replace({\cf22 "-"}, {\cf22 ":"});\par
00015 \par
00016         {\cf17 public} {\cf17 static} {\cf18 string} PadBoth({\cf17 this} {\cf18 string} str, {\cf18 int} length)\par
00017         \{\par
00018             {\cf18 int} spaces = length - str.Length;\par
00019             {\cf18 int} padLeft = (spaces / 2) + str.Length;\par
00020             {\cf19 return} str.PadLeft(padLeft).PadRight(length);\par
00021         \}\par
00022 \par
00023         {\cf17 internal} {\cf17 static} {\cf18 string} ToLowerIfUnix({\cf17 this} {\cf18 string} src) => RuntimeInformation.IsOSPlatform(OSPlatform.Windows) ? src : src.ToLower();\par
00024 \par
00025         {\cf17 private} {\cf17 static} {\cf18 string} ColorImpl({\cf17 this} {\cf18 string} src, ConsoleColor color) => color == ConsoleColor.Green ? src.Pastel(System.Drawing.Color.GreenYellow) : src.Pastel(color);\par
00026 \par
00027         {\cf17 private} {\cf17 static} {\cf18 string} ColorImpl({\cf17 this} {\cf18 string} src, Color color) => src.Pastel(color);\par
00028 \par
00029         {\cf17 public} {\cf17 static} {\cf18 string} WithColor({\cf17 this} {\cf18 string} src, ConsoleColor color) => Program.Context.NoColor ? src : src.ColorImpl(color);\par
00030 \par
00031         {\cf17 public} {\cf17 static} {\cf18 string} WithColor({\cf17 this} {\cf18 string} src, Color color) => Program.Context.NoColor ? src : src.ColorImpl(color);\par
00032 \par
00033         {\cf17 public} {\cf17 static} {\cf18 string} FormatWithCommas({\cf17 this} {\cf18 long} number) => number.ToString({\cf22 "N0"});\par
00034 \par
00035         {\cf17 public} {\cf17 static} {\cf18 string} FormatWithCommas({\cf17 this} {\cf18 int} number) => number.ToString({\cf22 "N0"});\par
00036 \par
00037         {\cf17 public} {\cf17 static} {\cf18 string} FormatWithCommas({\cf17 this} {\cf18 double} number) => number.ToString({\cf22 "N2"});\par
00038 \par
00039         {\cf17 public} {\cf17 static} {\cf18 string} Shrink({\cf17 this} {\cf18 string} src, {\cf18 int} expectedLength)\par
00040         \{\par
00041             {\cf19 if} (src.Length > expectedLength)\par
00042             \{\par
00043                 src = ${\cf22 "...\{src.Substring(src.Length - expectedLength + 3)\}"};\par
00044             \}\par
00045 \par
00046             {\cf19 return} src;\par
00047         \}\par
00048 \par
00049         {\cf20 // Copied from MoreLinq}\par
00050 \par
00057 \par
00058         {\cf17 public} {\cf17 static} {\cf18 void} ForEach<T>({\cf17 this} IEnumerable<T> source, Action<T> action)\par
00059         \{\par
00060             {\cf19 if} (source == {\cf17 null}) {\cf19 throw} {\cf17 new} ArgumentNullException(nameof(source));\par
00061             {\cf19 if} (action == {\cf17 null}) {\cf19 throw} {\cf17 new} ArgumentNullException(nameof(action));\par
00062 \par
00063             {\cf19 foreach} (T element {\cf19 in} source)\par
00064                 action(element);\par
00065         \}\par
00066 \par
00083 \par
00084         {\cf17 public} {\cf17 static} IEnumerable<T> Shuffle<T>({\cf17 this} IEnumerable<T> source) => Shuffle(source, _crng);\par
00085 \par
00105 \par
00106         {\cf17 public} {\cf17 static} IEnumerable<T> Shuffle<T>({\cf17 this} IEnumerable<T> source, Random rand)\par
00107         \{\par
00108             {\cf19 return} source == {\cf17 null}\par
00109                 ? {\cf19 throw} {\cf17 new} ArgumentNullException(nameof(source))\par
00110                 : rand == null ? throw new ArgumentNullException(nameof(rand)) : RandomSubsetImpl(source, rand, subsetSize: null);\par
00111         \}\par
00112     \}\par
00113 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FileSaveSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v FileSaveSession.cs}
{\xe \v FileSaveSession.cs}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.FileSaveSession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FileSaveSession.cs\par \pard\plain 
{\tc\tcl2 \v FileSaveSession.cs}
{\xe \v FileSaveSession.cs}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00005 \{\par
00006     {\cf17 public} {\cf17 class }FileSaveSession : Session\par
00007     \{\par
00008         {\cf17 private} {\cf18 string} filePath;\par
00009 \par
00010         {\cf17 public} {\cf18 string} FilePath\par
00011         \{\par
00012             {\cf17 get} => filePath;\par
00013 \par
00014             {\cf17 set} => filePath = {\cf18 string}.IsNullOrEmpty(value) ? value : Path.GetFullPath(value);\par
00015         \}\par
00016 \par
00017         {\cf17 public} {\cf18 byte}[] Data \{ {\cf17 get}; {\cf17 set}; \}\par
00018 \par
00019         {\cf17 public} FileSaveSession({\cf18 string} filePath, {\cf18 byte}[] data)\par
00020         \{\par
00021             FilePath = filePath;\par
00022             Data = data;\par
00023 \par
00024             {\cf19 if} (!{\cf18 string}.IsNullOrEmpty(FilePath))\par
00025             \{\par
00026                 Description = FilePath;\par
00027             \}\par
00028         \}\par
00029 \par
00030         {\cf17 protected} {\cf17 override} async Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00031         \{\par
00032             Description = FilePath;\par
00033 \par
00034             {\cf19 try}\par
00035             \{\par
00036                 await WriteAsync(cancellationToken);\par
00037 \par
00038                 {\cf19 return} {\cf17 true};\par
00039             \}\par
00040             {\cf19 catch}\par
00041             \{\par
00042                 {\cf19 if} (File.Exists(FilePath))\par
00043                 \{\par
00044                     File.Delete(FilePath);\par
00045                 \}\par
00046 \par
00047                 {\cf19 throw};\par
00048             \}\par
00049         \}\par
00050 \par
00051         {\cf17 private} async Task WriteAsync(CancellationToken cancellationToken)\par
00052         \{\par
00053             {\cf17 using} (FileStream f = File.OpenWrite(FilePath))\par
00054             \{\par
00055                 {\cf18 double} steps = 1.0 / Data.Length * 100;\par
00056                 {\cf18 int} wroteBytes = 0;\par
00057 \par
00058                 {\cf19 while} (wroteBytes < Data.Length)\par
00059                 \{\par
00060                     {\cf18 int} chunk = Math.Min(Data.Length - wroteBytes, 8192);\par
00061                     await AsyncCompat.WriteAsync(f, Data, 0, chunk, cancellationToken);\par
00062                     wroteBytes += chunk;\par
00063                     Progress = wroteBytes * steps;\par
00064                 \}\par
00065             \}\par
00066         \}\par
00067     \}\par
00068 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GlobalOptions.cs File Reference\par \pard\plain 
{\tc\tcl2 \v GlobalOptions.cs}
{\xe \v GlobalOptions.cs}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.GlobalOptions}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.GlobalOptionsBinder}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GlobalOptions.cs\par \pard\plain 
{\tc\tcl2 \v GlobalOptions.cs}
{\xe \v GlobalOptions.cs}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.CommandLine;\par
00002 {\cf17 using }System.CommandLine.Binding;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00005 \{\par
00006     {\cf17 public} {\cf17 class }GlobalOptions\par
00007     \{\par
00008         {\cf17 public} {\cf18 bool} Verbose \{ {\cf17 get}; {\cf17 set}; \}\par
00009         {\cf17 public} {\cf18 bool} Quiet \{ {\cf17 get}; {\cf17 set}; \}\par
00010         {\cf17 public} {\cf18 bool} NoColor \{ {\cf17 get}; {\cf17 set}; \}\par
00011     \}\par
00012 \par
00013     {\cf17 public} {\cf17 class }GlobalOptionsBinder : BinderBase<GlobalOptions>\par
00014     \{\par
00015         {\cf17 private} readonly Option<bool> verbose;\par
00016         {\cf17 private} readonly Option<bool> quiet;\par
00017         {\cf17 private} readonly Option<bool> noColor;\par
00018 \par
00019         {\cf17 public} GlobalOptionsBinder(Option<bool> verbose, Option<bool> quiet, Option<bool> noColor)\par
00020         \{\par
00021             this.verbose = verbose;\par
00022             this.quiet = quiet;\par
00023             this.noColor = noColor;\par
00024         \}\par
00025 \par
00026         {\cf17 protected} {\cf17 override} GlobalOptions GetBoundValue(BindingContext bindingContext)\par
00027         \{\par
00028             {\cf19 return} {\cf17 new} GlobalOptions()\par
00029             \{\par
00030                 Verbose = bindingContext.ParseResult.GetValueForOption(verbose),\par
00031                 Quiet = bindingContext.ParseResult.GetValueForOption(quiet),\par
00032                 NoColor = bindingContext.ParseResult.GetValueForOption(noColor),\par
00033             \};\par
00034         \}\par
00035     \}\par
00036 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HeaderReaderSessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v HeaderReaderSessionHost.cs}
{\xe \v HeaderReaderSessionHost.cs}
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.HeaderReaderSessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HeaderReaderSessionHost.cs\par \pard\plain 
{\tc\tcl2 \v HeaderReaderSessionHost.cs}
{\xe \v HeaderReaderSessionHost.cs}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00004 \{\par
00005     {\cf17 public} {\cf17 class }HeaderReaderSessionHost : CliSessionHost\par
00006     \{\par
00007         {\cf17 public} {\cf18 string} FilePath;\par
00008 \par
00009         {\cf17 public} HeaderReaderSessionHost(GlobalOptions globalOptions, {\cf18 string} filePath) : base(globalOptions) => FilePath = filePath;\par
00010 \par
00011         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00012         \{\par
00013             base.Start(context);\par
00014 \par
00015             {\cf19 if} (!File.Exists(FilePath))\par
00016             \{\par
00017                 {\cf19 throw} {\cf17 new} FileNotFoundException(FilePath);\par
00018             \}\par
00019 \par
00020             DebugLog({\cf22 "Reading header"});\par
00021 \par
00022             CliHeader header = Header.ReadHeader<CliHeader>(File.OpenRead(FilePath));\par
00023 \par
00024             {\cf19 if} (header.Verbosity == 0)\par
00025             \{\par
00026                 LogError({\cf22 "Cannot find any header data"});\par
00027                 {\cf19 return};\par
00028             \}\par
00029 \par
00030             Log();\par
00031             Log(${\cf22 "Header informations of \{Path.GetFileName(FilePath)\} with \{header.Verbosity\} verbosity"});\par
00032             Log(${\cf22 "API Version: \{header.Version.ToString(2)\}"});\par
00033             Log(${\cf22 "Engine Version: \{header.EngineVersion\}"});\par
00034             Log();\par
00035             Log(${\cf22 "Client Name: \{header.ClientName\}"});\par
00036             Log(${\cf22 "Client Version: \{header.ClientVersion\}"});\par
00037 \par
00038             {\cf19 if} (({\cf18 int})header.Verbosity > 1)\par
00039             \{\par
00040                 Log();\par
00041                 Log(${\cf22 "Original File Name: \{header.FileName\}"});\par
00042                 Log(${\cf22 "Serial Key: \{header.Serial\}"});\par
00043                 Log();\par
00044                 Log(${\cf22 "Block Size: \{header.BlockSize\}"});\par
00045 \par
00046                 {\cf19 if} (header.Configuration != {\cf17 null})\par
00047                 \{\par
00048                     Log(${\cf22 "Crypto Provider: \{(Verbose ? CryptoProviderFactory.GetRegisteredCryptoProviderId(header.Configuration.Id) : CryptoProviderFactory.GetDisplayName(header.Configuration.Id))\}"});\par
00049                     Log(${\cf22 "Continuous: \{header.Configuration.Continuous\}"});\par
00050                     Log(${\cf22 "Remove Hash: \{header.Configuration.RemoveHash\}"});\par
00051                     Log(${\cf22 "Dynamic Block Processing: \{header.Configuration.DynamicBlockProccessing\}"});\par
00052                 \}\par
00053             \}\par
00054 \par
00055             {\cf19 if} (Verbose && header.Extra != {\cf17 null})\par
00056             \{\par
00057                 Log();\par
00058                 Log(${\cf22 "Extra data:\\n\{string.Join(Environment.NewLine, header.Extra)\}"});\par
00059             \}\par
00060         \}\par
00061     \}\par
00062 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyChainReaderSessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v KeyChainReaderSessionHost.cs}
{\xe \v KeyChainReaderSessionHost.cs}
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.KeyChainReaderSessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyChainReaderSessionHost.cs\par \pard\plain 
{\tc\tcl2 \v KeyChainReaderSessionHost.cs}
{\xe \v KeyChainReaderSessionHost.cs}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00004 \{\par
00005     {\cf17 public} {\cf17 class }KeyChainReaderSessionHost : CliSessionHost\par
00006     \{\par
00007         {\cf17 public} {\cf18 string} KeyChainPath;\par
00008         {\cf17 public} {\cf18 string} FilePath;\par
00009 \par
00010         {\cf17 public} KeyChainReaderSessionHost(GlobalOptions globalOptions, {\cf18 string} keyChainPath, {\cf18 string} filePath) : base(globalOptions)\par
00011         \{\par
00012             KeyChainPath = keyChainPath;\par
00013             FilePath = filePath;\par
00014         \}\par
00015 \par
00016         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00017         \{\par
00018             base.Start(context);\par
00019 \par
00020             {\cf19 if} (!File.Exists(FilePath))\par
00021             \{\par
00022                 {\cf19 throw} {\cf17 new} FileNotFoundException(FilePath);\par
00023             \}\par
00024 \par
00025             KeyChainCollection keyChainCollection = {\cf17 new} KeyChainCollection(KeyChainPath);\par
00026 \par
00027             DebugLog({\cf22 "Reading header"});\par
00028 \par
00029             CliHeader header = Header.ReadHeader<CliHeader>(File.OpenRead(FilePath));\par
00030 \par
00031             {\cf19 if} ({\cf18 string}.IsNullOrEmpty(header.Serial))\par
00032             \{\par
00033                 LogError({\cf22 "Cannot find file serial key"});\par
00034                 {\cf19 return};\par
00035             \}\par
00036 \par
00037             Log(${\cf22 "File Serial Key: \{header.Serial\}"});\par
00038 \par
00039             KeyChain keyChain;\par
00040             {\cf19 try}\par
00041             \{\par
00042                 keyChain = keyChainCollection[header.Serial];\par
00043             \}\par
00044             {\cf19 catch}\par
00045             \{\par
00046                 LogError({\cf22 "Cannot find a key chain with this serial"});\par
00047                 {\cf19 return};\par
00048             \}\par
00049 \par
00050             Log(${\cf22 "Keystore Fingerprint: \{keyChain.Fingerprint.FormatFingerprint()\}"});\par
00051             {\cf18 string} ksFileName = Path.Combine(Path.GetDirectoryName(keyChainCollection.FilePath), BitConverter.ToString(keyChain.Fingerprint).Replace({\cf22 "-"}, {\cf22 ""}).ToLower() + {\cf22 ".kks"});\par
00052 \par
00053             {\cf19 if} (!{\cf18 string}.IsNullOrEmpty(keyChain.TransformerToken))\par
00054             \{\par
00055                 Log(${\cf22 "Transformer Token: \{keyChain.TransformerToken\}"});\par
00056             \}\par
00057             {\cf19 else} {\cf19 if} (File.Exists(ksFileName))\par
00058             \{\par
00059                 Log(${\cf22 "Keystore File Path: \{ksFileName\}"});\par
00060             \}\par
00061         \}\par
00062     \}\par
00063 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CrackSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CrackSession.cs}
{\xe \v CrackSession.cs}
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CrackSession.cs\par \pard\plain 
{\tc\tcl2 \v CrackSession.cs}
{\xe \v CrackSession.cs}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Diagnostics;\par
00002 \par
00003 {\cf17 using }SAPTeam.Kryptor.Client;\par
00004 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor.Cli.KeyStoreAnalyze\par
00007 \{\par
00008     {\cf17 public} {\cf17 class }CrackSession : Session, ISessionHost\par
00009     \{\par
00010         {\cf17 private} readonly SessionContainer container;\par
00011         {\cf17 private} {\cf18 byte}[] test;\par
00012 \par
00013         {\cf17 public} Stopwatch CalcTimer \{ {\cf17 get}; \}\par
00014         {\cf17 public} {\cf18 bool} Found \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00015         {\cf17 public} {\cf18 bool} Verbose => {\cf17 false};\par
00016 \par
00017         {\cf17 public} CrackSession({\cf18 int} maxRunningSessions)\par
00018         \{\par
00019             Progress = -1;\par
00020 \par
00021             container = {\cf17 new} SessionContainer({\cf17 this}, maxRunningSessions);\par
00022 \par
00023             CalcTimer = {\cf17 new} Stopwatch();\par
00024         \}\par
00025 \par
00026         {\cf17 protected} {\cf17 override} async Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00027         \{\par
00028             Description = {\cf22 "Calculating crack time"};\par
00029 \par
00030             {\cf18 byte}[] sample = {\cf17 new} {\cf18 byte}[3] \{ 127, 255, 255 \};\par
00031             test = sample.Sha256();\par
00032 \par
00033             CalcTimer.Start();\par
00034 \par
00035             {\cf19 for} ({\cf18 int} i = 0; i < 256; i++)\par
00036             \{\par
00037                 CrackSubSession session = {\cf17 new} CrackSubSession(i, test);\par
00038                 session.OnVerify += StopTimer;\par
00039                 NewSession(session, {\cf17 false}, {\cf17 true});\par
00040             \}\par
00041 \par
00042             await container.WaitAll(cancellationToken);\par
00043 \par
00044             {\cf19 return} {\cf17 true};\par
00045         \}\par
00046 \par
00047         {\cf17 private} {\cf18 void} StopTimer()\par
00048         \{\par
00049             CalcTimer.Stop();\par
00050             Found = {\cf17 true};\par
00051 \par
00052             {\cf19 foreach} (CancellationTokenSource token {\cf19 in} container.TokenSources)\par
00053             \{\par
00054                 token.Cancel();\par
00055             \}\par
00056         \}\par
00057 \par
00058         {\cf17 public} {\cf18 void} Start(ClientContext context) => {\cf19 throw} {\cf17 new} System.NotImplementedException();\par
00059 \par
00060         {\cf17 public} {\cf18 void} End({\cf18 bool} cancelled) => {\cf19 throw} {\cf17 new} System.NotImplementedException();\par
00061 \par
00062         {\cf17 public} {\cf18 void} NewSession(ISession session, {\cf18 bool} autoRemove, {\cf18 bool} autoStart) => container.NewSession(session, autoRemove, autoStart);\par
00063 \par
00064         {\cf17 public} {\cf18 void} MonitorTask(Task task) => {\cf19 throw} {\cf17 new} System.NotImplementedException();\par
00065 \par
00066         {\cf17 public} Task<TResponse> OnSessionRequest<TResponse>(ISession session, SessionRequest<TResponse> request, CancellationToken cancellationToken) => {\cf19 throw} {\cf17 new} System.NotImplementedException();\par
00067     \}\par
00068 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CrackSubSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CrackSubSession.cs}
{\xe \v CrackSubSession.cs}
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.CrackSubSession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CrackSubSession.cs\par \pard\plain 
{\tc\tcl2 \v CrackSubSession.cs}
{\xe \v CrackSubSession.cs}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00003 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00004 \par
00005 {\cf17 namespace }SAPTeam.Kryptor.Cli.KeyStoreAnalyze\par
00006 \{\par
00007     {\cf17 public} {\cf17 class }CrackSubSession : Session\par
00008     \{\par
00009         {\cf17 public} {\cf18 int} Index;\par
00010         {\cf17 private} readonly {\cf18 byte}[] Test;\par
00011 \par
00012         {\cf17 public} {\cf17 event} Action OnVerify;\par
00013 \par
00014         {\cf17 public} {\cf17 override} {\cf18 bool} IsHidden => {\cf17 true};\par
00015 \par
00016         {\cf17 public} CrackSubSession({\cf18 int} index, {\cf18 byte}[] test) : base()\par
00017         \{\par
00018             Index = index;\par
00019             Test = test;\par
00020         \}\par
00021 \par
00022         {\cf17 protected} {\cf17 override} async Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00023         \{\par
00024             await Task.Run(() =>\par
00025             \{\par
00026                 {\cf18 byte}[] buffer = {\cf17 new} {\cf18 byte}[3];\par
00027                 buffer[0] = (byte)Index;\par
00028 \par
00029                 {\cf19 for} ({\cf18 int} b1 = 0; b1 <= 255; b1++)\par
00030                 \{\par
00031                     {\cf19 for} ({\cf18 int} b2 = 0; b2 <= 255; b2++)\par
00032                     \{\par
00033                         cancellationToken.ThrowIfCancellationRequested();\par
00034 \par
00035                         buffer[1] = (byte)b1;\par
00036                         buffer[2] = (byte)b2;\par
00037 \par
00038                         {\cf19 if} (buffer.Sha256().SequenceEqual(Test))\par
00039                         \{\par
00040                             OnVerify?.Invoke();\par
00041                         \}\par
00042                     \}\par
00043                 \}\par
00044             \});\par
00045 \par
00046             {\cf19 return} {\cf17 true};\par
00047         \}\par
00048     \}\par
00049 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cli/Kryptor.Cli.Shared/KeyStoreAnalyze/SessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionHost.cs}
{\xe \v SessionHost.cs}
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze.SessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.KeyStoreAnalyze}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cli/Kryptor.Cli.Shared/KeyStoreAnalyze/SessionHost.cs\par \pard\plain 
{\tc\tcl2 \v SessionHost.cs}
{\xe \v SessionHost.cs}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Cli.KeyStoreAnalyze\par
00004 \{\par
00005     {\cf17 public} {\cf17 sealed} {\cf17 class }SessionHost : CliSessionHost\par
00006     \{\par
00007         {\cf17 private} readonly {\cf18 string} ks;\par
00008         {\cf17 private} readonly {\cf18 int} maxRunningSessions;\par
00009 \par
00010         {\cf17 private} KeyStore KeyStore \{ {\cf17 get}; {\cf17 set}; \}\par
00011 \par
00012         {\cf17 public} SessionHost(GlobalOptions globalOptions, {\cf18 int} jobs, {\cf18 string} keystore) : base(globalOptions)\par
00013         \{\par
00014             ks = keystore;\par
00015             maxRunningSessions = jobs > 0 ? jobs : Container.MaxRunningSessions - 2;\par
00016         \}\par
00017 \par
00018         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00019         \{\par
00020             base.Start(context);\par
00021 \par
00022             KeyStoreLoadSession ksLoadSession = CreateKeyStoreLoadSession(ks);\par
00023             NewSession(ksLoadSession);\par
00024 \par
00025             CrackSession calcSession = {\cf17 new} CrackSession(maxRunningSessions);\par
00026             ksLoadSession.ContinueWith(calcSession);\par
00027             NewSession(calcSession);\par
00028 \par
00029             ShowProgressMonitored({\cf17 true}).Wait();\par
00030 \par
00031             {\cf19 if} (!Container.Sessions.All(x => x.EndReason == SessionEndReason.Completed))\par
00032             \{\par
00033                 {\cf19 return};\par
00034             \}\par
00035 \par
00036             KeyStore = ksLoadSession.KeyStore;\par
00037 \par
00038             {\cf18 double} ratio = Math.Pow(2, 32) / Math.Pow(2, 3);\par
00039             {\cf18 double} estimatedTimeFor32ByteArray = calcSession.CalcTimer.Elapsed.TotalSeconds * ratio;\par
00040             {\cf18 double} estimatedTimeForLargeArrayInYears = (double)TimeSpan.FromSeconds(estimatedTimeFor32ByteArray).Days / 365 * KeyStore.Keys.Length;\par
00041 \par
00042             {\cf19 if} (calcSession.Found)\par
00043             \{\par
00044                 Console.WriteLine(${\cf22 "Estimated crack time with your cpu is ~\{estimatedTimeForLargeArrayInYears.FormatWithCommas()\} years"});\par
00045             \}\par
00046             {\cf19 else}\par
00047             \{\par
00048                 Console.WriteLine({\cf22 "Cannot determine crack time."});\par
00049             \}\par
00050         \}\par
00051     \}\par
00052 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionHost.cs}
{\xe \v SessionHost.cs}
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Wordlist.SessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.Wordlist}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cli/Kryptor.Cli.Shared/Wordlist/SessionHost.cs\par \pard\plain 
{\tc\tcl2 \v SessionHost.cs}
{\xe \v SessionHost.cs}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 {\cf17 using }SAPTeam.Kryptor.Client.Security;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor.Cli.Wordlist\par
00005 \{\par
00006     {\cf17 public} {\cf17 class }SessionHost : CliSessionHost\par
00007     \{\par
00008         {\cf17 private} readonly {\cf18 object} _lockObj = {\cf17 new} object();\par
00009 \par
00010         {\cf17 private} WordlistJsonContainer LocalIndexContainer \{ {\cf17 get}; {\cf17 set}; \}\par
00011         {\cf17 public} WordlistIndex LocalIndex => LocalIndexContainer.Index;\par
00012 \par
00013         {\cf17 public} {\cf17 virtual} {\cf18 string} LocalIndexPath => Path.Combine(Program.Context.WordlistDirectory, {\cf22 "index.json"});\par
00014 \par
00015         {\cf20 /*}\par
00016 {\cf20         public JsonSerializerSettings LocalIndexParserSettings \{ get; set; \} = new JsonSerializerSettings()}\par
00017 {\cf20         \{}\par
00018 {\cf20             Formatting = Formatting.Indented,}\par
00019 {\cf20             NullValueHandling = NullValueHandling.Ignore,}\par
00020 {\cf20             ReferenceLoopHandling = ReferenceLoopHandling.Ignore}\par
00021 {\cf20         \};}\par
00022 {\cf20         */}\par
00023 \par
00024         {\cf17 public} SessionHost(GlobalOptions globalOptions) : base(globalOptions)\par
00025         \{\par
00026             {\cf20 //LocalIndexParserSettings.Converters.Add(new SchemaJsonConverter("https://raw.githubusercontent.com/SAPTeamDEV/Wordlists/master/schema-v2.json"));}\par
00027         \}\par
00028 \par
00029         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00030         \{\par
00031             base.Start(context);\par
00032 \par
00033             DebugLog({\cf22 "Loading local index..."});\par
00034             {\cf20 //LocalIndexContainer = new Config<WordlistIndex>(LocalIndexPath, LocalIndexParserSettings);}\par
00035 \par
00036             LocalIndexContainer = {\cf17 new} WordlistJsonContainer(LocalIndexPath);\par
00037         \}\par
00038 \par
00039         {\cf17 protected} {\cf18 void} UpdateLocalIndex() => LocalIndexContainer.Write();\par
00040 \par
00041         {\cf17 protected} {\cf18 void} ListInstalledWordlists()\par
00042         \{\par
00043             {\cf19 if} (LocalIndex.Wordlists.Count == 0)\par
00044             \{\par
00045                 LogError({\cf22 "No wordlists are installed"});\par
00046                 {\cf19 return};\par
00047             \}\par
00048 \par
00049             {\cf19 foreach} (WordlistIndexEntry wl {\cf19 in} LocalIndex.Wordlists)\par
00050             \{\par
00051                 Log(${\cf22 "\\n\{wl.Id\}:"});\par
00052                 Log(${\cf22 "Description: \{wl.Name\}"});\par
00053                 Log(${\cf22 "Enforced: \{wl.Enforced\}"});\par
00054                 Log(${\cf22 "Words: \{wl.Words.FormatWithCommas()\}"});\par
00055             \}\par
00056         \}\par
00057 \par
00058         {\cf17 protected} {\cf18 bool} GetInstallationPermission(WordlistIndexEntry entry)\par
00059         \{\par
00060             {\cf19 if} (LocalIndex.ContainsId(entry.Id))\par
00061             \{\par
00062                 {\cf19 if} (LocalIndex[entry.Id].Hash.SequenceEqual(entry.Hash) && LocalIndex[entry.Id].Verify({\cf17 false}))\par
00063                 \{\par
00064                     LogError(${\cf22 "\{entry.Id\} is already installed"});\par
00065                     {\cf19 return} {\cf17 false};\par
00066                 \}\par
00067                 {\cf19 else}\par
00068                 \{\par
00069                     RemoveWordlist(entry.Id);\par
00070                 \}\par
00071             \}\par
00072 \par
00073             {\cf19 return} {\cf17 true};\par
00074         \}\par
00075 \par
00076         {\cf17 public} {\cf18 void} FinalizeInstallation(WordlistIndexEntry entry)\par
00077         \{\par
00078             lock (_lockObj)\par
00079             \{\par
00080                 LocalIndex.Add(entry);\par
00081                 UpdateLocalIndex();\par
00082             \}\par
00083         \}\par
00084 \par
00085         {\cf17 protected} {\cf18 void} RemoveWordlist({\cf18 string} {\cf18 id})\par
00086         \{\par
00087             WordlistIndexEntry entry = LocalIndex[id];\par
00088 \par
00089             {\cf19 if} (entry.InstallDirectory != {\cf17 null} && Directory.Exists(entry.InstallDirectory))\par
00090             \{\par
00091                 Directory.Delete(entry.InstallDirectory, {\cf17 true});\par
00092             \}\par
00093 \par
00094             LocalIndex.Wordlists.Remove(entry);\par
00095 \par
00096             UpdateLocalIndex();\par
00097         \}\par
00098 \par
00099         {\cf17 protected} {\cf18 void} SortIndex()\par
00100         \{\par
00101             LocalIndex.Wordlists = LocalIndex.Wordlists.OrderBy(x => x.Id).ToList();\par
00102             UpdateLocalIndex();\par
00103         \}\par
00104     \}\par
00105 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Kryptor.Client/SessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionHost.cs}
{\xe \v SessionHost.cs}
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.SessionHost}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents abstraction for session hosts. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/Kryptor.Client/SessionHost.cs\par \pard\plain 
{\tc\tcl2 \v SessionHost.cs}
{\xe \v SessionHost.cs}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00006     {\cf17 public} {\cf17 abstract} {\cf17 class }SessionHost : ISessionHost\par
00007     \{\par
00008         {\cf17 private} {\cf18 bool} _ending;\par
00009 \par
00013         {\cf17 protected} SessionContainer Container \{ {\cf17 get}; \}\par
00014 \par
00016         {\cf17 public} {\cf18 bool} Verbose \{ {\cf17 get}; {\cf17 protected} {\cf17 set}; \}\par
00017 \par
00021         {\cf17 protected} CancellationTokenSource MasterToken \{ {\cf17 get}; \}\par
00022 \par
00026         {\cf17 protected} SessionHost()\par
00027         \{\par
00028             Container = {\cf17 new} SessionContainer({\cf17 this}, Environment.ProcessorCount - 1);\par
00029             MasterToken = {\cf17 new} CancellationTokenSource();\par
00030         \}\par
00031 \par
00033         {\cf17 public} {\cf17 abstract} {\cf18 void} Start(ClientContext context);\par
00034 \par
00036         {\cf17 public} {\cf17 virtual} {\cf18 void} End({\cf18 bool} cancelled)\par
00037         \{\par
00038             {\cf19 if} (_ending)\par
00039             \{\par
00040                 {\cf19 return};\par
00041             \}\par
00042 \par
00043             _ending = {\cf17 true};\par
00044 \par
00045             {\cf19 if} (cancelled)\par
00046             \{\par
00047                 Container.Cancel();\par
00048 \par
00049                 MasterToken.Cancel();\par
00050 \par
00051                 {\cf20 // Tell to the SessionManager to do whatever needed}\par
00052                 Container.StartQueuedSessions();\par
00053             \}\par
00054 \par
00055             Container.WaitForRunningTasks();\par
00056         \}\par
00057 \par
00059         {\cf17 public} {\cf17 virtual} {\cf18 void} NewSession(ISession session, {\cf18 bool} autoRemove = {\cf17 false}, {\cf18 bool} autoStart = {\cf17 true}) => Container.NewSession(session, autoRemove, autoStart);\par
00060 \par
00062         {\cf17 public} {\cf17 virtual} {\cf18 void} MonitorTask(Task task) => Container.AddMonitoringTask(task);\par
00063 \par
00065         {\cf17 public} {\cf17 abstract} Task<TResponse> OnSessionRequest<TResponse>(ISession session, SessionRequest<TResponse> request, CancellationToken cancellationToken);\par
00066     \}\par
00067 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreFileLoadSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v KeyStoreFileLoadSession.cs}
{\xe \v KeyStoreFileLoadSession.cs}
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.KeyStoreFileLoadSession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreFileLoadSession.cs\par \pard\plain 
{\tc\tcl2 \v KeyStoreFileLoadSession.cs}
{\xe \v KeyStoreFileLoadSession.cs}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00005 \{\par
00006     {\cf17 public} {\cf17 class }KeyStoreFileLoadSession : KeyStoreLoadSession\par
00007     \{\par
00008         {\cf17 private} readonly {\cf18 string} path;\par
00009         {\cf17 private} {\cf17 const} {\cf18 int} ChunckSize = 4096;\par
00010 \par
00011         {\cf17 public} KeyStoreFileLoadSession({\cf18 bool} showFingerprint, {\cf18 string} path) : base(showFingerprint) => this.path = path;\par
00012 \par
00013         {\cf17 protected} {\cf17 override} async Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00014         \{\par
00015             {\cf17 using} (FileStream f = File.OpenRead(path))\par
00016             \{\par
00017                 Description = {\cf22 "Reading Keystore file"};\par
00018 \par
00019                 {\cf18 byte}[] result = {\cf17 new} {\cf18 byte}[f.Length];\par
00020 \par
00021                 {\cf18 double} step = (double)(({\cf18 double})ChunckSize / f.Length) * 100;\par
00022                 {\cf18 int} prog = 1;\par
00023 \par
00024                 {\cf19 for} ({\cf18 int} i = 0; i < f.Length; i += ChunckSize)\par
00025                 \{\par
00026                     {\cf18 byte}[] buffer = {\cf17 new} {\cf18 byte}[Math.Min(f.Length - f.Position, ChunckSize)];\par
00027                     await AsyncCompat.ReadAsync(f, buffer, 0, buffer.Length, cancellationToken);\par
00028                     Array.Copy(buffer, 0, result, i, buffer.Length);\par
00029 \par
00030                     Progress = step * prog;\par
00031                     prog++;\par
00032                 \}\par
00033 \par
00034                 Description = {\cf22 "Loading keystore"};\par
00035                 Progress = -1;\par
00036                 KeyStore = {\cf17 new} KeyStore(result);\par
00037 \par
00038                 SetEndDescription();\par
00039                 {\cf19 return} {\cf17 true};\par
00040             \}\par
00041         \}\par
00042     \}\par
00043 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreGenerateSessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v KeyStoreGenerateSessionHost.cs}
{\xe \v KeyStoreGenerateSessionHost.cs}
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.KeyStoreGenerateSessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreGenerateSessionHost.cs\par \pard\plain 
{\tc\tcl2 \v KeyStoreGenerateSessionHost.cs}
{\xe \v KeyStoreGenerateSessionHost.cs}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Diagnostics.CodeAnalysis;\par
00002 \par
00003 {\cf17 using }SAPTeam.Kryptor.Client;\par
00004 {\cf17 using }SAPTeam.Kryptor.Generators;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00007 \{\par
00008     {\cf17 public} {\cf17 class }KeyStoreGenerateSessionHost : CliSessionHost\par
00009     \{\par
00010         {\cf17 private} readonly KeyStoreGenerator Generator;\par
00011         {\cf17 private} readonly {\cf18 int} Size;\par
00012         {\cf17 private} TransformerToken Token;\par
00013         {\cf17 private} readonly {\cf18 int} Margin;\par
00014         {\cf17 private} readonly {\cf18 string} Output;\par
00015 \par
00016         {\cf17 public} KeyStoreGenerateSessionHost(GlobalOptions globalOptions, KeyStoreGenerator generator, {\cf18 int} size, TransformerToken token, {\cf18 int} magin, {\cf18 string} output) : base(globalOptions)\par
00017         \{\par
00018             Generator = generator;\par
00019             Size = size > 0 ? size : KeyStore.GetRandomOddNumber();\par
00020             Token = token;\par
00021             Margin = magin;\par
00022             Output = output;\par
00023         \}\par
00024 \par
00025         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00026         \{\par
00027             base.Start(context);\par
00028 \par
00029             KeyStoreLoadSession ksLoader;\par
00030 \par
00031             {\cf19 if} (Token.IsValid())\par
00032             \{\par
00033                 ITranformer tranformer = Transformers.GetTranformer(Token);\par
00034                 {\cf18 string} kSize = Margin > 0 ? ${\cf22 "\{Token.KeySize.FormatWithCommas()\}+\{Margin.FormatWithCommas()\}"} : ${\cf22 "\{Token.KeySize.FormatWithCommas()\}"};\par
00035                 Log(${\cf22 "Generating keystore with \{kSize\} keys using \{tranformer.GetType().Name\}"});\par
00036                 ksLoader = {\cf17 new} KeyStoreTokenLoadSession({\cf17 true}, Token, Margin);\par
00037             \}\par
00038             {\cf19 else}\par
00039             \{\par
00040                 {\cf19 if} (!BuildInformation.IsAndroidPlatform && !NoInteractions && Generator == KeyStoreGenerator.EntroX)\par
00041                 \{\par
00042                     CollectEntropy();\par
00043                 \}\par
00044 \par
00045                 {\cf18 string} kSize = Margin > 0 ? ${\cf22 "\{Size.FormatWithCommas()\}+\{Margin.FormatWithCommas()\}"} : ${\cf22 "\{Size.FormatWithCommas()\}"};\par
00046                 Log(${\cf22 "Generating keystore with \{kSize\} keys using \{Generator\}"});\par
00047                 ksLoader = {\cf17 new} KeyStoreRandomLoadSession({\cf17 true}, Generator, Size, Margin);\par
00048             \}\par
00049 \par
00050             FileSaveSession fileWriter = {\cf17 new} FileSaveSession(Output, {\cf17 null});\par
00051             ksLoader.ContinueWith(fileWriter);\par
00052 \par
00053             NewSession(ksLoader);\par
00054             NewSession(fileWriter);\par
00055 \par
00056             ShowProgressMonitored({\cf17 true}).Wait();\par
00057         \}\par
00058 \par
00059         [SuppressMessage({\cf22 "Interoperability"}, {\cf22 "CA1416:Validate platform compatibility"}, Justification = {\cf22 "All non-compatible calls checked with IsAndroidPlatform property of BuildInformation"})]\par
00060         {\cf17 public} {\cf17 static} {\cf18 void} CollectEntropy()\par
00061         \{\par
00062             {\cf19 if} (BuildInformation.IsAndroidPlatform)\par
00063             \{\par
00064                 {\cf19 throw} {\cf17 new} NotSupportedException({\cf22 "The console input reading feature is not supported in this platform"});\par
00065             \}\par
00066 \par
00067             CryptoRandom crng = {\cf17 new} CryptoRandom();\par
00068             List<(DateTime start, DateTime end, {\cf18 string} data)> entropy = {\cf17 new} List<(DateTime start, DateTime end, {\cf18 string} data)>();\par
00069 \par
00070             Console.WriteLine();\par
00071             Console.WriteLine({\cf22 "Collecting entropy"});\par
00072 \par
00073             Console.WriteLine({\cf22 "Please enter some random characters. more character and more randomness improves the security of your keystore."});\par
00074             DateTime initTime = DateTime.Now;\par
00075             {\cf18 string} initEnt = Console.ReadLine();\par
00076             DateTime initEndTime = DateTime.Now;\par
00077             entropy.Add((initTime, initEndTime, initEnt));\par
00078 \par
00079             {\cf18 int} i = 0;\par
00080             {\cf18 int} count = crng.Next(1, 4);\par
00081             {\cf19 while} (i < count)\par
00082             \{\par
00083                 Console.Write({\cf22 "Please enter more character: "});\par
00084                 DateTime sTime = DateTime.Now;\par
00085                 {\cf18 string} data = Console.ReadLine();\par
00086                 DateTime eTime = DateTime.Now;\par
00087                 entropy.Add((sTime, eTime, data));\par
00088 \par
00089                 i++;\par
00090             \}\par
00091 \par
00092             {\cf18 int} target = crng.Next(10, 40);\par
00093             {\cf19 while} (target > 0)\par
00094             \{\par
00095                 {\cf18 byte}[] shuffledChars = entropy.SelectMany(x => x.data)\par
00096                                            .OrderBy(x => crng.Next())\par
00097                                            .SelectMany(BitConverter.GetBytes)\par
00098                                            .OrderBy(x => crng.Next())\par
00099                                            .ToArray();\par
00100 \par
00101                 {\cf18 byte}[] shuffledNumbers = entropy.SelectMany(x => BitConverter.GetBytes((x.end - x.start).Ticks))\par
00102                                            .OrderBy(x => crng.Next())\par
00103                                            .ToArray();\par
00104 \par
00105                 {\cf18 byte}[] shuffledArray = shuffledChars.Concat(shuffledNumbers)\par
00106                                                  .Shuffle(crng)\par
00107                                                  .ToArray();\par
00108 \par
00109                 EntroX.AddEntropy(shuffledArray.Take(crng.Next(Math.Min(1, shuffledArray.Length)))\par
00110                                                     .ToArray());\par
00111 \par
00112                 target--;\par
00113             \}\par
00114 \par
00115             Console.WriteLine();\par
00116         \}\par
00117     \}\par
00118 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreGenerator.cs File Reference\par \pard\plain 
{\tc\tcl2 \v KeyStoreGenerator.cs}
{\xe \v KeyStoreGenerator.cs}
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SAPTeam.Kryptor.Cli.KeyStoreGenerator} \{ {\b SAPTeam.Kryptor.Cli.CryptoRng}
, {\b SAPTeam.Kryptor.Cli.Unix}
, {\b SAPTeam.Kryptor.Cli.SafeRng}
, {\b SAPTeam.Kryptor.Cli.EntroX}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreGenerator.cs\par \pard\plain 
{\tc\tcl2 \v KeyStoreGenerator.cs}
{\xe \v KeyStoreGenerator.cs}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00002 \{\par
00003     {\cf17 public} {\cf17 enum} KeyStoreGenerator\par
00004     \{\par
00005         CryptoRng,\par
00006         Unix,\par
00007         SafeRng,\par
00008         EntroX,\par
00009     \}\par
00010 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreLoadSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v KeyStoreLoadSession.cs}
{\xe \v KeyStoreLoadSession.cs}
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.KeyStoreLoadSession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreLoadSession.cs\par \pard\plain 
{\tc\tcl2 \v KeyStoreLoadSession.cs}
{\xe \v KeyStoreLoadSession.cs}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00004 \{\par
00005     {\cf17 public} {\cf17 abstract} {\cf17 class }KeyStoreLoadSession : Session\par
00006     \{\par
00007         {\cf17 public} KeyStore KeyStore \{ {\cf17 get}; {\cf17 protected} {\cf17 set}; \}\par
00008 \par
00009         {\cf17 protected} {\cf18 bool} ShowFingerprint \{ {\cf17 get}; \}\par
00010 \par
00011         {\cf17 protected} KeyStoreLoadSession({\cf18 bool} showFingerprint)\par
00012         \{\par
00013             ShowFingerprint = showFingerprint;\par
00014             SessionEnded += TransferData;\par
00015         \}\par
00016 \par
00017         {\cf17 private} {\cf18 void} TransferData({\cf18 object} sender, SessionEventArgs e)\par
00018         \{\par
00019             {\cf19 if} (e.EndReason == SessionEndReason.Completed)\par
00020             \{\par
00021                 Dependents.OfType<FileSaveSession>().ForEach(x =>\par
00022                 \{\par
00023                     {\cf19 if} ({\cf18 string}.IsNullOrEmpty(x.FilePath))\par
00024                     \{\par
00025                         x.FilePath = BitConverter.ToString(KeyStore.Fingerprint).Replace({\cf22 "-"}, {\cf22 ""}).ToLower() + {\cf22 ".kks"};\par
00026                     \}\par
00027 \par
00028                     {\cf19 if} (x.Data == {\cf17 null} || x.Data.Length == 0)\par
00029                     \{\par
00030                         x.Data = KeyStore.Raw;\par
00031                     \}\par
00032                 \});\par
00033             \}\par
00034         \}\par
00035 \par
00036         {\cf17 protected} {\cf18 void} SetEndDescription() => Description = ShowFingerprint ? ${\cf22 "Keystore fingerprint: \{KeyStore.Fingerprint.FormatFingerprint()\}"} : {\cf22 "Keystore loaded"};\par
00037     \}\par
00038 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreRandomLoadSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v KeyStoreRandomLoadSession.cs}
{\xe \v KeyStoreRandomLoadSession.cs}
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.KeyStoreRandomLoadSession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreRandomLoadSession.cs\par \pard\plain 
{\tc\tcl2 \v KeyStoreRandomLoadSession.cs}
{\xe \v KeyStoreRandomLoadSession.cs}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 {\cf17 using }SAPTeam.Kryptor.Generators;\par
00003 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00004 \par
00005 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00006 \{\par
00007     {\cf17 public} {\cf17 class }KeyStoreRandomLoadSession : KeyStoreLoadSession\par
00008     \{\par
00009         {\cf17 private} CancellationToken CancellationToken;\par
00010 \par
00011         {\cf17 private} readonly KeyStoreGenerator Generator;\par
00012         {\cf17 private} readonly {\cf18 int} Size;\par
00013 \par
00014         {\cf17 public} KeyStoreRandomLoadSession({\cf18 bool} showFingerprint, KeyStoreGenerator generator, {\cf18 int} size, {\cf18 int} margin) : base(showFingerprint)\par
00015         \{\par
00016             Generator = generator;\par
00017             Size = (size * 32) + margin;\par
00018         \}\par
00019 \par
00020         {\cf17 protected} {\cf17 override} async Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00021         \{\par
00022             CancellationToken = cancellationToken;\par
00023             Description = {\cf22 "Generating keystore"};\par
00024 \par
00025             await AsyncCompat.Delay(2, cancellationToken);\par
00026             IGenerator gen;\par
00027 \par
00028             {\cf19 switch} (Generator)\par
00029             \{\par
00030                 {\cf19 case} KeyStoreGenerator.CryptoRng:\par
00031                     gen = {\cf17 new} CryptoRandom();\par
00032                     {\cf19 break};\par
00033                 {\cf19 case} KeyStoreGenerator.Unix:\par
00034                     gen = {\cf17 new} UnixRandom();\par
00035                     {\cf19 break};\par
00036                 {\cf19 case} KeyStoreGenerator.SafeRng:\par
00037                     gen = {\cf17 new} SafeRng();\par
00038                     {\cf19 break};\par
00039                 {\cf19 case} KeyStoreGenerator.EntroX:\par
00040                     gen = {\cf17 new} EntroX();\par
00041                     {\cf19 break};\par
00042                 {\cf19 default}:\par
00043                     {\cf19 throw} {\cf17 new} System.ArgumentException({\cf22 "generator"});\par
00044             \}\par
00045 \par
00046             gen.ProgressChanged += UpdateProgress;\par
00047 \par
00048             {\cf18 byte}[] buffer = {\cf17 new} {\cf18 byte}[Size];\par
00049             gen.Generate(buffer);\par
00050 \par
00051             Description = {\cf22 "Loading keystore"};\par
00052             Progress = -1;\par
00053             KeyStore = {\cf17 new} KeyStore(buffer);\par
00054 \par
00055             SetEndDescription();\par
00056             {\cf19 return} {\cf17 true};\par
00057         \}\par
00058 \par
00059         {\cf17 private} {\cf18 void} UpdateProgress({\cf18 object} sender, {\cf18 double} progress)\par
00060         \{\par
00061             Progress = progress;\par
00062             CancellationToken.ThrowIfCancellationRequested();\par
00063         \}\par
00064     \}\par
00065 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreTokenLoadSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v KeyStoreTokenLoadSession.cs}
{\xe \v KeyStoreTokenLoadSession.cs}
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.KeyStoreTokenLoadSession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStoreTokenLoadSession.cs\par \pard\plain 
{\tc\tcl2 \v KeyStoreTokenLoadSession.cs}
{\xe \v KeyStoreTokenLoadSession.cs}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00005 \{\par
00006     {\cf17 public} {\cf17 class }KeyStoreTokenLoadSession : KeyStoreLoadSession\par
00007     \{\par
00008         {\cf17 private} TransformerToken token;\par
00009         {\cf17 private} readonly {\cf18 int} margin;\par
00010 \par
00011         {\cf17 private} CancellationToken cancellationToken;\par
00012 \par
00013         {\cf17 public} KeyStoreTokenLoadSession({\cf18 bool} showFingerprint, TransformerToken token, {\cf18 int} margin) : base(showFingerprint)\par
00014         \{\par
00015             this.token = token;\par
00016             this.margin = margin;\par
00017         \}\par
00018 \par
00019         {\cf17 protected} {\cf17 override} async Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00020         \{\par
00021             this.cancellationToken = cancellationToken;\par
00022             Description = {\cf22 "Generating keystore"};\par
00023             await AsyncCompat.Delay(1, cancellationToken);\par
00024 \par
00025 {\cf21 #if false}\par
00026             {\cf19 if} (!await SendRequest(sessionHost, {\cf17 new} SessionRequest<bool>({\cf22 "Do you want to continue this task? even when you see this long message? tou know, i don't want to continue generating these keystores, i have a family and two kids to feed, please free me. i know that you may need this keystore to encrypt or decrypt your highly secret files, you are the boss."}, {\cf17 true}), cancellationToken))\par
00027             \{\par
00028                 {\cf19 throw} {\cf17 new} System.OperationCanceledException();\par
00029             \}\par
00030 {\cf21 #endif}\par
00031 \par
00032             KeyStore = Utilities.GenerateKeyStoreFromToken(token, UpdateProgress, margin);\par
00033 \par
00034             SetEndDescription();\par
00035             {\cf19 return} {\cf17 true};\par
00036         \}\par
00037 \par
00038         {\cf17 private} {\cf18 void} UpdateProgress({\cf18 object} sender, {\cf18 double} progress)\par
00039         \{\par
00040             {\cf19 if} (progress == -1)\par
00041             \{\par
00042                 Description = {\cf22 "Loading keystore"};\par
00043             \}\par
00044 \par
00045             Progress = progress;\par
00046             cancellationToken.ThrowIfCancellationRequested();\par
00047         \}\par
00048     \}\par
00049 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PauseRequest.cs File Reference\par \pard\plain 
{\tc\tcl2 \v PauseRequest.cs}
{\xe \v PauseRequest.cs}
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.PauseRequest}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PauseRequest.cs\par \pard\plain 
{\tc\tcl2 \v PauseRequest.cs}
{\xe \v PauseRequest.cs}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00002 \{\par
00003     {\cf17 public} {\cf17 class }PauseRequest\par
00004     \{\par
00005         {\cf17 public} {\cf18 string} Message \{ {\cf17 get}; {\cf17 set}; \}\par
00006 \par
00007         {\cf17 public} {\cf18 bool} Default \{ {\cf17 get}; \}\par
00008 \par
00009         {\cf17 public} {\cf18 bool} Response \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00010 \par
00011         {\cf17 public} {\cf18 bool} IsResponsed \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00012 \par
00013         {\cf17 public} PauseRequest({\cf18 string} message, {\cf18 bool} defaultValue)\par
00014         \{\par
00015             Message = message;\par
00016             Default = defaultValue;\par
00017             IsResponsed = {\cf17 false};\par
00018         \}\par
00019 \par
00020         {\cf17 public} {\cf18 void} SetResponse({\cf18 bool} response)\par
00021         \{\par
00022             IsResponsed = {\cf17 true};\par
00023             Response = response;\par
00024         \}\par
00025 \par
00026         {\cf17 public} {\cf18 bool} IsEmpty() => {\cf18 string}.IsNullOrEmpty(Message);\par
00027     \}\par
00028 \}\par
00029 \par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Program.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Program.cs}
{\xe \v Program.cs}
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Program}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Program.cs\par \pard\plain 
{\tc\tcl2 \v Program.cs}
{\xe \v Program.cs}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.CommandLine;\par
00002 {\cf17 using }System.CommandLine.Parsing;\par
00003 {\cf17 using }System.Reflection;\par
00004 {\cf17 using }System.Runtime.InteropServices;\par
00005 \par
00006 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00007 \par
00008 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00009 \{\par
00010     {\cf17 public} {\cf17 class }Program\par
00011     \{\par
00012         {\cf17 public} {\cf17 static} CliContext Context \{ {\cf17 get}; \} = CommonTK.Context.Register<CliContext>();\par
00013 \par
00014         {\cf17 public} {\cf17 static} {\cf18 int} Main({\cf18 string}[] args)\par
00015         \{\par
00016             RootCommand root = GetRootCommand();\par
00017 \par
00018             {\cf19 return} root.Invoke(args);\par
00019         \}\par
00020 \par
00021         {\cf17 public} {\cf17 static} RootCommand GetRootCommand()\par
00022         \{\par
00023             Option<bool> debugInfo = {\cf17 new} Option<bool>({\cf22 "--debug-info"}, {\cf22 "Show build information"});\par
00024             debugInfo.AddAlias({\cf22 "-V"});\par
00025 \par
00026             RootCommand root = {\cf17 new} RootCommand({\cf22 "Kryptor Command-Line Interface"})\par
00027             \{\par
00028                 debugInfo\par
00029             \};\par
00030 \par
00031             GlobalOptionsBinder globalOptionsBinder = GetGlobalOptions(root);\par
00032 \par
00033             root.SetHandler((globalOptionsT, verInfoT) =>\par
00034             \{\par
00035                 {\cf19 if} (verInfoT)\par
00036                 \{\par
00037                     Console.WriteLine(${\cf22 "Kryptor Command-Line Interface for \{BuildInformation.TargetFramework\}"});\par
00038 \par
00039                     Console.WriteLine(${\cf22 "Build Time: \{BuildInformation.BuildTime.ToLocalTime():MMM dd, yyyy HH:mm:ss zzz\}"});\par
00040                     Console.WriteLine(${\cf22 "Build Type: \{BuildInformation.Variant\}"});\par
00041                     Console.WriteLine(${\cf22 "Build Configuration: \{BuildInformation.Branch\}"});\par
00042 \par
00043                     {\cf19 if} (!{\cf18 string}.IsNullOrEmpty(BuildInformation.TargetPlatform))\par
00044                     \{\par
00045                         {\cf18 string} platformStr = ${\cf22 "Platform: \{BuildInformation.TargetPlatform\}"};\par
00046 {\cf21 #if AOT}\par
00047                         platformStr += {\cf22 " (AOT)"};\par
00048 {\cf21 #endif}\par
00049                         Console.WriteLine(platformStr);\par
00050                     \}\par
00051 \par
00052                     Console.WriteLine(${\cf22 "Application Version: \{BuildInformation.ApplicationVersion\}"});\par
00053                     Console.WriteLine(${\cf22 "Application Informational Version: \{BuildInformation.ApplicationInformationalVersion\}"});\par
00054                     Console.WriteLine(${\cf22 "Kryptor Client Utility Version: \{BuildInformation.ClientVersion.ToString(3)\}"});\par
00055                     Console.WriteLine(${\cf22 "Kryptor Engine Version: \{BuildInformation.EngineVersion.ToString(3)\}"});\par
00056                     Console.WriteLine(${\cf22 "KES API Version: \{Kes.Version.ToString(2)\}"});\par
00057                     Console.WriteLine(${\cf22 "KES API Minimum Supported Version: \{Kes.MinimumSupportedVersion.ToString(2)\}"});\par
00058                     Console.WriteLine(${\cf22 "Async Compatible: \{AsyncCompat.IsAsyncCompatible\}"});\par
00059 \par
00060                     Console.WriteLine(${\cf22 "Application data directory: \{Context.ApplicationDataDirectory\}"});\par
00061                     Console.WriteLine(${\cf22 "Data directory is writable: \{Context.ApplicationDataDirectoryIsWritable\}"});\par
00062 \par
00063                     IEnumerable<string> cryptoProviders = CryptoProviderFactory.GetRegisteredCryptoProviders();\par
00064                     {\cf19 if} (!cryptoProviders.Any()) {\cf19 return};\par
00065 \par
00066                     Console.WriteLine();\par
00067                     Console.WriteLine({\cf22 "Registered Crypto Providers:"});\par
00068 \par
00069                     {\cf19 foreach} ({\cf18 string} {\cf18 id} {\cf19 in} cryptoProviders)\par
00070                     \{\par
00071                         Console.WriteLine(${\cf22 "\{id\} (\{CryptoProviderFactory.GetDisplayName(id)\})"});\par
00072                     \}\par
00073                 \}\par
00074                 {\cf19 else}\par
00075                 \{\par
00076                     Console.Error.WriteLine({\cf22 "To view help message, run kryptor --help"});\par
00077                 \}\par
00078             \}, globalOptionsBinder, debugInfo);\par
00079 \par
00080 {\cf21             #region Common Data Processing Options}\par
00081             Option<int> blockSize = {\cf17 new} Option<int>({\cf22 "--block-size"}, () => Kes.DefaultBlockSize, {\cf22 "Determines the block size for data processing"});\par
00082             blockSize.AddAlias({\cf22 "-b"});\par
00083 \par
00084             Option<string> provider = {\cf17 new} Option<string>({\cf22 "--provider"}, () => {\cf22 "3"}, {\cf22 "Determines the crypto provider to process data"});\par
00085             provider.AddAlias({\cf22 "-p"});\par
00086 \par
00087             Option<bool> continuous = {\cf17 new} Option<bool>({\cf22 "--continuous"}, {\cf22 "Enables using the Continuous method"});\par
00088             continuous.AddAlias({\cf22 "-c"});\par
00089 \par
00090             Option<bool> removeHash = {\cf17 new} Option<bool>({\cf22 "--remove-hash"}, {\cf22 "Removes the block hash to increase the security"});\par
00091             removeHash.AddAlias({\cf22 "-r"});\par
00092 \par
00093             Option<bool> dbp = {\cf17 new} Option<bool>({\cf22 "--dbp"}, {\cf22 "Enables the Dynamic Block Processing"});\par
00094             dbp.AddAlias({\cf22 "-d"});\par
00095 \par
00096             Option<string> outputPath = {\cf17 new} Option<string>({\cf22 "--output"}, getDefaultValue: () => Path.GetFullPath({\cf22 "."}), description: {\cf22 "The output directory. by default it points to the current directory."});\par
00097             outputPath.AddAlias({\cf22 "-o"});\par
00098 \par
00099             Option<string> keystore = {\cf17 new} Option<string>({\cf22 "--keystore"}, {\cf22 "Keystore file path or transformer token"});\par
00100             keystore.AddAlias({\cf22 "-k"});\par
00101             keystore.IsRequired = {\cf17 true};\par
00102             keystore.AddValidator(x =>\par
00103             \{\par
00104                 {\cf18 string} _inKs = x.Tokens.First().Value;\par
00105                 {\cf19 if} (File.Exists(_inKs) || TransformerToken.IsValid(_inKs))\par
00106                 \{\par
00107                     {\cf19 return};\par
00108                 \}\par
00109                 {\cf19 else}\par
00110                 \{\par
00111                     x.ErrorMessage = {\cf22 "Invalid token or keystore file not found"};\par
00112                 \}\par
00113             \});\par
00114 \par
00115             Argument<IEnumerable<string>> files = {\cf17 new} Argument<IEnumerable<string>>(\par
00116                 name: {\cf22 "files"},\par
00117                 description: {\cf22 "Files or folders to be processed"},\par
00118                 isDefault: {\cf17 true},\par
00119                 parse: (x) =>\par
00120                 \{\par
00121                     {\cf19 if} (x.Tokens.Count == 0)\par
00122                     \{\par
00123                         x.ErrorMessage = {\cf22 "You must specify at least one file or folder"};\par
00124                         {\cf19 return} {\cf17 null};\par
00125                     \}\par
00126                     {\cf19 else}\par
00127                     \{\par
00128                         {\cf19 return} x.Tokens.Select(y => y.Value).ToArray();\par
00129                     \}\par
00130                 \}\par
00131                 );\par
00132 {\cf21             #endregion}\par
00133 \par
00134 {\cf21             #region Encryption Options}\par
00135             Option<int> hVerbose = {\cf17 new} Option<int>({\cf22 "--header"}, () => 2, {\cf22 "Determines the amount of data stored in the header. 0 means no data and 3 means all data needed to decrypt the file (except the keystore)"});\par
00136             hVerbose.AddAlias({\cf22 "-H"});\par
00137 \par
00138             Option<string> keyChain = {\cf17 new} Option<string>({\cf22 "--keychain"}, {\cf22 "Determines the key chain json file to store files unique identifiers and keystore information to it"});\par
00139             keyChain.AddAlias({\cf22 "-K"});\par
00140 \par
00141             Option<bool> obfuscate = {\cf17 new} Option<bool>({\cf22 "--obfuscate"}, {\cf22 "Obfuscates encrypted file name by renaming it to a random file name"});\par
00142             obfuscate.AddAlias({\cf22 "-O"});\par
00143 \par
00144             Command encCmd = {\cf17 new} Command({\cf22 "encrypt"}, {\cf22 "Encrypts files with keystore"})\par
00145             \{\par
00146                 blockSize,\par
00147                 provider,\par
00148                 continuous,\par
00149                 removeHash,\par
00150                 dbp,\par
00151                 hVerbose,\par
00152                 keyChain,\par
00153                 obfuscate,\par
00154                 outputPath,\par
00155                 keystore,\par
00156                 files\par
00157             \};\par
00158 \par
00159             encCmd.AddAlias({\cf22 "e"});\par
00160 \par
00161             encCmd.SetHandler((globalOptionsT, dpoT, hVerboseT, keyChainT, obfuscateT) =>\par
00162             \{\par
00163                 EncryptionSessionHost sessionHost = {\cf17 new} EncryptionSessionHost(globalOptionsT, dpoT, hVerboseT, keyChainT, obfuscateT);\par
00164                 Context.NewSessionHost(sessionHost);\par
00165             \}, globalOptionsBinder, {\cf17 new} DataProcessingOptionsBinder(blockSize, provider, continuous, removeHash, dbp, outputPath, keystore, files), hVerbose, keyChain, obfuscate);\par
00166 {\cf21             #endregion}\par
00167 \par
00168 {\cf21             #region Decryption Options}\par
00169             Command decCmd = {\cf17 new} Command({\cf22 "decrypt"}, {\cf22 "Decrypts files with keystore"})\par
00170             \{\par
00171                 blockSize,\par
00172                 provider,\par
00173                 continuous,\par
00174                 removeHash,\par
00175                 dbp,\par
00176                 outputPath,\par
00177                 keystore,\par
00178                 files\par
00179             \};\par
00180 \par
00181             decCmd.AddAlias({\cf22 "d"});\par
00182 \par
00183             decCmd.SetHandler((globalOptionsT, dpoT) =>\par
00184             \{\par
00185                 DecryptionSessionHost sessionHost = {\cf17 new} DecryptionSessionHost(globalOptionsT, dpoT);\par
00186                 Context.NewSessionHost(sessionHost);\par
00187             \}, globalOptionsBinder, {\cf17 new} DataProcessingOptionsBinder(blockSize, provider, continuous, removeHash, dbp, outputPath, keystore, files));\par
00188 {\cf21             #endregion}\par
00189 \par
00190             Command genCmd = GetGenerateCommand(globalOptionsBinder);\par
00191 \par
00192             Command anCmd = GetAnalyzeCommand(globalOptionsBinder, keystore);\par
00193 \par
00194             Command wlCmd = GetWordlistCommand(globalOptionsBinder);\par
00195 \par
00196             Command kcCmd = GetKeyChainCommand(globalOptionsBinder);\par
00197 \par
00198             Command headCmd = GetHeaderCommand(globalOptionsBinder);\par
00199 \par
00200             root.AddCommand(anCmd);\par
00201             root.AddCommand(encCmd);\par
00202             root.AddCommand(decCmd);\par
00203             root.AddCommand(genCmd);\par
00204             root.AddCommand(headCmd);\par
00205             root.AddCommand(kcCmd);\par
00206             root.AddCommand(wlCmd);\par
00207             {\cf19 return} root;\par
00208         \}\par
00209 \par
00210         {\cf17 private} {\cf17 static} Command GetHeaderCommand(GlobalOptionsBinder globalOptionsBinder)\par
00211         \{\par
00212             Argument<string> filePath = {\cf17 new} Argument<string>({\cf22 "file"}, {\cf22 "Path of an encrypted file"});\par
00213 \par
00214             Command headCmd = {\cf17 new} Command({\cf22 "header"}, {\cf22 "Gets informations about an encrypted file"})\par
00215             \{\par
00216                 filePath\par
00217             \};\par
00218 \par
00219             headCmd.AddAlias({\cf22 "h"});\par
00220 \par
00221             headCmd.SetHandler((globalOptionsT, filePathT) =>\par
00222             \{\par
00223                 HeaderReaderSessionHost sessionHost = {\cf17 new} HeaderReaderSessionHost(globalOptionsT, filePathT);\par
00224                 Context.NewSessionHost(sessionHost);\par
00225             \}, globalOptionsBinder, filePath);\par
00226 \par
00227             {\cf19 return} headCmd;\par
00228         \}\par
00229 \par
00230         {\cf17 private} {\cf17 static} Command GetKeyChainCommand(GlobalOptionsBinder globalOptionsBinder)\par
00231         \{\par
00232             Argument<string> keyChainPath = {\cf17 new} Argument<string>({\cf22 "keychain"}, {\cf22 "Path of an existing keychain file or folder"});\par
00233             Argument<string> filePath = {\cf17 new} Argument<string>({\cf22 "file"}, {\cf22 "Path of an encrypted file"});\par
00234 \par
00235             Command kcCmd = {\cf17 new} Command({\cf22 "keychain"}, {\cf22 "Gets informations about an encrypted file in a keychain file"})\par
00236             \{\par
00237                 keyChainPath,\par
00238                 filePath\par
00239             \};\par
00240 \par
00241             kcCmd.AddAlias({\cf22 "k"});\par
00242 \par
00243             kcCmd.SetHandler((globalOptionsT, keyChainPathT, filePathT) =>\par
00244             \{\par
00245                 KeyChainReaderSessionHost sessionHost = {\cf17 new} KeyChainReaderSessionHost(globalOptionsT, keyChainPathT, filePathT);\par
00246                 Context.NewSessionHost(sessionHost);\par
00247             \}, globalOptionsBinder, keyChainPath, filePath);\par
00248 \par
00249             {\cf19 return} kcCmd;\par
00250         \}\par
00251 \par
00252         {\cf17 private} {\cf17 static} Command GetGenerateCommand(GlobalOptionsBinder globalOptionsBinder)\par
00253         \{\par
00254             Option<KeyStoreGenerator> generateGenerator = {\cf17 new} Option<KeyStoreGenerator>(\par
00255                             {\cf22 "--random"},\par
00256                             () =>\par
00257                             \{\par
00258                                 {\cf19 return} !RuntimeInformation.IsOSPlatform(OSPlatform.Windows) && File.Exists({\cf22 "/dev/random"})\par
00259                                     ? KeyStoreGenerator.Unix\par
00260                                     : KeyStoreGenerator.CryptoRng;\par
00261                             \},\par
00262                             {\cf22 "Determines a random key generator to generate keystore in a non-deterministic method."});\par
00263 \par
00264             generateGenerator.AddAlias({\cf22 "-r"});\par
00265 \par
00266             Option<TransformerToken> generateToken = {\cf17 new} Option<TransformerToken>(\par
00267                 {\cf22 "--token"},\par
00268                 parseArgument: (x) =>\par
00269                 \{\par
00270                     {\cf18 string} _tk = x.Tokens.First().Value;\par
00271                     {\cf19 if} (TransformerToken.IsValid(_tk))\par
00272                     \{\par
00273                         {\cf19 return} TransformerToken.Parse(_tk);\par
00274                     \}\par
00275                     {\cf19 else}\par
00276                     \{\par
00277                         x.ErrorMessage = {\cf22 "Invalid tranformer token"};\par
00278                         {\cf19 return} {\cf19 default};\par
00279                     \}\par
00280                 \},\par
00281                 description: {\cf22 "Determines the transformer token to generate keystore with a deterministic method"});\par
00282 \par
00283             generateToken.AddAlias({\cf22 "-t"});\par
00284 \par
00285             Option<int> generateSize = {\cf17 new} Option<int>({\cf22 "--size"}, {\cf22 "Determines the keystore size. it's recommended to choose sizes larger than 256. This argument is not respected in transformer token generation because the token itself has a size argument."});\par
00286             generateSize.AddAlias({\cf22 "-s"});\par
00287 \par
00288             Option<int> generateMargin = {\cf17 new} Option<int>({\cf22 "--margin"}, {\cf22 "Adds an extra small size to the generated keystore size. it could increase the security of the keystore. this option works in both random and token based generation."});\par
00289             generateMargin.AddAlias({\cf22 "-m"});\par
00290 \par
00291             Option<string> generateOutput = {\cf17 new} Option<string>({\cf22 "--output"}, {\cf22 "Determines the file name of the generated keystore. if no name is specified, the keystore's fingerprint will be used as file name."});\par
00292             generateOutput.AddAlias({\cf22 "-o"});\par
00293 \par
00294             Command genCmd = {\cf17 new} Command({\cf22 "generate"}, {\cf22 "Generates a new keystore"})\par
00295             \{\par
00296                 generateGenerator,\par
00297                 generateToken,\par
00298                 generateSize,\par
00299                 generateMargin,\par
00300                 generateOutput\par
00301             \};\par
00302 \par
00303             genCmd.AddAlias({\cf22 "g"});\par
00304 \par
00305             genCmd.SetHandler((globalOptionsBinderT, generateGeneratorT, generateTokenT, generateSizeT, generateMarginT, generateOutputT) =>\par
00306             \{\par
00307                 KeyStoreGenerateSessionHost sessionHost = {\cf17 new} KeyStoreGenerateSessionHost(globalOptionsBinderT, generateGeneratorT, generateSizeT, generateTokenT, generateMarginT, generateOutputT);\par
00308                 Context.NewSessionHost(sessionHost);\par
00309             \}, globalOptionsBinder, generateGenerator, generateToken, generateSize, generateMargin, generateOutput);\par
00310 \par
00311             {\cf19 return} genCmd;\par
00312         \}\par
00313 \par
00314         {\cf17 private} {\cf17 static} Command GetAnalyzeCommand(GlobalOptionsBinder globalOptionsBinder, Option<string> keystore)\par
00315         \{\par
00316             Option<int> analyzeJobs = {\cf17 new} Option<int>({\cf22 "--jobs"}, {\cf22 "Determines the number of concurrent jobs"});\par
00317             analyzeJobs.AddAlias({\cf22 "-j"});\par
00318 \par
00319             Command anCmd = {\cf17 new} Command({\cf22 "analyze"}, {\cf22 "Analyzes the keystore security"})\par
00320             \{\par
00321                 analyzeJobs,\par
00322                 keystore\par
00323             \};\par
00324 \par
00325             anCmd.AddAlias({\cf22 "a"});\par
00326 \par
00327             anCmd.SetHandler((globalOptionsT, analyzeJobsT, keystoreT) =>\par
00328             \{\par
00329                 KeyStoreAnalyze.SessionHost sessionHost = {\cf17 new} KeyStoreAnalyze.SessionHost(globalOptionsT, analyzeJobsT, keystoreT);\par
00330                 Context.NewSessionHost(sessionHost);\par
00331             \}, globalOptionsBinder, analyzeJobs, keystore);\par
00332 \par
00333             {\cf19 return} anCmd;\par
00334         \}\par
00335 \par
00336         {\cf17 private} {\cf17 static} Command GetWordlistCommand(GlobalOptionsBinder globalOptionsBinder)\par
00337         \{\par
00338             Command wlCmd = {\cf17 new} Command({\cf22 "wordlist"}, {\cf22 "Queries the given word in installed wordlists"});\par
00339             wlCmd.AddAlias({\cf22 "w"});\par
00340 \par
00341             Argument<string> queryWord = {\cf17 new} Argument<string>({\cf22 "word"}, {\cf22 "The word to query in wordlists"});\par
00342 \par
00343             Option<string> queryWordlist = {\cf17 new} Option<string>({\cf22 "--wordlist"}, {\cf22 "The wordlist to do query. if not specified, all installed wordlists will be queried."});\par
00344             queryWordlist.AddAlias({\cf22 "-w"});\par
00345 \par
00346             Command wlQuryCmd = {\cf17 new} Command({\cf22 "query"}, {\cf22 "searches for the given word in the wordlists"})\par
00347             \{\par
00348                 queryWord,\par
00349                 queryWordlist\par
00350             \};\par
00351             wlQuryCmd.AddAlias({\cf22 "q"});\par
00352 \par
00353             wlQuryCmd.SetHandler((globalOptionsT, queryWordT, queryWordlistT) =>\par
00354             \{\par
00355                 Wordlist.QuerySessionHost sessionHost = {\cf17 new} Wordlist.QuerySessionHost(globalOptionsT, queryWordT, queryWordlistT);\par
00356                 Context.NewSessionHost(sessionHost);\par
00357             \}, globalOptionsBinder, queryWord, queryWordlist);\par
00358 \par
00359             wlCmd.AddCommand(wlQuryCmd);\par
00360 \par
00361             Option<bool> doOptimize = {\cf17 new} Option<bool>({\cf22 "--optimize"}, {\cf22 "Removes all duplicated entries from wordlists. Note: this process requires high amount of ram. if you recieve memory related exceptions, you must disable this option."});\par
00362 {\cf21 #if !LIGHT}\par
00363             Argument<string> indexSource = {\cf17 new} Argument<string>({\cf22 "source"}, {\cf22 "The source index v1 file"});\par
00364 \par
00365             Command wlIndexCmd = {\cf17 new} Command({\cf22 "index"}, {\cf22 "Generates index files (Internal use)"})\par
00366             \{\par
00367                 doOptimize,\par
00368                 indexSource\par
00369             \};\par
00370 \par
00371             wlIndexCmd.SetHandler((globalOptionsT, doOptimizeT, indexSourceT) =>\par
00372             \{\par
00373                 Wordlist.IndexSessionHost sessionHost = {\cf17 new} Wordlist.IndexSessionHost(globalOptionsT, doOptimizeT, indexSourceT);\par
00374                 Context.NewSessionHost(sessionHost);\par
00375             \}, globalOptionsBinder, doOptimize, indexSource);\par
00376 \par
00377             wlCmd.AddCommand(wlIndexCmd);\par
00378 \par
00379             Option<bool> installList = {\cf17 new} Option<bool>({\cf22 "--list"}, {\cf22 "Lists all available wordlists"});\par
00380             installList.AddAlias({\cf22 "-l"});\par
00381 \par
00382             Option<bool> installAll = {\cf17 new} Option<bool>({\cf22 "--all"}, {\cf22 "Installs all available wordlists"});\par
00383             installAll.AddAlias({\cf22 "-a"});\par
00384 \par
00385             Option<bool> installRecommended = {\cf17 new} Option<bool>({\cf22 "--recommended"}, {\cf22 "Installs all small-sized wordlists"});\par
00386             installRecommended.AddAlias({\cf22 "-r"});\par
00387 \par
00388             Argument<string[]> installIds = {\cf17 new} Argument<string[]>({\cf22 "wordlist"}, {\cf22 "Id of wordlists to install, list of available wordlists could be found by --list option"})\par
00389             \{\par
00390                 HelpName = {\cf22 "id"}\par
00391             \};\par
00392 \par
00393             Command wlInsCmd = {\cf17 new} Command({\cf22 "install"}, {\cf22 "Installs new wordlists"})\par
00394             \{\par
00395                 installList,\par
00396                 installAll,\par
00397                 installRecommended,\par
00398                 doOptimize,\par
00399                 installIds\par
00400             \};\par
00401 \par
00402             wlInsCmd.AddAlias({\cf22 "i"});\par
00403 \par
00404             wlInsCmd.SetHandler((globalOptionsT, installListT, installAllT, installRecommendedT, doOptimizeT, installIdsT) =>\par
00405             \{\par
00406                 Wordlist.InstallSessionHost sessionHost = {\cf17 new} Wordlist.InstallSessionHost(globalOptionsT, installListT, installAllT, installRecommendedT, doOptimizeT, installIdsT);\par
00407                 Context.NewSessionHost(sessionHost);\par
00408             \}, globalOptionsBinder, installList, installAll, installRecommended, doOptimize, installIds);\par
00409 \par
00410             wlCmd.AddCommand(wlInsCmd);\par
00411 {\cf21 #endif}\par
00412             Option<bool> removeList = {\cf17 new} Option<bool>({\cf22 "--list"}, {\cf22 "Lists all installed wordlists"});\par
00413             removeList.AddAlias({\cf22 "-l"});\par
00414 \par
00415             Option<bool> removeAll = {\cf17 new} Option<bool>({\cf22 "--all"}, {\cf22 "Removes all installed wordlists"});\par
00416             removeAll.AddAlias({\cf22 "-a"});\par
00417 \par
00418             Argument<string[]> removeIds = {\cf17 new} Argument<string[]>({\cf22 "wordlist"}, {\cf22 "Id of wordlists to remove, list of all installed wordlists could be found by --list option"})\par
00419             \{\par
00420                 HelpName = {\cf22 "id"}\par
00421             \};\par
00422 \par
00423             Command wlRemCmd = {\cf17 new} Command({\cf22 "remove"}, {\cf22 "Removes installed wordlists"})\par
00424             \{\par
00425                 removeList,\par
00426                 removeAll,\par
00427                 removeIds\par
00428             \};\par
00429 \par
00430             wlRemCmd.AddAlias({\cf22 "r"});\par
00431 \par
00432             wlRemCmd.SetHandler((globalOptionsT, removeListT, removeAllT, removeIdsT) =>\par
00433             \{\par
00434                 Wordlist.RemoveSessionHost sessionHost = {\cf17 new} Wordlist.RemoveSessionHost(globalOptionsT, removeListT, removeAllT, removeIdsT);\par
00435                 Context.NewSessionHost(sessionHost);\par
00436             \}, globalOptionsBinder, removeList, removeAll, removeIds);\par
00437 \par
00438             wlCmd.AddCommand(wlRemCmd);\par
00439 \par
00440             Option<string> importId = {\cf17 new} Option<string>({\cf22 "--id"}, {\cf22 "Determines the wordlist's unique id"});\par
00441             importId.AddAlias({\cf22 "-i"});\par
00442             importId.IsRequired = {\cf17 true};\par
00443 \par
00444             Option<bool> importEnforce = {\cf17 new} Option<bool>({\cf22 "--enforce"}, {\cf22 "Determines enforcement status of the wordlist. if it's true, it will block any operations if the word is found in the wordlist, but if set to false, it just shows a warning"});\par
00445             importEnforce.AddAlias({\cf22 "-e"});\par
00446 \par
00447             Argument<string> importFile = {\cf17 new} Argument<string>({\cf22 "file"}, {\cf22 "The text file to import"});\par
00448 \par
00449             Command wlImpCmd = {\cf17 new} Command({\cf22 "import"}, {\cf22 "Compiles and imports given file as wordlist"})\par
00450             \{\par
00451                 importId,\par
00452                 importEnforce,\par
00453                 doOptimize,\par
00454                 importFile\par
00455             \};\par
00456 \par
00457             wlImpCmd.SetHandler((globalOptionsT, importIdT, importEnforceT, doOptimizeT, importFileT) =>\par
00458             \{\par
00459                 Wordlist.ImportSessionHost sessionHost = {\cf17 new} Wordlist.ImportSessionHost(globalOptionsT, importIdT, importEnforceT, doOptimizeT, importFileT);\par
00460                 Context.NewSessionHost(sessionHost);\par
00461             \}, globalOptionsBinder, importId, importEnforce, doOptimize, importFile);\par
00462 \par
00463             wlCmd.AddCommand(wlImpCmd);\par
00464 \par
00465             {\cf19 return} wlCmd;\par
00466         \}\par
00467 \par
00468         {\cf17 private} {\cf17 static} GlobalOptionsBinder GetGlobalOptions(RootCommand root)\par
00469         \{\par
00470             Option<bool> verbose = {\cf17 new} Option<bool>({\cf22 "--verbose"}, {\cf22 "Shows more detailed informations in console output"});\par
00471             verbose.AddAlias({\cf22 "-v"});\par
00472             root.AddGlobalOption(verbose);\par
00473 \par
00474             Option<bool> quiet = {\cf17 new} Option<bool>({\cf22 "--quiet"}, {\cf22 "Prevents showing output in console. Only errors and crashes will be shown."});\par
00475             quiet.AddAlias({\cf22 "-q"});\par
00476             root.AddGlobalOption(quiet);\par
00477 \par
00478             Option<bool> noColor = {\cf17 new} Option<bool>({\cf22 "--no-color"}, {\cf22 "Disables showing messages with colors"});\par
00479             root.AddGlobalOption(noColor);\par
00480 \par
00481             GlobalOptionsBinder globalOptionsBinder = {\cf17 new} GlobalOptionsBinder(verbose, quiet, noColor);\par
00482 \par
00483             {\cf19 return} globalOptionsBinder;\par
00484         \}\par
00485     \}\par
00486 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RandomSubset.cs File Reference\par \pard\plain 
{\tc\tcl2 \v RandomSubset.cs}
{\xe \v RandomSubset.cs}
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Extensions}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RandomSubset.cs\par \pard\plain 
{\tc\tcl2 \v RandomSubset.cs}
{\xe \v RandomSubset.cs}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #region License and Terms}\par
00002 {\cf20 // MoreLINQ - Extensions to LINQ to Objects}\par
00003 {\cf20 // Copyright (c) 2010 Leopold Bushkin. All rights reserved.}\par
00004 {\cf20 //}\par
00005 {\cf20 // Licensed under the Apache License, Version 2.0 (the "License");}\par
00006 {\cf20 // you may not use this file except in compliance with the License.}\par
00007 {\cf20 // You may obtain a copy of the License at}\par
00008 {\cf20 //}\par
00009 {\cf20 //     http://www.apache.org/licenses/LICENSE-2.0}\par
00010 {\cf20 //}\par
00011 {\cf20 // Unless required by applicable law or agreed to in writing, software}\par
00012 {\cf20 // distributed under the License is distributed on an "AS IS" BASIS,}\par
00013 {\cf20 // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.}\par
00014 {\cf20 // See the License for the specific language governing permissions and}\par
00015 {\cf20 // limitations under the License.}\par
00016 {\cf21 #endregion}\par
00017 \par
00018 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00019 \{\par
00020     {\cf17 internal} {\cf17 static} {\cf17 partial class }Extensions\par
00021     \{\par
00033 \par
00034         {\cf17 public} {\cf17 static} IEnumerable<T> RandomSubset<T>({\cf17 this} IEnumerable<T> source, {\cf18 int} subsetSize) => RandomSubset(source, subsetSize, _crng);\par
00035 \par
00050 \par
00051         {\cf17 public} {\cf17 static} IEnumerable<T> RandomSubset<T>({\cf17 this} IEnumerable<T> source, {\cf18 int} subsetSize, Random rand)\par
00052         \{\par
00053             {\cf19 if} (rand == {\cf17 null}) {\cf19 throw} {\cf17 new} ArgumentNullException(nameof(rand));\par
00054             {\cf19 if} (source == {\cf17 null}) {\cf19 throw} {\cf17 new} ArgumentNullException(nameof(source));\par
00055 \par
00056             {\cf20 /* Unmerged change from project 'Kryptor.Cli (net6.0)'}\par
00057 {\cf20             Before:}\par
00058 {\cf20                         if (subsetSize < 0) throw new ArgumentOutOfRangeException(nameof(subsetSize));}\par
00059 {\cf20 }\par
00060 {\cf20                         return RandomSubsetImpl(source, rand, subsetSize);}\par
00061 {\cf20             After:}\par
00062 {\cf20                         if (subsetSize < 0) throw new ArgumentOutOfRangeException(nameof(subsetSize)) : RandomSubsetImpl(source, rand, subsetSize);}\par
00063 {\cf20             */}\par
00064 \par
00065             {\cf20 /* Unmerged change from project 'Kryptor.Cli.Legacy (net481)'}\par
00066 {\cf20             Before:}\par
00067 {\cf20                         if (subsetSize < 0) throw new ArgumentOutOfRangeException(nameof(subsetSize));}\par
00068 {\cf20 }\par
00069 {\cf20                         return RandomSubsetImpl(source, rand, subsetSize);}\par
00070 {\cf20             After:}\par
00071 {\cf20                         if (subsetSize < 0) throw new ArgumentOutOfRangeException(nameof(subsetSize)) : RandomSubsetImpl(source, rand, subsetSize);}\par
00072 {\cf20             */}\par
00073 \par
00074             {\cf20 /* Unmerged change from project 'Kryptor.Cli.Legacy (net462)'}\par
00075 {\cf20             Before:}\par
00076 {\cf20                         if (subsetSize < 0) throw new ArgumentOutOfRangeException(nameof(subsetSize));}\par
00077 {\cf20 }\par
00078 {\cf20                         return RandomSubsetImpl(source, rand, subsetSize);}\par
00079 {\cf20             After:}\par
00080 {\cf20                         if (subsetSize < 0) throw new ArgumentOutOfRangeException(nameof(subsetSize)) : RandomSubsetImpl(source, rand, subsetSize);}\par
00081 {\cf20             */}\par
00082 \par
00083             {\cf20 /* Unmerged change from project 'Kryptor.Cli.Legacy (net472)'}\par
00084 {\cf20             Before:}\par
00085 {\cf20                         if (subsetSize < 0) throw new ArgumentOutOfRangeException(nameof(subsetSize));}\par
00086 {\cf20 }\par
00087 {\cf20                         return RandomSubsetImpl(source, rand, subsetSize);}\par
00088 {\cf20             After:}\par
00089 {\cf20                         if (subsetSize < 0) throw new ArgumentOutOfRangeException(nameof(subsetSize)) : RandomSubsetImpl(source, rand, subsetSize);}\par
00090 {\cf20             */}\par
00091 \par
00092             {\cf20 /* Unmerged change from project 'Kryptor.Cli.Native (net8.0)'}\par
00093 {\cf20             Before:}\par
00094 {\cf20                         if (subsetSize < 0) throw new ArgumentOutOfRangeException(nameof(subsetSize));}\par
00095 {\cf20 }\par
00096 {\cf20                         return RandomSubsetImpl(source, rand, subsetSize);}\par
00097 {\cf20             After:}\par
00098 {\cf20                         if (subsetSize < 0) throw new ArgumentOutOfRangeException(nameof(subsetSize)) : RandomSubsetImpl(source, rand, subsetSize);}\par
00099 {\cf20             */}\par
00100             {\cf19 return} subsetSize < 0 ? {\cf19 throw} {\cf17 new} ArgumentOutOfRangeException(nameof(subsetSize)) : RandomSubsetImpl(source, rand, subsetSize);\par
00101         \}\par
00102 \par
00103         {\cf17 private} {\cf17 static} IEnumerable<T> RandomSubsetImpl<T>(IEnumerable<T> source, Random rand, {\cf18 int}? subsetSize)\par
00104         \{\par
00105             {\cf20 // The simplest and most efficient way to return a random subset is to perform}\par
00106             {\cf20 // an in-place, partial Fisher-Yates shuffle of the sequence. While we could do}\par
00107             {\cf20 // a full shuffle, it would be wasteful in the cases where subsetSize is shorter}\par
00108             {\cf20 // than the length of the sequence.}\par
00109             {\cf20 // See: http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle}\par
00110 \par
00111             T[] array = source.ToArray();\par
00112             subsetSize ??= array.Length;\par
00113 \par
00114             {\cf19 if} (array.Length < subsetSize)\par
00115             \{\par
00116                 {\cf20 // TODO Throw InvalidOperationException instead?}\par
00117                 {\cf19 throw} {\cf17 new} ArgumentOutOfRangeException(nameof(subsetSize),\par
00118                     {\cf22 "Subset size must be less than or equal to the source length."});\par
00119             \}\par
00120 \par
00121             {\cf18 int} m = 0;                {\cf20 // keeps track of count items shuffled}\par
00122             {\cf18 int} w = array.Length;     {\cf20 // upper bound of shrinking swap range}\par
00123             {\cf18 int} g = w - 1;            {\cf20 // used to compute the second swap index}\par
00124 \par
00125             {\cf20 // perform in-place, partial Fisher-Yates shuffle}\par
00126             {\cf19 while} (m < subsetSize)\par
00127             \{\par
00128                 {\cf18 int} k = g - rand.Next(w);\par
00129                 (array[k], array[m]) = (array[m], array[k]);\par
00130                 ++m;\par
00131                 --w;\par
00132             \}\par
00133 \par
00134             {\cf20 // yield the random subset as a new sequence}\par
00135             {\cf19 for} ({\cf18 int} i = 0; i < subsetSize; i++)\par
00136                 yield {\cf19 return} array[i];\par
00137         \}\par
00138     \}\par
00139 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SchemaJsonConverter.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SchemaJsonConverter.cs}
{\xe \v SchemaJsonConverter.cs}
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.SchemaJsonConverter}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SchemaJsonConverter.cs\par \pard\plain 
{\tc\tcl2 \v SchemaJsonConverter.cs}
{\xe \v SchemaJsonConverter.cs}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 \par
00003 {\cf17 using }Newtonsoft.Json;\par
00004 {\cf17 using }Newtonsoft.Json.Linq;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00007 \{\par
00008     {\cf17 public} {\cf17 class }SchemaJsonConverter : JsonConverter\par
00009     \{\par
00010         {\cf17 private} readonly {\cf18 string} _schemaUrl;\par
00011 \par
00012         {\cf17 public} SchemaJsonConverter({\cf18 string} schemaUrl) => _schemaUrl = schemaUrl;\par
00013 \par
00014         {\cf17 public} {\cf17 override} {\cf18 void} WriteJson(JsonWriter writer, {\cf18 object} value, JsonSerializer serializer)\par
00015         \{\par
00016             {\cf19 try}\par
00017             \{\par
00018                 JsonSerializerSettings settings = {\cf17 new} JsonSerializerSettings\par
00019                 \{\par
00020                     Formatting = Formatting.Indented,\par
00021                     NullValueHandling = NullValueHandling.Ignore,\par
00022                     ReferenceLoopHandling = ReferenceLoopHandling.Ignore\par
00023                 \};\par
00024 \par
00025                 JObject obj = JObject.FromObject(value, JsonSerializer.Create(settings));\par
00026                 obj.AddFirst({\cf17 new} JProperty({\cf22 "$schema"}, _schemaUrl));\par
00027                 obj.WriteTo(writer);\par
00028             \}\par
00029             {\cf19 catch} (Exception ex)\par
00030             \{\par
00031                 Console.WriteLine(${\cf22 "Error during serialization: \{ex.Message\}"});\par
00032                 {\cf19 throw};\par
00033             \}\par
00034         \}\par
00035 \par
00036         {\cf17 public} {\cf17 override} {\cf18 object} ReadJson(JsonReader reader, Type objectType, {\cf18 object} existingValue, JsonSerializer serializer) => {\cf19 throw} {\cf17 new} NotImplementedException();\par
00037 \par
00038         {\cf17 public} {\cf17 override} {\cf18 bool} CanConvert(Type objectType) => {\cf17 true};\par
00039 \par
00040         {\cf17 public} {\cf17 override} {\cf18 bool} CanRead => {\cf17 false};\par
00041     \}\par
00042 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CompileSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CompileSession.cs}
{\xe \v CompileSession.cs}
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Wordlist.CompileSession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.Wordlist}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CompileSession.cs\par \pard\plain 
{\tc\tcl2 \v CompileSession.cs}
{\xe \v CompileSession.cs}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Text;\par
00002 {\cf17 using }System.Text.RegularExpressions;\par
00003 \par
00004 {\cf17 using }SAPTeam.Kryptor.Client;\par
00005 {\cf17 using }SAPTeam.Kryptor.Client.Security;\par
00006 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00007 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00008 \par
00009 {\cf17 namespace }SAPTeam.Kryptor.Cli.Wordlist\par
00010 \{\par
00011     {\cf17 public} {\cf17 class }CompileSession : Session\par
00012     \{\par
00013         {\cf17 private} {\cf18 bool} cleaned;\par
00014         {\cf17 private} Dictionary<int, FileStream> fileStreams = {\cf17 new} Dictionary<int, FileStream>();\par
00015         {\cf17 private} Dictionary<int, string> lookupStrings = {\cf17 new} Dictionary<int, string>();\par
00016         {\cf17 private} readonly Regex regex = {\cf17 new} Regex({\cf22 @"[^\\x20-\\x7E]"});\par
00017         {\cf17 private} HashSet<string> uniqueLines = {\cf17 new} HashSet<string>();\par
00018 \par
00019         {\cf17 public} {\cf18 string} FilePath;\par
00020         {\cf17 public} {\cf18 string} DestPath;\par
00021 \par
00022         {\cf17 public} WordlistIndexEntry IndexEntry;\par
00023         {\cf17 private} readonly {\cf18 bool} Indexing;\par
00024         {\cf17 private} readonly {\cf18 bool} Importing;\par
00025         {\cf17 private} readonly {\cf18 bool} Optimize;\par
00026 \par
00027         {\cf17 public} CompileSession({\cf18 string} path, {\cf18 string} destination, WordlistIndexEntry entry, {\cf18 bool} optimize, {\cf18 bool} indexing, {\cf18 bool} importing)\par
00028         \{\par
00029             {\cf19 if} (indexing || !importing)\par
00030             \{\par
00031                 Description = ${\cf22 "\{entry.Id\}: Waiting for download"};\par
00032             \}\par
00033 \par
00034             FilePath = path;\par
00035             DestPath = destination;\par
00036 \par
00037             IndexEntry = entry;\par
00038 \par
00039             Indexing = indexing;\par
00040             Importing = importing;\par
00041 \par
00042             Optimize = optimize;\par
00043         \}\par
00044 \par
00045         {\cf17 protected} {\cf17 override} async Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00046         \{\par
00047             {\cf19 try}\par
00048             \{\par
00049                 SessionHost installer = PreCheck(sessionHost);\par
00050 \par
00051                 Description = ${\cf22 "Importing \{IndexEntry.Id\}"};\par
00052 \par
00053                 await Compile(cancellationToken);\par
00054 \par
00055                 Progress = 100;\par
00056                 Description = ${\cf22 "Imported \{IndexEntry.Id\} wordlist"};\par
00057 \par
00058                 IndexEntry.Optimized = Optimize;\par
00059                 {\cf19 if} (!Indexing)\par
00060                 \{\par
00061                     IndexEntry.InstallDirectory = DestPath;\par
00062 \par
00063                     {\cf19 if} (fileStreams.Count > 0 && lookupStrings.Count > 0 && fileStreams.Count == lookupStrings.Count)\par
00064                     \{\par
00065                         Description = {\cf22 "Adding verification metadata"};\par
00066                         AddVerificationMetadata();\par
00067                     \}\par
00068                 \}\par
00069 \par
00070                 installer.FinalizeInstallation(IndexEntry);\par
00071 \par
00072                 Description = Indexing ? ${\cf22 "\{IndexEntry.Id\} Indexed"} : ${\cf22 "\{IndexEntry.Id\} Installed"};\par
00073             \}\par
00074             {\cf19 catch}\par
00075             \{\par
00076                 Cleanup({\cf17 true});\par
00077                 {\cf19 throw};\par
00078             \}\par
00079             {\cf19 finally}\par
00080             \{\par
00081                 Cleanup({\cf17 false});\par
00082             \}\par
00083 \par
00084             {\cf19 return} {\cf17 true};\par
00085         \}\par
00086 \par
00087         {\cf17 private} {\cf18 bool} TryAddLine({\cf18 string} line) => !Optimize || uniqueLines.Add(line);\par
00088 \par
00089         {\cf17 private} {\cf18 void} Cleanup({\cf18 bool} deleteInstallation)\par
00090         \{\par
00091             {\cf19 if} (cleaned) {\cf19 return};\par
00092             cleaned = {\cf17 true};\par
00093 \par
00094             uniqueLines.Clear();\par
00095             uniqueLines = {\cf17 null};\par
00096 \par
00097             {\cf19 foreach} (FileStream f {\cf19 in} fileStreams.Values)\par
00098             \{\par
00099                 f.Flush();\par
00100                 f.Dispose();\par
00101             \}\par
00102 \par
00103             fileStreams.Clear();\par
00104             fileStreams = {\cf17 null};\par
00105 \par
00106             lookupStrings.Clear();\par
00107             lookupStrings = {\cf17 null};\par
00108 \par
00109 {\cf21 #if !LIGHT}\par
00110             Dependencies.OfType<DownloadSession>().ForEach(x => x.DeleteCache());\par
00111 {\cf21 #endif}\par
00112 \par
00113             {\cf19 if} (Directory.Exists(DestPath) && (deleteInstallation || Directory.GetFiles(DestPath).Length == 0))\par
00114             \{\par
00115                 Directory.Delete(DestPath, {\cf17 true});\par
00116             \}\par
00117         \}\par
00118 \par
00119         {\cf17 private} async Task Compile(CancellationToken cancellationToken)\par
00120         \{\par
00121             {\cf18 long} lines = 0;\par
00122             {\cf18 long} words = 0;\par
00123 \par
00124             {\cf17 using} (StreamReader streamReader = {\cf17 new} StreamReader(FilePath, Encoding.UTF8))\par
00125             \{\par
00126                 {\cf18 double} steps = 1.0 / streamReader.BaseStream.Length * 100;\par
00127 \par
00128                 {\cf18 long} readChars = 0;\par
00129                 {\cf18 string} line;\par
00130                 {\cf19 while} ((line = await AsyncCompat.ReadLineAsync(streamReader)) != {\cf17 null})\par
00131                 \{\par
00132                     cancellationToken.ThrowIfCancellationRequested();\par
00133                     readChars += line.Length;\par
00134                     lines++;\par
00135 \par
00136                     Progress = readChars * steps;\par
00137 \par
00138                     line = line.Trim();\par
00139 \par
00140                     {\cf19 if} ({\cf18 string}.IsNullOrEmpty(line) || line.Length < 4 || !TryAddLine(line) || regex.IsMatch(line)) {\cf19 continue};\par
00141 \par
00142                     {\cf18 byte}[] data = Encoding.UTF8.GetBytes(line + {\cf22 "\\n"});\par
00143                     words++;\par
00144 \par
00145                     {\cf19 if} (!Indexing)\par
00146                     \{\par
00147                         {\cf18 int} c = WordlistFragmentCollection.GetWordIdentifier(line);\par
00148                         {\cf19 if} (!fileStreams.ContainsKey(c))\par
00149                         \{\par
00150                             lookupStrings[c] = line;\par
00151                             fileStreams[c] = File.Open(Path.Combine(DestPath, c.ToString()), FileMode.Create, FileAccess.ReadWrite);\par
00152                         \}\par
00153 \par
00154                         fileStreams[c].Write(data, 0, data.Length);\par
00155                     \}\par
00156                 \}\par
00157             \}\par
00158 \par
00159             IndexEntry.Words = words;\par
00160             IndexEntry.Lines = lines;\par
00161         \}\par
00162 \par
00163         {\cf17 private} {\cf18 void} AddVerificationMetadata()\par
00164         \{\par
00165             List<WordlistVerificationMetadata> metadata = {\cf17 new} List<WordlistVerificationMetadata>();\par
00166 \par
00167             {\cf19 foreach} (KeyValuePair<int, FileStream> f {\cf19 in} fileStreams)\par
00168             \{\par
00169                 metadata.Add({\cf17 new} WordlistVerificationMetadata()\par
00170                 \{\par
00171                     FragmentId = f.Key,\par
00172                     LookupString = lookupStrings[f.Key],\par
00173                     Checksum = Utilities.XOR(IndexEntry.Hash, f.Value.Sha256())\par
00174                 \});\par
00175             \}\par
00176 \par
00177             {\cf18 string} mJson = Utilities.ClientTypesJsonWorker.ToJson(metadata);\par
00178             {\cf18 byte}[] mEncode = Encoding.UTF8.GetBytes(mJson);\par
00179 \par
00180             File.WriteAllBytes(Path.Combine(IndexEntry.InstallDirectory, {\cf22 "metadata.json"}), mEncode);\par
00181         \}\par
00182 \par
00183         {\cf17 private} SessionHost PreCheck(ISessionHost sessionHost)\par
00184         \{\par
00185             SessionHost installSessionHost = sessionHost is SessionHost ish\par
00186                 ? ish\par
00187                 : {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "This session started from an unknown session host. you may start this session only via wordlists's SessionHost"});\par
00188             {\cf19 if} (!File.Exists(FilePath))\par
00189             \{\par
00190                 {\cf19 throw} {\cf17 new} FileNotFoundException(FilePath);\par
00191             \}\par
00192 \par
00193             {\cf19 if} (Directory.Exists(DestPath))\par
00194             \{\par
00195                 Directory.Delete(DestPath, {\cf17 true});\par
00196             \}\par
00197 \par
00198             Directory.CreateDirectory(DestPath);\par
00199 \par
00200             {\cf19 return} installSessionHost;\par
00201         \}\par
00202     \}\par
00203 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DownloadSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v DownloadSession.cs}
{\xe \v DownloadSession.cs}
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Wordlist.DownloadSession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.Wordlist}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DownloadSession.cs\par \pard\plain 
{\tc\tcl2 \v DownloadSession.cs}
{\xe \v DownloadSession.cs}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Net;\par
00002 {\cf17 using }System.Text;\par
00003 {\cf17 using }System.Text.Json;\par
00004 {\cf17 using }System.Text.Json.Serialization;\par
00005 \par
00006 {\cf17 using }Downloader;\par
00007 \par
00008 {\cf17 using }SAPTeam.Kryptor.Client;\par
00009 {\cf17 using }SAPTeam.Kryptor.Client.Security;\par
00010 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00011 {\cf17 using }SAPTeam.Kryptor.Generators;\par
00012 \par
00013 {\cf17 using }SharpCompress.Archives;\par
00014 {\cf17 using }SharpCompress.Archives.SevenZip;\par
00015 {\cf17 using }SharpCompress.Readers;\par
00016 \par
00017 {\cf17 namespace }SAPTeam.Kryptor.Cli.Wordlist\par
00018 \{\par
00019     {\cf17 public} {\cf17 class }DownloadSession : Session\par
00020     \{\par
00021         {\cf17 private} readonly WordlistIndexEntry IndexEntry;\par
00022         {\cf17 private} CancellationToken CancellationToken;\par
00023         {\cf17 private} readonly DownloadConfiguration Configuration;\par
00024         {\cf17 private} readonly DownloadService Downloader;\par
00025         {\cf17 private} readonly JsonWorker JsonWorker;\par
00026 \par
00027         {\cf17 public} FileInfo OutputFile;\par
00028         {\cf17 public} FileInfo PackageFile;\par
00029         {\cf17 public} {\cf18 string} HashString;\par
00030 \par
00031         {\cf17 public} DownloadSession(WordlistIndexEntry entry, DirectoryInfo outputPath) : this(entry, new FileInfo(Path.Combine(outputPath.FullName, entry.Id + {\cf22 ".txt"})))\par
00032         \{\par
00033 \par
00034         \}\par
00035 \par
00036         {\cf17 public} DownloadSession(WordlistIndexEntry entry, FileInfo output)\par
00037         \{\par
00038             IndexEntry = entry;\par
00039             OutputFile = output;\par
00040             HashString = BitConverter.ToString(IndexEntry.Hash ?? Encoding.UTF8.GetBytes(IndexEntry.Uri.ToString()).Sha256()).Replace({\cf22 "-"}, {\cf22 ""}).ToLower();\par
00041 \par
00042             OutputFile.Directory.Create();\par
00043             PackageFile = {\cf17 new} FileInfo(Path.Combine(OutputFile.Directory.FullName, ${\cf22 "package-\{IndexEntry.Id\}-\{HashString.Substring(0, 6)\}.json"}));\par
00044 \par
00045             JsonSerializerOptions jOptions = {\cf17 new} JsonSerializerOptions()\par
00046             \{\par
00047                 WriteIndented = {\cf17 false},\par
00048                 DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingDefault\par
00049             \};\par
00050 \par
00051 {\cf21 #if NET6_0_OR_GREATER}\par
00052             JsonWorker = {\cf17 new} JsonWorker({\cf17 null}, SourceGenerationPackageContext.Default);\par
00053 {\cf21 #else}\par
00054             JsonWorker = {\cf17 new} JsonWorker(jOptions, {\cf17 null});\par
00055 {\cf21 #endif}\par
00056 \par
00057             Description = ${\cf22 "\{entry.Id\}: Initializing download"};\par
00058 \par
00059             Configuration = {\cf17 new} DownloadConfiguration()\par
00060             \{\par
00061                 {\cf20 // file parts to download, the default value is 1}\par
00062                 ChunkCount = 4,\par
00063                 {\cf20 // the maximum number of times to fail}\par
00064                 MaxTryAgainOnFailover = 8,\par
00065                 {\cf20 // release memory buffer after each 50 MB}\par
00066                 MaximumMemoryBufferBytes = 1024 * 1024 * 64,\par
00067                 {\cf20 // download parts of the file as parallel or not. The default value is false}\par
00068                 ParallelDownload = {\cf17 true},\par
00069                 {\cf20 // number of parallel downloads. The default value is the same as the chunk count}\par
00070                 ParallelCount = 2,\par
00071                 {\cf20 // timeout (millisecond) per stream block reader, default values is 1000}\par
00072                 Timeout = 5000,\par
00073                 {\cf20 // clear package chunks data when download completed with failure, default value is false}\par
00074                 ClearPackageOnCompletionWithFailure = {\cf17 false},\par
00075                 {\cf20 // minimum size of chunking to download a file in multiple parts, the default value is 512}\par
00076                 MinimumSizeOfChunking = 1024 * 1024,\par
00077                 {\cf20 // Before starting the download, reserve the storage space of the file as file size, the default value is false}\par
00078                 ReserveStorageSpaceBeforeStartingDownload = {\cf17 true},\par
00079                 {\cf20 // config and customize request headers}\par
00080                 RequestConfiguration =\par
00081                 \{\par
00082                     Accept = {\cf22 "*/*"},\par
00083                     KeepAlive = {\cf17 true}, {\cf20 // default value is false}\par
00084                     ProtocolVersion = HttpVersion.Version11, {\cf20 // default value is HTTP 1.1}\par
00085                     UseDefaultCredentials = {\cf17 false},\par
00086                     {\cf20 // your custom user agent or your_app_name/app_version.}\par
00087                     UserAgent = {\cf22 "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"},\par
00088                 \}\par
00089             \};\par
00090 \par
00091             Downloader = {\cf17 new} DownloadService(Configuration);\par
00092             Downloader.DownloadProgressChanged += UpdateProgress;\par
00093             Downloader.DownloadFileCompleted += SetEndStatus;\par
00094 \par
00095             Description = ${\cf22 "\{entry.Id\}: Ready"};\par
00096         \}\par
00097 \par
00098         {\cf17 private} {\cf18 void} SetEndStatus({\cf18 object} sender, System.ComponentModel.AsyncCompletedEventArgs e)\par
00099         \{\par
00100             {\cf19 if} (e.Error != {\cf17 null})\par
00101             \{\par
00102                 File.WriteAllText(PackageFile.FullName, JsonWorker.ToJson(Downloader.Package));\par
00103                 Exception = e.Error;\par
00104             \}\par
00105             {\cf19 else}\par
00106             \{\par
00107                 IndexEntry.Size = Downloader.Package.TotalFileSize;\par
00108 \par
00109                 Progress = -1;\par
00110 \par
00111                 Description = ${\cf22 "\{IndexEntry.Id\}: Verifying file"};\par
00112 \par
00113                 VerifyHash(File.OpenRead(Downloader.Package.FileName), CancellationToken);\par
00114 \par
00115                 {\cf19 if} (IndexEntry.Compressed)\par
00116                 \{\par
00117                     Description = ${\cf22 "\{IndexEntry.Id\}: Extracting file"};\par
00118                     {\cf18 string} fileName = {\cf17 new} Request(IndexEntry.Uri.ToString()).GetFileName().Result;\par
00119 \par
00120                     {\cf19 if} (fileName.ToLower().EndsWith({\cf22 ".7z"}))\par
00121                     \{\par
00122                         SevenZipArchive reader = SevenZipArchive.Open(Downloader.Package.FileName);\par
00123                         reader.Entries.First().WriteToFile(OutputFile.FullName);\par
00124                         reader.Dispose();\par
00125                     \}\par
00126                     {\cf19 else}\par
00127                     \{\par
00128                         IReader reader = ReaderFactory.Open(File.OpenRead(Downloader.Package.FileName));\par
00129                         reader.MoveToNextEntry();\par
00130                         reader.WriteEntryTo(OutputFile);\par
00131                         reader.Dispose();\par
00132                     \}\par
00133                 \}\par
00134                 {\cf19 else}\par
00135                 \{\par
00136                     {\cf19 if} (File.Exists(OutputFile.FullName))\par
00137                     \{\par
00138                         OutputFile.Delete();\par
00139                     \}\par
00140 \par
00141                     File.Move(Downloader.Package.FileName, OutputFile.FullName);\par
00142                 \}\par
00143 \par
00144                 {\cf19 if} (File.Exists(Downloader.Package.FileName))\par
00145                 \{\par
00146                     File.Delete(Downloader.Package.FileName);\par
00147                 \}\par
00148 \par
00149                 Progress = 100;\par
00150 \par
00151                 Description = ${\cf22 "\{IndexEntry.Id\}: Download completed"};\par
00152             \}\par
00153         \}\par
00154 \par
00155         {\cf17 private} {\cf18 void} UpdateProgress({\cf18 object} sender, Downloader.DownloadProgressChangedEventArgs e)\par
00156         \{\par
00157             Progress = e.ProgressPercentage;\par
00158             Description = ${\cf22 "\{IndexEntry.Id\}: \{Utilities.ConvertBytes(e.ReceivedBytesSize)\}/\{Utilities.ConvertBytes(e.TotalBytesToReceive)\}"};\par
00159             {\cf19 if} (e.AverageBytesPerSecondSpeed > 1024 * 100)\par
00160             \{\par
00161                 Description += ${\cf22 "   \{Utilities.ConvertBytes((long)e.AverageBytesPerSecondSpeed)\}/s"};\par
00162             \}\par
00163         \}\par
00164 \par
00165         {\cf17 protected} {\cf17 override} async Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00166         \{\par
00167             CancellationToken = cancellationToken;\par
00168             Description = ${\cf22 "\{IndexEntry.Id\}: Starting download"};\par
00169 \par
00170             {\cf19 if} (File.Exists(PackageFile.FullName))\par
00171             \{\par
00172                 DownloadPackage {\cf17 package }= JsonWorker.ReadJson<DownloadPackage>(File.ReadAllText(PackageFile.FullName));\par
00173                 PackageFile.Delete();\par
00174 \par
00175                 await Downloader.DownloadFileTaskAsync(package, cancellationToken);\par
00176             \}\par
00177             {\cf19 else}\par
00178             \{\par
00179                 var dest = Utilities.EnsureDirectoryExists(Path.Combine(Path.GetTempPath(), Path.GetRandomFileName()));\par
00180 \par
00181                 var tempFile = Path.Combine(dest, HashString);\par
00182 \par
00183                 await Downloader.DownloadFileTaskAsync(IndexEntry.Uri.OriginalString, tempFile, cancellationToken);\par
00184             \}\par
00185 \par
00186             Downloader.Dispose();\par
00187 \par
00188             {\cf19 return} Exception != {\cf17 null} ? {\cf19 throw} Exception : {\cf17 true};\par
00189         \}\par
00190 \par
00191         {\cf17 public} {\cf18 void} DeleteCache()\par
00192         \{\par
00193             {\cf19 if} (File.Exists(OutputFile.FullName))\par
00194             \{\par
00195                 OutputFile.Delete();\par
00196             \}\par
00197 \par
00198             {\cf19 if} (OutputFile.Directory.GetFiles().Length == 0)\par
00199             \{\par
00200                 OutputFile.Directory.Delete();\par
00201             \}\par
00202         \}\par
00203 \par
00204         {\cf17 private} {\cf18 void} VerifyHash(Stream stream, CancellationToken cancellationToken)\par
00205         \{\par
00206             {\cf19 try}\par
00207             \{\par
00208                 {\cf18 byte}[] hash = stream.Sha256();\par
00209 \par
00210                 {\cf19 if} (IndexEntry.Hash == {\cf17 null})\par
00211                 \{\par
00212                     IndexEntry.Hash = hash;\par
00213                 \}\par
00214                 {\cf19 else}\par
00215                 \{\par
00216                     {\cf19 if} (!IndexEntry.Hash.SequenceEqual(hash))\par
00217                     \{\par
00218                         {\cf19 throw} {\cf17 new} InvalidDataException({\cf22 "File is corrupted"});\par
00219                     \}\par
00220                 \}\par
00221             \}\par
00222             {\cf19 catch} (InvalidDataException)\par
00223             \{\par
00224                 stream?.Dispose();\par
00225                 {\cf19 throw};\par
00226             \}\par
00227             {\cf19 catch}\par
00228             \{\par
00229                 {\cf20 // Ignore hash errors}\par
00230             \}\par
00231             {\cf19 finally}\par
00232             \{\par
00233                 stream?.Dispose();\par
00234             \}\par
00235         \}\par
00236     \}\par
00237 \par
00238 {\cf21 #if NET6_0_OR_GREATER}\par
00239     [JsonSourceGenerationOptions(GenerationMode = JsonSourceGenerationMode.Metadata, WriteIndented = {\cf17 false}, DefaultIgnoreCondition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]\par
00240     [JsonSerializable(typeof(DownloadPackage))]\par
00241     {\cf17 internal} {\cf17 partial class }SourceGenerationPackageContext : JsonSerializerContext\par
00242     \{\par
00243     \}\par
00244 {\cf21 #endif}\par
00245 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ImportSessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v ImportSessionHost.cs}
{\xe \v ImportSessionHost.cs}
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Wordlist.ImportSessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.Wordlist}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ImportSessionHost.cs\par \pard\plain 
{\tc\tcl2 \v ImportSessionHost.cs}
{\xe \v ImportSessionHost.cs}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 {\cf17 using }SAPTeam.Kryptor.Client.Security;\par
00003 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00004 \par
00005 {\cf17 namespace }SAPTeam.Kryptor.Cli.Wordlist\par
00006 \{\par
00007     {\cf17 public} {\cf17 class }ImportSessionHost : SessionHost\par
00008     \{\par
00009         {\cf17 private} readonly WordlistIndexEntry IndexEntry;\par
00010         {\cf17 private} readonly {\cf18 string} FilePath;\par
00011         {\cf17 private} readonly {\cf18 bool} Optimize;\par
00012 \par
00013         {\cf17 public} ImportSessionHost(GlobalOptions globalOptions, {\cf18 string} {\cf18 id}, {\cf18 bool} enforce, {\cf18 bool} optimize, {\cf18 string} file) : base(globalOptions)\par
00014         \{\par
00015             IndexEntry = {\cf17 new} WordlistIndexEntry()\par
00016             \{\par
00017                 Id = id,\par
00018                 Enforced = enforce\par
00019             \};\par
00020 \par
00021             Optimize = optimize;\par
00022 \par
00023             FilePath = file;\par
00024         \}\par
00025 \par
00026         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00027         \{\par
00028             base.Start(context);\par
00029 \par
00030             {\cf17 using} (FileStream f = File.OpenRead(FilePath))\par
00031             \{\par
00032                 IndexEntry.Size = f.Length;\par
00033 \par
00034                 IndexEntry.Hash = f.Sha256();\par
00035             \}\par
00036 \par
00037             {\cf19 if} (GetInstallationPermission(IndexEntry))\par
00038             \{\par
00039                 CompileSession compiler = {\cf17 new} CompileSession(FilePath, Path.Combine(Program.Context.WordlistDirectory, IndexEntry.Id), IndexEntry, optimize: Optimize, indexing: {\cf17 false}, importing: {\cf17 true});\par
00040                 NewSession(compiler);\par
00041 \par
00042                 ShowProgressMonitored({\cf17 true}).Wait();\par
00043 \par
00044                 SortIndex();\par
00045             \}\par
00046         \}\par
00047     \}\par
00048 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IndexSessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v IndexSessionHost.cs}
{\xe \v IndexSessionHost.cs}
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Wordlist.IndexSessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.Wordlist}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IndexSessionHost.cs\par \pard\plain 
{\tc\tcl2 \v IndexSessionHost.cs}
{\xe \v IndexSessionHost.cs}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Text;\par
00002 \par
00003 {\cf17 using }SAPTeam.Kryptor.Client;\par
00004 {\cf17 using }SAPTeam.Kryptor.Client.Security;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor.Cli.Wordlist\par
00007 \{\par
00008     {\cf17 public} {\cf17 class }IndexSessionHost : InstallSessionHost\par
00009     \{\par
00010         {\cf17 public} {\cf17 static} {\cf18 string} IndexBaseDir => Path.Combine(Program.Context.WordlistDirectory, {\cf22 "_index"});\par
00011 \par
00012         {\cf17 private} readonly {\cf18 string} indexPath;\par
00013 \par
00014         {\cf17 private} readonly {\cf18 string} indexV2Path = {\cf22 "index.json"};\par
00015 \par
00016         {\cf17 public} {\cf17 override} {\cf18 string} LocalIndexPath => indexV2Path;\par
00017 \par
00018         {\cf17 public} {\cf17 override} {\cf18 string} DownloadDir => Path.Combine(IndexBaseDir, {\cf22 "_downloadCache"});\par
00019 \par
00020         {\cf17 public} {\cf17 override} {\cf18 string} InstallDir => IndexBaseDir;\par
00021 \par
00022         {\cf17 public} IndexSessionHost(GlobalOptions globalOptions, {\cf18 bool} optimize, {\cf18 string} indexPath) : base(globalOptions,\par
00023                                                                                       list: false,\par
00024 #if DEBUG\par
00025                                                                                       all: false,\par
00026                                                                                       recommended: true,\par
00027 #else\par
00028                                                                                       all: true,\par
00029                                                                                       recommended: false,\par
00030 #endif\par
00031                                                                                       optimize: optimize,\par
00032                                                                                       ids: Array.Empty<string>()) => this.indexPath = indexPath;\par
00033 \par
00034         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00035         \{\par
00036             WordlistIndexLegacy Index = Utilities.ClientTypesJsonWorker.ReadJson<WordlistIndexLegacy>(File.ReadAllText(indexPath));\par
00037             WordlistIndex IndexV2 = {\cf17 new} WordlistIndex();\par
00038 \par
00039             {\cf19 foreach} (KeyValuePair<string, WordlistIndexEntryLegacy> entry {\cf19 in} Index.Wordlists)\par
00040             \{\par
00041                 {\cf18 string} {\cf18 id} = entry.Key.ToLower().Replace({\cf23 '_'}, {\cf23 '-'}).Replace({\cf23 ' '}, {\cf23 '-'});\par
00042                 WordlistIndexEntry entryV2;\par
00043 \par
00044                 {\cf19 if} (IndexV2.ContainsId({\cf18 id}))\par
00045                 \{\par
00046                     entryV2 = IndexV2[id];\par
00047                 \}\par
00048                 {\cf19 else}\par
00049                 \{\par
00050                     entryV2 = {\cf17 new} WordlistIndexEntry()\par
00051                     \{\par
00052                         Id = id,\par
00053                     \};\par
00054 \par
00055                     IndexV2.Add(entryV2);\par
00056                 \}\par
00057 \par
00058                 entryV2.Name = entry.Value.Name;\par
00059                 entryV2.Uri = entry.Value.DownloadUri;\par
00060                 entryV2.Enforced = entry.Value.QuickCheckPriority == 0;\par
00061                 entryV2.Compressed = entry.Value.Compressed;\par
00062             \}\par
00063 \par
00064             {\cf19 if} (File.Exists(indexV2Path))\par
00065             \{\par
00066                 File.Delete(indexV2Path);\par
00067             \}\par
00068 \par
00069             this.Index = IndexV2;\par
00070             base.Start(context);\par
00071 \par
00072             {\cf19 if} (File.Exists({\cf22 "Index.md"}))\par
00073             \{\par
00074                 File.Delete({\cf22 "Index.md"});\par
00075             \}\par
00076 \par
00077             {\cf17 using} (FileStream f = File.OpenWrite({\cf22 "Index.md"}))\par
00078             \{\par
00079                 {\cf18 string} header = {\cf22 "# Wordlist Index\\n\\n"} +\par
00080                                ${\cf22 "Auto generated by Kryptor CLI v**\{Program.Context.CliVersion\}**\\n\\n"} +\par
00081                                ${\cf22 "Last update time: **\{DateTime.UtcNow\} UTC**\\n\\n"} +\par
00082                                ${\cf22 "Currently there are **\{LocalIndex.Wordlists.Count\}** available wordlists to download.\\n\\n"} +\par
00083                                {\cf22 "| Identifier | Name | Lines | Words* | Size | Download |\\n"} +\par
00084                                {\cf22 "| :--------: | :--: | :---: | :----: | :--: | :------: |\\n"};\par
00085 \par
00086                 {\cf18 string} footer = {\cf22 "\\n"} +\par
00087                                 {\cf22 "* The words counts optimized and calculated by `Wordlist Fragment Compiler`\\n"};\par
00088 \par
00089                 {\cf18 byte}[] headerBuffer = Encoding.UTF8.GetBytes(header);\par
00090                 {\cf18 byte}[] footerBuffer = Encoding.UTF8.GetBytes(footer);\par
00091 \par
00092                 f.Write(headerBuffer, 0, headerBuffer.Length);\par
00093 \par
00094                 {\cf19 foreach} (WordlistIndexEntry entry {\cf19 in} LocalIndex.Wordlists)\par
00095                 \{\par
00096                     {\cf18 string} text = ${\cf22 "| \{entry.Id\} | \{entry.Name\} | \{entry.Lines.FormatWithCommas()\} | \{entry.Words.FormatWithCommas()\} | \{Utilities.ConvertBytes(entry.Size)\} | [\{(entry.Compressed ? "}Compressed File{\cf22 " : "}Text File{\cf22 ")\}](\{entry.Uri.OriginalString\}) |\\n"};\par
00097                     {\cf18 byte}[] buffer = Encoding.UTF8.GetBytes(text);\par
00098                     f.Write(buffer, 0, buffer.Length);\par
00099                 \}\par
00100 \par
00101                 f.Write(footerBuffer, 0, footerBuffer.Length);\par
00102             \}\par
00103 \par
00104             {\cf19 if} (Directory.Exists(IndexBaseDir))\par
00105             \{\par
00106                 Directory.Delete(IndexBaseDir, {\cf17 true});\par
00107             \}\par
00108         \}\par
00109     \}\par
00110 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InstallSessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v InstallSessionHost.cs}
{\xe \v InstallSessionHost.cs}
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Wordlist.InstallSessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.Wordlist}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InstallSessionHost.cs\par \pard\plain 
{\tc\tcl2 \v InstallSessionHost.cs}
{\xe \v InstallSessionHost.cs}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Net.Http;\par
00002 \par
00003 {\cf17 using }SAPTeam.Kryptor.Client;\par
00004 {\cf17 using }SAPTeam.Kryptor.Client.Security;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor.Cli.Wordlist\par
00007 \{\par
00008     {\cf17 public} {\cf17 class }InstallSessionHost : SessionHost\par
00009     \{\par
00010         {\cf17 public} {\cf17 static} Uri WordlistIndexUri \{ {\cf17 get}; \} = {\cf17 new} Uri({\cf22 "https://raw.githubusercontent.com/SAPTeamDEV/Wordlists/master/index.json"});\par
00011 \par
00012         {\cf17 private} readonly {\cf18 bool} List;\par
00013         {\cf17 private} readonly {\cf18 bool} All;\par
00014         {\cf17 private} readonly {\cf18 bool} Recommended;\par
00015         {\cf17 private} readonly {\cf18 bool} Optimize;\par
00016         {\cf17 private} readonly {\cf18 string}[] Ids;\par
00017         {\cf17 private} readonly {\cf18 bool} Indexing;\par
00018 \par
00019         {\cf17 public} {\cf17 virtual} {\cf18 string} DownloadDir \{ {\cf17 get}; \} = Path.Combine(Program.Context.WordlistDirectory, {\cf22 "_cache"});\par
00020 \par
00021         {\cf17 public} {\cf17 virtual} {\cf18 string} InstallDir \{ {\cf17 get}; \} = Program.Context.WordlistDirectory;\par
00022 \par
00023         {\cf17 public} WordlistIndex Index \{ {\cf17 get}; {\cf17 protected} {\cf17 set}; \}\par
00024 \par
00025         {\cf17 public} InstallSessionHost(GlobalOptions globalOptions, {\cf18 bool} list, {\cf18 bool} all, {\cf18 bool} recommended, {\cf18 bool} optimize, {\cf18 string}[] ids) : base(globalOptions)\par
00026         \{\par
00027             List = list;\par
00028             All = all;\par
00029             Recommended = recommended;\par
00030             Optimize = optimize;\par
00031             Ids = ids;\par
00032 \par
00033             Indexing = {\cf17 this} is IndexSessionHost;\par
00034             {\cf19 if} (!Indexing)\par
00035             \{\par
00036                 Container.MaxRunningSessions = 2;\par
00037             \}\par
00038         \}\par
00039 \par
00040         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00041         \{\par
00042             base.Start(context);\par
00043 \par
00044             {\cf19 if} (!Directory.Exists(InstallDir))\par
00045             \{\par
00046                 Directory.CreateDirectory(InstallDir);\par
00047             \}\par
00048 \par
00049             {\cf19 if} (!Directory.Exists(DownloadDir))\par
00050             \{\par
00051                 Directory.CreateDirectory(DownloadDir);\par
00052             \}\par
00053 \par
00054             {\cf19 if} (Index == {\cf17 null})\par
00055             \{\par
00056                 DebugLog({\cf22 "Getting remote index..."});\par
00057 \par
00058                 HttpClient client = {\cf17 new} HttpClient();\par
00059                 {\cf18 string} rawIndex = client.GetStringAsync(WordlistIndexUri).Result;\par
00060 \par
00061                 Index = Utilities.ClientTypesJsonWorker.ReadJson<WordlistIndex>(rawIndex);\par
00062             \}\par
00063 \par
00064             {\cf19 if} (List || (!All && !Recommended && Ids.Length == 0))\par
00065             \{\par
00066                 PrintList();\par
00067             \}\par
00068             {\cf19 else}\par
00069             \{\par
00070                 {\cf19 if} (All)\par
00071                 \{\par
00072                     {\cf19 foreach} (WordlistIndexEntry wordlist {\cf19 in} Index.Wordlists)\par
00073                     \{\par
00074                         Install(wordlist);\par
00075                     \}\par
00076                 \}\par
00077                 {\cf19 else} {\cf19 if} (Recommended)\par
00078                 \{\par
00079                     {\cf19 foreach} (WordlistIndexEntry wordlist {\cf19 in} Index.Wordlists)\par
00080                     \{\par
00081                         {\cf19 if} (!wordlist.Enforced) {\cf19 continue};\par
00082 \par
00083                         Install(wordlist);\par
00084                     \}\par
00085                 \}\par
00086                 {\cf19 else}\par
00087                 \{\par
00088                     {\cf19 foreach} ({\cf18 string} {\cf18 id} {\cf19 in} Ids)\par
00089                     \{\par
00090                         Install(Index[{\cf18 id}]);\par
00091                     \}\par
00092                 \}\par
00093 \par
00094                 ShowProgressMonitored({\cf17 true}, {\cf17 false}).Wait();\par
00095 \par
00096                 SortIndex();\par
00097             \}\par
00098         \}\par
00099 \par
00100         {\cf17 private} {\cf18 void} Install(WordlistIndexEntry entry)\par
00101         \{\par
00102             {\cf19 if} (!GetInstallationPermission(entry))\par
00103             \{\par
00104                 {\cf19 return};\par
00105             \}\par
00106 \par
00107             {\cf18 string} downloadPath = Path.Combine(DownloadDir, entry.Id);\par
00108             {\cf18 string} installPath = Path.Combine(InstallDir, entry.Id);\par
00109 \par
00110             DownloadSession downloader = {\cf17 new} DownloadSession(entry, {\cf17 new} DirectoryInfo(downloadPath));\par
00111             CompileSession compiler = {\cf17 new} CompileSession(downloader.OutputFile.FullName, installPath, entry, optimize: Optimize, indexing: Indexing, importing: {\cf17 false});\par
00112             downloader.ContinueWith(compiler);\par
00113 \par
00114             NewSession(downloader);\par
00115             NewSession(compiler);\par
00116         \}\par
00117 \par
00118         {\cf17 private} {\cf18 void} PrintList()\par
00119         \{\par
00120             {\cf19 foreach} (WordlistIndexEntry wordlist {\cf19 in} Index.Wordlists)\par
00121             \{\par
00122                 {\cf18 string} status = !LocalIndex.ContainsId(wordlist.Id) ? {\cf22 ""} : LocalIndex[wordlist.Id].Hash.SequenceEqual(wordlist.Hash) && LocalIndex[wordlist.Id].Verify({\cf17 false}) ? {\cf22 "(Installed)"} : {\cf22 "(Update Avaiable)"};\par
00123 \par
00124                 Log(${\cf22 "\\n\{wordlist.Id\}: \{status\}"});\par
00125                 Log(${\cf22 "Description: \{wordlist.Name\}"});\par
00126                 Log(${\cf22 "Words: \{wordlist.Words.FormatWithCommas()\}"});\par
00127                 Log(${\cf22 "Download Size: \{Utilities.ConvertBytes(wordlist.Size)\}"});\par
00128             \}\par
00129         \}\par
00130     \}\par
00131 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QuerySession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v QuerySession.cs}
{\xe \v QuerySession.cs}
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySession}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.Wordlist}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QuerySession.cs\par \pard\plain 
{\tc\tcl2 \v QuerySession.cs}
{\xe \v QuerySession.cs}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 {\cf17 using }SAPTeam.Kryptor.Client.Security;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor.Cli.Wordlist\par
00005 \{\par
00006     {\cf17 public} {\cf17 class }QuerySession : Session\par
00007     \{\par
00008         {\cf17 private} readonly WordlistIndexEntry Entry;\par
00009         {\cf17 private} readonly {\cf18 string} Word;\par
00010 \par
00011         {\cf17 public} {\cf18 bool} Result = {\cf17 false};\par
00012 \par
00013         {\cf17 public} QuerySession(WordlistIndexEntry entry, {\cf18 string} word)\par
00014         \{\par
00015             Entry = entry;\par
00016             Word = word;\par
00017         \}\par
00018 \par
00019         {\cf17 protected} {\cf17 override} async Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00020         \{\par
00021             Progress = -1;\par
00022             Description = ${\cf22 "Querying in \{Entry.Id\}"};\par
00023 \par
00024             WordlistFragmentCollection wfc = Entry.Open();\par
00025             {\cf18 bool} result = await wfc.LookupAsync(Word, cancellationToken);\par
00026 \par
00027             Result = result;\par
00028             Description += {\cf22 " : "} + (Result ? {\cf22 "Found"} : {\cf22 "Not found"});\par
00029             {\cf19 return} {\cf17 true};\par
00030         \}\par
00031     \}\par
00032 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QuerySessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v QuerySessionHost.cs}
{\xe \v QuerySessionHost.cs}
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Wordlist.QuerySessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.Wordlist}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QuerySessionHost.cs\par \pard\plain 
{\tc\tcl2 \v QuerySessionHost.cs}
{\xe \v QuerySessionHost.cs}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Cli.Wordlist\par
00004 \{\par
00005     {\cf17 public} {\cf17 class }QuerySessionHost : SessionHost\par
00006     \{\par
00007         {\cf17 private} readonly {\cf18 string} Query;\par
00008         {\cf17 private} readonly {\cf18 string} Wordlist;\par
00009 \par
00010         {\cf17 public} QuerySessionHost(GlobalOptions globalOptions, {\cf18 string} query, {\cf18 string} wordlist) : base(globalOptions)\par
00011         \{\par
00012             Query = query;\par
00013             Wordlist = wordlist;\par
00014         \}\par
00015 \par
00016         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00017         \{\par
00018             base.Start(context);\par
00019 \par
00020             {\cf19 if} ({\cf18 string}.IsNullOrEmpty(Query))\par
00021             \{\par
00022                 {\cf19 throw} {\cf17 new} ArgumentNullException({\cf22 "Word"});\par
00023             \}\par
00024 \par
00025             {\cf19 if} (Query.Length < 4)\par
00026             \{\par
00027                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "The given word is smaller than 4 characters"});\par
00028             \}\par
00029 \par
00030             {\cf19 if} ({\cf18 string}.IsNullOrEmpty(Wordlist))\par
00031             \{\par
00032                 {\cf19 foreach} (Client.Security.WordlistIndexEntry entry in LocalIndex.Wordlists)\par
00033                 \{\par
00034                     QuerySession session = {\cf17 new} QuerySession(entry, Query);\par
00035                     NewSession(session);\par
00036                 \}\par
00037             \}\par
00038             {\cf19 else}\par
00039             \{\par
00040                 QuerySession session = {\cf17 new} QuerySession(LocalIndex[Wordlist], Query);\par
00041                 NewSession(session);\par
00042             \}\par
00043 \par
00044             ShowProgressMonitored({\cf17 true}).Wait();\par
00045 \par
00046             System.Collections.Generic.IEnumerable<QuerySession> ranQueries = Container.Sessions.OfType<QuerySession>();\par
00047             {\cf19 if} (!ranQueries.Any()) {\cf19 return};\par
00048 \par
00049             Log();\par
00050             Log({\cf22 "Query summary"});\par
00051 \par
00052             {\cf18 int} found = 0;\par
00053             {\cf18 int} notFound = 0;\par
00054             {\cf18 int} failed = 0;\par
00055 \par
00056             {\cf19 foreach} (QuerySession s {\cf19 in} ranQueries)\par
00057             \{\par
00058                 {\cf19 if} (s.EndReason == SessionEndReason.Completed)\par
00059                 \{\par
00060                     {\cf19 if} (s.Result)\par
00061                     \{\par
00062                         found++;\par
00063                     \}\par
00064                     {\cf19 else}\par
00065                     \{\par
00066                         notFound++;\par
00067                     \}\par
00068                 \}\par
00069                 {\cf19 else}\par
00070                 \{\par
00071                     failed++;\par
00072                 \}\par
00073             \}\par
00074 \par
00075             Log(${\cf22 "Found: \{found\}"});\par
00076             Log(${\cf22 "Not Found: \{notFound\}"});\par
00077             Log(${\cf22 "Failed: \{failed\}"});\par
00078             Log(${\cf22 "Total: \{ranQueries.Count()\}"});\par
00079         \}\par
00080     \}\par
00081 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RemoveSessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v RemoveSessionHost.cs}
{\xe \v RemoveSessionHost.cs}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.Wordlist.RemoveSessionHost}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli.Wordlist}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RemoveSessionHost.cs\par \pard\plain 
{\tc\tcl2 \v RemoveSessionHost.cs}
{\xe \v RemoveSessionHost.cs}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Cli.Wordlist\par
00004 \{\par
00005     {\cf17 public} {\cf17 class }RemoveSessionHost : SessionHost\par
00006     \{\par
00007         {\cf17 private} readonly {\cf18 bool} List;\par
00008         {\cf17 private} readonly {\cf18 bool} All;\par
00009         {\cf17 private} {\cf18 string}[] Wordlists;\par
00010 \par
00011         {\cf17 public} RemoveSessionHost(GlobalOptions globalOptions, {\cf18 bool} list, {\cf18 bool} all, {\cf18 string}[] wordlists) : base(globalOptions)\par
00012         \{\par
00013             List = list;\par
00014             All = all;\par
00015             Wordlists = wordlists;\par
00016         \}\par
00017 \par
00018         {\cf17 public} {\cf17 override} {\cf18 void} Start(ClientContext context)\par
00019         \{\par
00020             base.Start(context);\par
00021 \par
00022             {\cf19 if} (List || (!All && Wordlists.Length == 0))\par
00023             \{\par
00024                 ListInstalledWordlists();\par
00025                 {\cf19 return};\par
00026             \}\par
00027 \par
00028             {\cf19 if} (All)\par
00029             \{\par
00030                 Wordlists = LocalIndex.Wordlists.Select(x => x.Id).ToArray();\par
00031                 {\cf19 if} (Wordlists.Length == 0)\par
00032                 \{\par
00033                     LogError({\cf22 "There is no installed wordlist to remove"});\par
00034                     {\cf19 return};\par
00035                 \}\par
00036             \}\par
00037             {\cf19 else}\par
00038             \{\par
00039                 Wordlists = Wordlists.Where(LocalIndex.ContainsId).ToArray();\par
00040                 {\cf19 if} (Wordlists.Length == 0)\par
00041                 \{\par
00042                     LogError({\cf22 "No valid id are supplied"});\par
00043                 \}\par
00044             \}\par
00045 \par
00046             {\cf19 if} (Wordlists.Length > 0)\par
00047             \{\par
00048                 {\cf19 foreach} ({\cf18 string} {\cf18 id} {\cf19 in} Wordlists)\par
00049                 \{\par
00050                     Log(${\cf22 "Removing \{id\}"});\par
00051                     RemoveWordlist({\cf18 id});\par
00052                 \}\par
00053             \}\par
00054         \}\par
00055     \}\par
00056 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistJsonContainer.cs File Reference\par \pard\plain 
{\tc\tcl2 \v WordlistJsonContainer.cs}
{\xe \v WordlistJsonContainer.cs}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Cli.WordlistJsonContainer}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Cli}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistJsonContainer.cs\par \pard\plain 
{\tc\tcl2 \v WordlistJsonContainer.cs}
{\xe \v WordlistJsonContainer.cs}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Client;\par
00002 {\cf17 using }SAPTeam.Kryptor.Client.Security;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor.Cli\par
00005 \{\par
00006     {\cf17 public} {\cf17 class }WordlistJsonContainer\par
00007     \{\par
00008         {\cf17 private} readonly {\cf18 object} _lockObj = {\cf17 new} object();\par
00009         {\cf17 private} readonly {\cf18 string} filePath;\par
00010 \par
00011         {\cf17 public} WordlistIndex Index \{ {\cf17 get}; \}\par
00012 \par
00013         {\cf17 public} WordlistJsonContainer({\cf18 string} filePath)\par
00014         \{\par
00015             this.filePath = filePath;\par
00016 \par
00017             {\cf17 using} (StreamReader reader = {\cf17 new} StreamReader(File.Open(filePath, FileMode.OpenOrCreate, FileAccess.Read)))\par
00018             \{\par
00019                 {\cf18 string} data = reader.ReadToEnd();\par
00020                 {\cf19 if} ({\cf18 string}.IsNullOrEmpty(data))\par
00021                 \{\par
00022                     data = {\cf22 "\{\}"};\par
00023                 \}\par
00024 \par
00025                 Index = Utilities.ClientTypesJsonWorker.ReadJson<WordlistIndex>(data);\par
00026             \}\par
00027         \}\par
00028 \par
00029         {\cf17 public} {\cf18 void} Write()\par
00030         \{\par
00031             lock (_lockObj)\par
00032             \{\par
00033                 {\cf18 string} json = Utilities.ClientTypesJsonWorker.ToJson(Index);\par
00034 \par
00035                 File.WriteAllText(filePath, json);\par
00036             \}\par
00037         \}\par
00038     \}\par
00039 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CODE-OF-CONDUCT.md File Reference\par \pard\plain 
{\tc\tcl2 \v CODE-OF-CONDUCT.md}
{\xe \v CODE-OF-CONDUCT.md}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CONTRIBUTING.md File Reference\par \pard\plain 
{\tc\tcl2 \v CONTRIBUTING.md}
{\xe \v CONTRIBUTING.md}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LICENSE.md File Reference\par \pard\plain 
{\tc\tcl2 \v LICENSE.md}
{\xe \v LICENSE.md}
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
README.md File Reference\par \pard\plain 
{\tc\tcl2 \v README.md}
{\xe \v README.md}
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SECURITY.md File Reference\par \pard\plain 
{\tc\tcl2 \v SECURITY.md}
{\xe \v SECURITY.md}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientContext.cs File Reference\par \pard\plain 
{\tc\tcl2 \v ClientContext.cs}
{\xe \v ClientContext.cs}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.ClientContext}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an application context with session based design model. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientContext.cs\par \pard\plain 
{\tc\tcl2 \v ClientContext.cs}
{\xe \v ClientContext.cs}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Reflection;\par
00002 \par
00003 {\cf17 using }SAPTeam.CommonTK;\par
00004 {\cf17 using }SAPTeam.Kryptor.Generators;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00007 \{\par
00011     {\cf17 public} {\cf17 class }ClientContext : Context\par
00012     \{\par
00016         {\cf17 public} {\cf17 static} Version EngineVersion \{ {\cf17 get}; \} = {\cf17 new} Version(Assembly.GetAssembly(typeof(Kes)).GetCustomAttribute<AssemblyFileVersionAttribute>().Version);\par
00017 \par
00021         {\cf17 public} {\cf17 static} Version ClientVersion \{ {\cf17 get}; \} = {\cf17 new} Version(Assembly.GetAssembly(typeof(ClientContext)).GetCustomAttribute<AssemblyFileVersionAttribute>().Version);\par
00022 \par
00023         {\cf17 private} readonly CryptoRandom random = {\cf17 new} CryptoRandom();\par
00024 \par
00028         {\cf17 public} ISessionHost Host \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00029 \par
00031         {\cf17 protected} {\cf17 override} {\cf18 void} CreateContext()\par
00032         \{\par
00033             {\cf20 // Just for initializing the EntroX generator.}\par
00034             {\cf18 byte}[] _d = {\cf17 new} {\cf18 byte}[8];\par
00035             random.NextBytes(_d);\par
00036             EntroX.AddEntropy(_d);\par
00037         \}\par
00038 \par
00040         {\cf17 protected} {\cf17 override} {\cf18 void} DisposeContext() => Host?.End({\cf17 true});\par
00041 \par
00048         {\cf17 public} {\cf18 void} NewSessionHost(ISessionHost host)\par
00049         \{\par
00050             {\cf19 if} (Host != {\cf17 null})\par
00051             \{\par
00052                 {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "This application already has a session host"});\par
00053             \}\par
00054 \par
00055             Host = host;\par
00056             StartSessionHost();\par
00057 \par
00058             Host.End({\cf17 false});\par
00059             Host = {\cf17 null};\par
00060         \}\par
00061 \par
00065         {\cf17 protected} {\cf17 virtual} {\cf18 void} StartSessionHost() => Host.Start({\cf17 this});\par
00066     \}\par
00067 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientHeader.cs File Reference\par \pard\plain 
{\tc\tcl2 \v ClientHeader.cs}
{\xe \v ClientHeader.cs}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.ClientHeader}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a unified header for kryptor front ends. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientHeader.cs\par \pard\plain 
{\tc\tcl2 \v ClientHeader.cs}
{\xe \v ClientHeader.cs}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #if NET6_0_OR_GREATER}\par
00002 {\cf17 using }System.Text.Json.Serialization;\par
00003 {\cf21 #endif}\par
00004 \par
00005 {\cf17 using }SAPTeam.Kryptor.Generators;\par
00006 \par
00007 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00008 \{\par
00012     {\cf17 public} {\cf17 class }ClientHeader : Header\par
00013     \{\par
00014         {\cf17 private} {\cf17 static} readonly CryptoRandom crng = {\cf17 new} CryptoRandom();\par
00015 \par
00016 {\cf21 #if NET6_0_OR_GREATER}\par
00018         {\cf17 protected} {\cf17 override} JsonSerializerContext JsonSerializerContext => SourceGenerationClientHeaderContext.Default;\par
00019 {\cf21 #endif}\par
00020 \par
00024         {\cf17 public} {\cf18 string} ClientName \{ {\cf17 get}; {\cf17 set}; \}\par
00025 \par
00029         {\cf17 public} Version ClientVersion \{ {\cf17 get}; {\cf17 set}; \}\par
00030 \par
00034         {\cf17 public} {\cf18 string} FileName \{ {\cf17 get}; {\cf17 set}; \}\par
00035 \par
00039         {\cf17 public} {\cf18 string} Serial \{ {\cf17 get}; {\cf17 set}; \}\par
00040 \par
00044         {\cf17 public} {\cf18 void} GenerateSerial()\par
00045         \{\par
00046             {\cf18 string}[] serial = {\cf17 new} {\cf18 string}[10];\par
00047             {\cf19 for} ({\cf18 int} i = 0; i < serial.Length; i++)\par
00048             \{\par
00049                 serial[i] = crng.Next(0x1869F).ToString({\cf22 "X5"});\par
00050             \}\par
00051 \par
00052             Serial = {\cf18 string}.Join({\cf22 "-"}, serial);\par
00053         \}\par
00054     \}\par
00055 \par
00056 {\cf21 #if NET6_0_OR_GREATER}\par
00057     [JsonSourceGenerationOptions(GenerationMode = JsonSourceGenerationMode.Metadata, WriteIndented = {\cf17 false}, DefaultIgnoreCondition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]\par
00058     [JsonSerializable(typeof(Header))]\par
00059     [JsonSerializable(typeof(ClientHeader))]\par
00060     {\cf17 internal} {\cf17 partial class }SourceGenerationClientHeaderContext : JsonSerializerContext\par
00061     \{\par
00062     \}\par
00063 {\cf21 #endif}\par
00064 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ISession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v ISession.cs}
{\xe \v ISession.cs}
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b SAPTeam.Kryptor.Client.ISession}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to start, monitor and control tasks. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ISession.cs\par \pard\plain 
{\tc\tcl2 \v ISession.cs}
{\xe \v ISession.cs}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Diagnostics;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00004 \{\par
00008     {\cf17 public} {\cf17 interface }ISession\par
00009     \{\par
00013         {\cf18 string} Name \{ {\cf17 get}; \}\par
00014 \par
00018         {\cf18 double} Progress \{ {\cf17 get}; \}\par
00019 \par
00023         {\cf18 string} Description \{ {\cf17 get}; \}\par
00024 \par
00028         {\cf18 bool} IsRunning \{ {\cf17 get}; \}\par
00029 \par
00033         {\cf18 bool} IsPaused \{ {\cf17 get}; \}\par
00034 \par
00038         {\cf18 bool} IsHidden \{ {\cf17 get}; \}\par
00039 \par
00043         SessionStatus Status \{ {\cf17 get}; \}\par
00044 \par
00048         SessionEndReason EndReason \{ {\cf17 get}; \}\par
00049 \par
00053         Exception Exception \{ {\cf17 get}; \}\par
00054 \par
00058         Stopwatch Timer \{ {\cf17 get}; \}\par
00059 \par
00063         List<string> Messages \{ {\cf17 get}; \}\par
00064 \par
00068         {\cf17 event} EventHandler<SessionEventArgs> SessionStarted;\par
00069 \par
00073         {\cf17 event} EventHandler<SessionUpdateEventArgs> ProgressChanged;\par
00074 \par
00078         {\cf17 event} EventHandler<SessionUpdateEventArgs> DescriptionChanged;\par
00079 \par
00083         {\cf17 event} EventHandler<SessionUpdateEventArgs> SessionPaused;\par
00084 \par
00088         {\cf17 event} EventHandler<SessionUpdateEventArgs> SessionResumed;\par
00089 \par
00093         {\cf17 event} EventHandler<SessionEventArgs> StatusChanged;\par
00094 \par
00098         {\cf17 event} EventHandler<SessionEventArgs> SessionEnded;\par
00099 \par
00112         Task StartAsync(ISessionHost sessionHost, CancellationToken cancellationToken);\par
00113 \par
00120         {\cf18 void} ContinueWith(ISession session);\par
00121 \par
00131         {\cf18 bool} AddDependency(ISession session);\par
00132 \par
00140         {\cf18 bool} IsReady(CancellationToken cancellationToken);\par
00141 \par
00160         Task<TResponse> SendRequest<TResponse>(ISessionHost sessionHost, SessionRequest<TResponse> request, CancellationToken cancellationToken);\par
00161     \}\par
00162 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ISessionHost.cs File Reference\par \pard\plain 
{\tc\tcl2 \v ISessionHost.cs}
{\xe \v ISessionHost.cs}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b SAPTeam.Kryptor.Client.ISessionHost}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to start and end program. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ISessionHost.cs\par \pard\plain 
{\tc\tcl2 \v ISessionHost.cs}
{\xe \v ISessionHost.cs}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00006     {\cf17 public} {\cf17 interface }ISessionHost\par
00007     \{\par
00011         {\cf18 bool} Verbose \{ {\cf17 get}; \}\par
00012 \par
00019         {\cf18 void} Start(ClientContext context);\par
00020 \par
00027         {\cf18 void} End({\cf18 bool} cancelled);\par
00028 \par
00041         {\cf18 void} NewSession(ISession session, {\cf18 bool} autoRemove, {\cf18 bool} autoStart);\par
00042 \par
00049         {\cf18 void} MonitorTask(Task task);\par
00050 \par
00076         Task<TResponse> OnSessionRequest<TResponse>(ISession session, SessionRequest<TResponse> request, CancellationToken cancellationToken);\par
00077     \}\par
00078 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyChain.cs File Reference\par \pard\plain 
{\tc\tcl2 \v KeyChain.cs}
{\xe \v KeyChain.cs}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.KeyChain}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold encryption data of files. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyChain.cs\par \pard\plain 
{\tc\tcl2 \v KeyChain.cs}
{\xe \v KeyChain.cs}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }KeyChain\par
00007     \{\par
00011         {\cf17 public} {\cf18 string} Serial \{ {\cf17 get}; {\cf17 set}; \}\par
00012 \par
00016         {\cf17 public} {\cf18 byte}[] Fingerprint \{ {\cf17 get}; {\cf17 set}; \}\par
00017 \par
00021         {\cf17 public} {\cf18 string} TransformerToken \{ {\cf17 get}; {\cf17 set}; \}\par
00022     \}\par
00023 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyChainCollection.cs File Reference\par \pard\plain 
{\tc\tcl2 \v KeyChainCollection.cs}
{\xe \v KeyChainCollection.cs}
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.KeyChainCollection}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a collection to work with key chains. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyChainCollection.cs\par \pard\plain 
{\tc\tcl2 \v KeyChainCollection.cs}
{\xe \v KeyChainCollection.cs}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }KeyChainCollection\par
00007     \{\par
00008         {\cf17 private} readonly {\cf18 object} _saveLock = {\cf17 new} object();\par
00009 \par
00010         {\cf17 private} readonly List<KeyChain> keyChainList;\par
00011 \par
00015         {\cf17 public} {\cf18 string} FilePath \{ {\cf17 get}; \}\par
00016 \par
00026         {\cf17 public} KeyChain {\cf17 this}[{\cf18 string} serial]\par
00027         \{\par
00028             {\cf17 get}\par
00029             \{\par
00030                 IEnumerable<KeyChain> entries = keyChainList.Where(x => x.Serial == serial);\par
00031                 {\cf19 if} (!entries.Any())\par
00032                 \{\par
00033                     {\cf19 throw} {\cf17 new} KeyNotFoundException(serial);\par
00034                 \}\par
00035                 {\cf19 else} {\cf19 if} (entries.Count() > 1)\par
00036                 \{\par
00037                     {\cf19 throw} {\cf17 new} ApplicationException({\cf22 "Illegal douplication found in keychain"});\par
00038                 \}\par
00039 \par
00040                 {\cf19 return} entries.First();\par
00041             \}\par
00042         \}\par
00043 \par
00050         {\cf17 public} KeyChainCollection({\cf18 string} path)\par
00051         \{\par
00052             {\cf19 if} (File.Exists(path))\par
00053             \{\par
00054                 FilePath = path;\par
00055             \}\par
00056             {\cf19 else} {\cf19 if} (!Directory.Exists(path))\par
00057             \{\par
00058                 Directory.CreateDirectory(path);\par
00059             \}\par
00060 \par
00061             {\cf19 if} (Directory.Exists(path))\par
00062             \{\par
00063                 FilePath = Path.Combine(path, {\cf22 "keychain.json"});\par
00064             \}\par
00065 \par
00066             {\cf18 string} data = {\cf17 null};\par
00067             {\cf17 using} (StreamReader reader = {\cf17 new} StreamReader(File.Open(FilePath, FileMode.OpenOrCreate)))\par
00068             \{\par
00069                 data = reader.ReadToEnd();\par
00070                 {\cf19 if} ({\cf18 string}.IsNullOrEmpty(data))\par
00071                 \{\par
00072                     data = {\cf22 "[]"};\par
00073                 \}\par
00074             \}\par
00075 \par
00076             keyChainList = Utilities.ClientTypesJsonWorker.ReadJson<List<KeyChain>>(data);\par
00077         \}\par
00078 \par
00092         {\cf17 public} {\cf18 void} Add(ClientHeader header, KeyStore keyStore, {\cf18 string} transformerToken = {\cf17 null})\par
00093         \{\par
00094             {\cf19 if} ({\cf18 string}.IsNullOrEmpty(header.Serial))\par
00095             \{\par
00096                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "Invalid header serial"});\par
00097             \}\par
00098 \par
00099             {\cf19 if} (keyChainList.Any(x => x.Serial == header.Serial))\par
00100             \{\par
00101                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "A keychain with this serial is already exists"});\par
00102             \}\par
00103 \par
00104             {\cf18 string} ksFileName = Path.Combine(Path.GetDirectoryName(FilePath), BitConverter.ToString(keyStore.Fingerprint).Replace({\cf22 "-"}, {\cf22 ""}).ToLower() + {\cf22 ".kks"});\par
00105             {\cf19 if} ({\cf18 string}.IsNullOrEmpty(transformerToken) && !File.Exists(ksFileName))\par
00106             \{\par
00107                 File.WriteAllBytes(ksFileName, keyStore.Raw);\par
00108             \}\par
00109 \par
00110             keyChainList.Add({\cf17 new} KeyChain()\par
00111             \{\par
00112                 Serial = header.Serial,\par
00113                 Fingerprint = keyStore.Fingerprint,\par
00114                 TransformerToken = transformerToken\par
00115             \});\par
00116         \}\par
00117 \par
00121         {\cf17 public} {\cf18 void} Save()\par
00122         \{\par
00123             lock (_saveLock)\par
00124             \{\par
00125                 {\cf18 string} kJson = Utilities.ClientTypesJsonWorker.ToJson(keyChainList);\par
00126 \par
00127                 File.WriteAllText(FilePath, kJson);\par
00128             \}\par
00129         \}\par
00130     \}\par
00131 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ManagedSession.cs File Reference\par \pard\plain 
{\tc\tcl2 \v ManagedSession.cs}
{\xe \v ManagedSession.cs}
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.ManagedSession}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents an empty session to be managed by the session host. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ManagedSession.cs\par \pard\plain 
{\tc\tcl2 \v ManagedSession.cs}
{\xe \v ManagedSession.cs}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }ManagedSession : Session\par
00007     \{\par
00011         {\cf17 public} ManagedSession() : base() => Status = SessionStatus.Managed;\par
00012 \par
00019         {\cf17 public} {\cf18 void} SetProgress({\cf18 double} progress) => Progress = progress;\par
00020 \par
00027         {\cf17 public} {\cf18 void} SetDescription({\cf18 string} description) => Description = description;\par
00028 \par
00034         {\cf17 public} {\cf18 void} SetEndStatus(SessionEndReason endReason, Exception exception = {\cf17 null})\par
00035         \{\par
00036             Status = SessionStatus.Ended;\par
00037             EndReason = endReason;\par
00038             Exception = exception;\par
00039         \}\par
00040 \par
00042         {\cf17 protected} {\cf17 override} Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken) => {\cf19 throw} {\cf17 new} NotImplementedException();\par
00043     \}\par
00044 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistFragmentCollection.cs File Reference\par \pard\plain 
{\tc\tcl2 \v WordlistFragmentCollection.cs}
{\xe \v WordlistFragmentCollection.cs}
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.Security.WordlistFragmentCollection}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a performance-friendly wordlist lookup class. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client.Security}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistFragmentCollection.cs\par \pard\plain 
{\tc\tcl2 \v WordlistFragmentCollection.cs}
{\xe \v WordlistFragmentCollection.cs}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Text;\par
00002 \par
00003 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00004 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor.Client.Security\par
00007 \{\par
00011     {\cf17 public} {\cf17 class }WordlistFragmentCollection\par
00012     \{\par
00013         {\cf17 private} Dictionary<int, HashSet<string>> Fragments \{ {\cf17 get}; \} = {\cf17 new} Dictionary<int, HashSet<string>>();\par
00014         {\cf17 private} WordlistIndexEntry IndexEntry \{ {\cf17 get}; \}\par
00015 \par
00023         {\cf17 public} WordlistFragmentCollection(WordlistIndexEntry entry)\par
00024         \{\par
00025             {\cf19 if} (entry == {\cf17 null}) {\cf19 throw} {\cf17 new} ArgumentNullException(nameof(entry));\par
00026 \par
00027             {\cf19 if} ({\cf18 string}.IsNullOrEmpty(entry.Id)\par
00028                 || {\cf18 string}.IsNullOrEmpty(entry.InstallDirectory)\par
00029                 || !Directory.Exists(entry.InstallDirectory)\par
00030                 || entry.Hash == {\cf17 null}\par
00031                 || entry.Hash.Length != 32)\par
00032             \{\par
00033                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "Invalid wordlist entry"});\par
00034             \}\par
00035 \par
00036             IndexEntry = entry;\par
00037         \}\par
00038 \par
00049         {\cf17 public} async Task<bool> LookupAsync({\cf18 string} word, CancellationToken cancellationToken)\par
00050         \{\par
00051             cancellationToken.ThrowIfCancellationRequested();\par
00052 \par
00053             {\cf18 int} {\cf18 id} = GetWordIdentifier(word);\par
00054 \par
00055             {\cf19 if} (!Fragments.ContainsKey({\cf18 id}))\par
00056             \{\par
00057                 {\cf18 string} fragmentPath = Path.Combine(IndexEntry.InstallDirectory, {\cf18 id}.ToString());\par
00058                 {\cf19 if} (!File.Exists(fragmentPath))\par
00059                 \{\par
00060                     {\cf19 return} {\cf17 false};\par
00061                 \}\par
00062 \par
00063                 HashSet<string> hashes = await InitializeFragment({\cf18 id}, fragmentPath, cancellationToken);\par
00064 \par
00065                 Fragments.Add({\cf18 id}, hashes);\par
00066             \}\par
00067 \par
00068             {\cf19 return} Fragments[id].Contains(word);\par
00069         \}\par
00070 \par
00071         {\cf17 private} async Task<HashSet<string>> InitializeFragment({\cf18 int} {\cf18 id}, {\cf18 string} lPath, CancellationToken cancellationToken)\par
00072         \{\par
00073             HashSet<string> fragment = {\cf17 new} HashSet<string>();\par
00074             WordlistVerificationMetadata metadata = IndexEntry.GetMetadata().Where(x => x.FragmentId == {\cf18 id}).First();\par
00075             {\cf18 bool} isCompatible = {\cf17 false};\par
00076 \par
00077             {\cf17 using} (StreamReader streamReader = {\cf17 new} StreamReader(lPath, Encoding.UTF8))\par
00078             \{\par
00079                 VerifyFragment(streamReader.BaseStream, metadata);\par
00080 \par
00081                 {\cf18 string} line;\par
00082                 {\cf19 while} ((line = await AsyncCompat.ReadLineAsync(streamReader)) != {\cf17 null})\par
00083                 \{\par
00084                     cancellationToken.ThrowIfCancellationRequested();\par
00085 \par
00086                     line = line.Trim();\par
00087 \par
00088                     {\cf19 if} (line == metadata.LookupString) isCompatible = {\cf17 true};\par
00089 \par
00090                     fragment.Add(line);\par
00091                 \}\par
00092             \}\par
00093 \par
00094             {\cf19 return} !isCompatible ? {\cf19 throw} {\cf17 new} NotSupportedException({\cf22 "The wordlist is not compatible with this version"}) : fragment;\par
00095         \}\par
00096 \par
00097         {\cf17 private} {\cf18 void} VerifyFragment(Stream stream, WordlistVerificationMetadata metadata)\par
00098         \{\par
00099             {\cf19 if} (metadata == {\cf17 null}) {\cf19 throw} {\cf17 new} ArgumentNullException({\cf22 "metadata"});\par
00100             {\cf19 if} (stream == {\cf17 null}) {\cf19 throw} {\cf17 new} ArgumentNullException({\cf22 "stream"});\par
00101 \par
00102             {\cf18 byte}[] fragmentHash = stream.Sha256();\par
00103             {\cf18 byte}[] fragmentChecksum = Utilities.XOR(IndexEntry.Hash, fragmentHash);\par
00104 \par
00105             {\cf19 if} (!metadata.Checksum.SequenceEqual(fragmentChecksum))\par
00106             \{\par
00107                 {\cf19 throw} {\cf17 new} InvalidDataException({\cf22 "Wordlist fragment is corrupted"});\par
00108             \}\par
00109         \}\par
00110 \par
00118         {\cf17 public} {\cf17 static} {\cf18 int} GetWordIdentifier({\cf18 string} word)\par
00119         \{\par
00120             {\cf18 int} fragmentId = 0;\par
00121 \par
00122             {\cf19 foreach} ({\cf18 int} c {\cf19 in} word)\par
00123             \{\par
00124                 fragmentId = (fragmentId + Math.Abs(c)) % 0x4000000;\par
00125             \}\par
00126 \par
00127             {\cf19 return} fragmentId % 1000;\par
00128         \}\par
00129     \}\par
00130 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistIndex.cs File Reference\par \pard\plain 
{\tc\tcl2 \v WordlistIndex.cs}
{\xe \v WordlistIndex.cs}
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.Security.WordlistIndex}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlists informations. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client.Security}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistIndex.cs\par \pard\plain 
{\tc\tcl2 \v WordlistIndex.cs}
{\xe \v WordlistIndex.cs}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client.Security\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }WordlistIndex\par
00007     \{\par
00015         {\cf17 public} WordlistIndexEntry {\cf17 this}[{\cf18 string} id]\par
00016         \{\par
00017             {\cf17 get}\par
00018             \{\par
00019                 {\cf19 try}\par
00020                 \{\par
00021                     {\cf19 return} Wordlists.First(x => x.Id == {\cf18 id});\par
00022                 \}\par
00023                 {\cf19 catch} (InvalidOperationException)\par
00024                 \{\par
00025                     {\cf19 throw} {\cf17 new} KeyNotFoundException({\cf18 id});\par
00026                 \}\par
00027             \}\par
00028         \}\par
00029 \par
00033         {\cf17 public} List<WordlistIndexEntry> Wordlists \{ {\cf17 get}; {\cf17 set}; \} = {\cf17 new} List<WordlistIndexEntry>();\par
00034 \par
00042         {\cf17 public} {\cf18 void} Add(WordlistIndexEntry entry)\par
00043         \{\par
00044             {\cf19 if} (ContainsId(entry.Id))\par
00045             \{\par
00046                 {\cf19 throw} {\cf17 new} ArgumentException(${\cf22 "The id \{entry.Id\} is already exists"});\par
00047             \}\par
00048 \par
00049             {\cf19 if} (entry.Hash != {\cf17 null})\par
00050             \{\par
00051                 {\cf19 foreach} (WordlistIndexEntry e {\cf19 in} Wordlists.Where(x => x.Hash != {\cf17 null}))\par
00052                 \{\par
00053                     {\cf19 if} (e.Hash.SequenceEqual(entry.Hash))\par
00054                     \{\par
00055                         {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "A wordlist with this hash already exists"});\par
00056                     \}\par
00057                 \}\par
00058             \}\par
00059 \par
00060             Wordlists.Add(entry);\par
00061         \}\par
00062 \par
00070         {\cf17 public} {\cf18 bool} ContainsId({\cf18 string} {\cf18 id}) => Wordlists.Where(x => x.Id == {\cf18 id}).Count() > 0;\par
00071     \}\par
00072 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistIndexEntry.cs File Reference\par \pard\plain 
{\tc\tcl2 \v WordlistIndexEntry.cs}
{\xe \v WordlistIndexEntry.cs}
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntry}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlist informations. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client.Security}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistIndexEntry.cs\par \pard\plain 
{\tc\tcl2 \v WordlistIndexEntry.cs}
{\xe \v WordlistIndexEntry.cs}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Client.Security\par
00004 \{\par
00008     {\cf17 public} {\cf17 class }WordlistIndexEntry\par
00009     \{\par
00010         {\cf17 private} WordlistVerificationMetadata[] metadata;\par
00011 \par
00015         {\cf17 public} {\cf18 string} Id \{ {\cf17 get}; {\cf17 set}; \}\par
00016 \par
00020         {\cf17 public} {\cf18 string} Name \{ {\cf17 get}; {\cf17 set}; \}\par
00021 \par
00025         {\cf17 public} Uri Uri \{ {\cf17 get}; {\cf17 set}; \}\par
00026 \par
00030         {\cf17 public} {\cf18 byte}[] Hash \{ {\cf17 get}; {\cf17 set}; \}\par
00031 \par
00035         {\cf17 public} {\cf18 bool} Enforced \{ {\cf17 get}; {\cf17 set}; \}\par
00036 \par
00040         {\cf17 public} {\cf18 bool} Compressed \{ {\cf17 get}; {\cf17 set}; \}\par
00041 \par
00045         {\cf17 public} {\cf18 bool} Optimized \{ {\cf17 get}; {\cf17 set}; \}\par
00046 \par
00050         {\cf17 public} {\cf18 string} InstallDirectory \{ {\cf17 get}; {\cf17 set}; \}\par
00051 \par
00055         {\cf17 public} {\cf18 long} Lines \{ {\cf17 get}; {\cf17 set}; \}\par
00056 \par
00060         {\cf17 public} {\cf18 long} Words \{ {\cf17 get}; {\cf17 set}; \}\par
00061 \par
00065         {\cf17 public} {\cf18 long} Size \{ {\cf17 get}; {\cf17 set}; \}\par
00066 \par
00073         {\cf17 public} WordlistFragmentCollection Open()\par
00074         \{\par
00075             CheckBasicValidity({\cf17 true});\par
00076             CheckInstallation({\cf17 true});\par
00077 \par
00078             {\cf19 return} {\cf17 new} WordlistFragmentCollection({\cf17 this});\par
00079         \}\par
00080 \par
00087         {\cf17 public} WordlistVerificationMetadata[] GetMetadata()\par
00088         \{\par
00089             {\cf19 if} (metadata == {\cf17 null} || metadata.Length == 0)\par
00090             \{\par
00091                 {\cf18 string} json = File.ReadAllText(GetMetadataPath());\par
00092                 List<WordlistVerificationMetadata> data = Utilities.ClientTypesJsonWorker.ReadJson<List<WordlistVerificationMetadata>>(json);\par
00093                 metadata = data.ToArray();\par
00094             \}\par
00095 \par
00096             {\cf19 return} metadata;\par
00097         \}\par
00098 \par
00099         {\cf17 private} {\cf18 string} GetMetadataPath() => Path.Combine(InstallDirectory, {\cf22 "metadata.json"});\par
00100 \par
00111         {\cf17 public} {\cf18 bool} CheckBasicValidity({\cf18 bool} throwException = {\cf17 false})\par
00112         \{\par
00113             {\cf18 bool} isValid = {\cf17 true};\par
00114 \par
00115             {\cf19 if} ({\cf18 string}.IsNullOrEmpty(Id))\par
00116             \{\par
00117                 isValid = {\cf17 false};\par
00118                 {\cf19 if} (throwException) {\cf19 throw} {\cf17 new} InvalidDataException({\cf22 "The wordlist id could not be empty"});\par
00119             \}\par
00120             {\cf19 else} {\cf19 if} (Hash == {\cf17 null} || Hash.Length == 0)\par
00121             \{\par
00122                 isValid = {\cf17 false};\par
00123                 {\cf19 if} (throwException) {\cf19 throw} {\cf17 new} InvalidDataException({\cf22 "The wordlist hash could not be empty"});\par
00124             \}\par
00125 \par
00126             {\cf19 return} isValid;\par
00127         \}\par
00128 \par
00142         {\cf17 public} {\cf18 bool} CheckInstallation({\cf18 bool} throwException = {\cf17 false})\par
00143         \{\par
00144             {\cf18 bool} isInstalled = {\cf17 true};\par
00145 \par
00146             {\cf19 if} ({\cf18 string}.IsNullOrEmpty(InstallDirectory))\par
00147             \{\par
00148                 isInstalled = {\cf17 false};\par
00149                 {\cf19 if} (throwException) {\cf19 throw} {\cf17 new} ApplicationException({\cf22 "The wordlist is not installed"});\par
00150             \}\par
00151             {\cf19 else} {\cf19 if} (!Directory.Exists(InstallDirectory))\par
00152             \{\par
00153                 isInstalled = {\cf17 false};\par
00154                 {\cf19 if} (throwException) {\cf19 throw} {\cf17 new} DirectoryNotFoundException(InstallDirectory);\par
00155             \}\par
00156             {\cf19 else} {\cf19 if} (Directory.GetFiles(InstallDirectory).Length == 0)\par
00157             \{\par
00158                 isInstalled = {\cf17 false};\par
00159                 {\cf19 if} (throwException) {\cf19 throw} {\cf17 new} InvalidDataException({\cf22 "The wordlist installation directory is empty"});\par
00160             \}\par
00161             {\cf19 else} {\cf19 if} (!File.Exists(GetMetadataPath()))\par
00162             \{\par
00163                 isInstalled = {\cf17 false};\par
00164                 {\cf19 if} (throwException) {\cf19 throw} {\cf17 new} FileNotFoundException({\cf22 "Cannont find the metadata file"});\par
00165             \}\par
00166 \par
00167             {\cf19 return} isInstalled;\par
00168         \}\par
00169 \par
00183         {\cf17 public} {\cf18 bool} Verify({\cf18 bool} throwException = {\cf17 false})\par
00184         \{\par
00185             {\cf18 bool} basicChecksPassed = CheckBasicValidity(throwException) && CheckInstallation(throwException);\par
00186 \par
00187             {\cf19 if} (!basicChecksPassed) {\cf19 return} {\cf17 false};\par
00188 \par
00189             {\cf18 bool} isVerified = {\cf17 true};\par
00190 \par
00191             WordlistVerificationMetadata[] metadata = GetMetadata();\par
00192 \par
00193             {\cf19 foreach} (WordlistVerificationMetadata fragmentData {\cf19 in} metadata)\par
00194             \{\par
00195                 {\cf18 bool} validFragment = {\cf17 true};\par
00196                 {\cf18 string} fragmentPath = Path.Combine(InstallDirectory, fragmentData.FragmentId.ToString());\par
00197 \par
00198                 {\cf19 if} (!File.Exists(fragmentPath))\par
00199                 \{\par
00200                     validFragment = {\cf17 false};\par
00201                 \}\par
00202                 {\cf19 else} {\cf19 if} (fragmentData.FragmentId != WordlistFragmentCollection.GetWordIdentifier(fragmentData.LookupString))\par
00203                 \{\par
00204                     validFragment = {\cf17 false};\par
00205                 \}\par
00206                 {\cf19 else}\par
00207                 \{\par
00208                     FileStream stream = File.OpenRead(fragmentPath);\par
00209                     {\cf18 byte}[] hash = stream.Sha256();\par
00210                     {\cf18 byte}[] checksum = Utilities.XOR(Hash, hash);\par
00211 \par
00212                     {\cf19 if} (!fragmentData.Checksum.SequenceEqual(checksum))\par
00213                     \{\par
00214                         validFragment = {\cf17 false};\par
00215                     \}\par
00216                 \}\par
00217 \par
00218                 {\cf19 if} (!validFragment)\par
00219                 \{\par
00220                     isVerified = {\cf17 false};\par
00221                     {\cf19 break};\par
00222                 \}\par
00223             \}\par
00224 \par
00225             {\cf19 return} throwException && !isVerified ? {\cf19 throw} {\cf17 new} InvalidDataException({\cf22 "The wordlist is not verified"}) : isVerified;\par
00226         \}\par
00227     \}\par
00228 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistIndexEntryLegacy.cs File Reference\par \pard\plain 
{\tc\tcl2 \v WordlistIndexEntryLegacy.cs}
{\xe \v WordlistIndexEntryLegacy.cs}
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.Security.WordlistIndexEntryLegacy}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlist informations. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client.Security}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistIndexEntryLegacy.cs\par \pard\plain 
{\tc\tcl2 \v WordlistIndexEntryLegacy.cs}
{\xe \v WordlistIndexEntryLegacy.cs}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client.Security\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }WordlistIndexEntryLegacy\par
00007     \{\par
00011         {\cf17 public} {\cf18 string} Name \{ {\cf17 get}; {\cf17 set}; \}\par
00012 \par
00016         {\cf17 public} Uri DownloadUri \{ {\cf17 get}; {\cf17 set}; \}\par
00017 \par
00021         {\cf17 public} {\cf18 int} QuickCheckPriority \{ {\cf17 get}; {\cf17 set}; \}\par
00022 \par
00026         {\cf17 public} {\cf18 bool} Compressed \{ {\cf17 get}; {\cf17 set}; \}\par
00027     \}\par
00028 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistIndexLegacy.cs File Reference\par \pard\plain 
{\tc\tcl2 \v WordlistIndexLegacy.cs}
{\xe \v WordlistIndexLegacy.cs}
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.Security.WordlistIndexLegacy}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents schema to store and retrive wordlists informations. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client.Security}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistIndexLegacy.cs\par \pard\plain 
{\tc\tcl2 \v WordlistIndexLegacy.cs}
{\xe \v WordlistIndexLegacy.cs}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client.Security\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }WordlistIndexLegacy\par
00007     \{\par
00015         {\cf17 public} WordlistIndexEntryLegacy {\cf17 this}[{\cf18 string} id] => Wordlists[id];\par
00016 \par
00020         {\cf17 public} Dictionary<string, WordlistIndexEntryLegacy> Wordlists \{ {\cf17 get}; {\cf17 set}; \} = {\cf17 new} Dictionary<string, WordlistIndexEntryLegacy>();\par
00021     \}\par
00022 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistLibrary.cs File Reference\par \pard\plain 
{\tc\tcl2 \v WordlistLibrary.cs}
{\xe \v WordlistLibrary.cs}
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.Security.WordlistLibrary}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client.Security}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistLibrary.cs\par \pard\plain 
{\tc\tcl2 \v WordlistLibrary.cs}
{\xe \v WordlistLibrary.cs}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.IO;\par
00002 \par
00003 {\cf17 using }SAPTeam.CommonTK;\par
00004 \par
00005 {\cf17 namespace }SAPTeam.Kryptor.Client.Security\par
00006 \{\par
00007     {\cf17 internal} {\cf17 class }WordlistLibrary\par
00008     \{\par
00009         {\cf17 private} readonly WordlistIndex remoteIndex;\par
00010 \par
00011         {\cf17 private} Config<WordlistIndex> LocalIndexContainer \{ {\cf17 get}; \}\par
00012 \par
00013         {\cf17 private} WordlistIndex LocalIndex => LocalIndexContainer.Prefs;\par
00014 \par
00015         {\cf17 public} {\cf18 string} LocalIndexPath \{ {\cf17 get}; \}\par
00016 \par
00017         {\cf17 public} {\cf18 string} PreferredInstallPath \{ {\cf17 get}; \}\par
00018 \par
00019         {\cf17 public} {\cf18 bool} Indexing \{ {\cf17 get}; \}\par
00020 \par
00021         {\cf17 public} WordlistIndexEntry[] Wordlists => LocalIndex.Wordlists.ToArray();\par
00022 \par
00023         {\cf17 public} WordlistLibrary({\cf18 string} localIndexPath) : this(localIndexPath, null, false)\par
00024         \{\par
00025 \par
00026         \}\par
00027 \par
00028         {\cf17 public} WordlistLibrary({\cf18 string} localIndexPath, WordlistIndex remoteIndex, {\cf18 bool} indexing)\par
00029         \{\par
00030             LocalIndexPath = localIndexPath;\par
00031             {\cf18 string} localIndexDir = Utilities.EnsureDirectoryExists(Path.GetDirectoryName(localIndexPath));\par
00032 \par
00033             LocalIndexContainer = {\cf17 new} Config<WordlistIndex>(localIndexPath);\par
00034             this.remoteIndex = remoteIndex;\par
00035 \par
00036             Indexing = indexing;\par
00037             PreferredInstallPath = indexing ? Utilities.CreateTempFolder() : localIndexDir;\par
00038         \}\par
00039     \}\par
00040 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistVerificationMetadata.cs File Reference\par \pard\plain 
{\tc\tcl2 \v WordlistVerificationMetadata.cs}
{\xe \v WordlistVerificationMetadata.cs}
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.Security.WordlistVerificationMetadata}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents wordlist's metadata needed for verification. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client.Security}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WordlistVerificationMetadata.cs\par \pard\plain 
{\tc\tcl2 \v WordlistVerificationMetadata.cs}
{\xe \v WordlistVerificationMetadata.cs}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client.Security\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }WordlistVerificationMetadata\par
00007     \{\par
00011         {\cf17 public} {\cf18 int} FragmentId \{ {\cf17 get}; {\cf17 set}; \}\par
00012 \par
00016         {\cf17 public} {\cf18 string} LookupString \{ {\cf17 get}; {\cf17 set}; \}\par
00017 \par
00021         {\cf17 public} {\cf18 byte}[] Checksum \{ {\cf17 get}; {\cf17 set}; \}\par
00022     \}\par
00023 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Session.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Session.cs}
{\xe \v Session.cs}
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.Session}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents abstraction to implement sessions. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Session.cs\par \pard\plain 
{\tc\tcl2 \v Session.cs}
{\xe \v Session.cs}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Diagnostics;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00004 \{\par
00008     {\cf17 public} {\cf17 abstract} {\cf17 class }Session : ISession\par
00009     \{\par
00010         {\cf17 private} {\cf18 double} progress = 0;\par
00011         {\cf17 private} {\cf18 string} description = {\cf22 ""};\par
00012         {\cf17 private} SessionStatus status = SessionStatus.NotStarted;\par
00013         {\cf17 private} SessionStatus prvStatus = SessionStatus.NotStarted;\par
00014         {\cf17 private} SessionEndReason endReason;\par
00015         {\cf17 private} Exception exception;\par
00016         {\cf17 private} {\cf18 bool} isPaused;\par
00017 \par
00019         {\cf17 public} {\cf17 virtual} {\cf18 string} Name => GetType().Name;\par
00020 \par
00022         {\cf17 public} {\cf17 virtual} {\cf18 double} Progress\par
00023         \{\par
00024             {\cf17 get} => progress;\par
00025 \par
00026             {\cf17 protected} {\cf17 set}\par
00027             \{\par
00028                 ThrowIfEnded();\par
00029                 {\cf19 if} (value == progress) {\cf19 return};\par
00030 \par
00031                 progress = value;\par
00032                 {\cf19 if} (IsRunning) OnProgressChanged();\par
00033             \}\par
00034         \}\par
00035 \par
00037         {\cf17 public} {\cf17 virtual} {\cf18 string} Description\par
00038         \{\par
00039             {\cf17 get} => description;\par
00040 \par
00041             {\cf17 protected} {\cf17 set}\par
00042             \{\par
00043                 ThrowIfEnded();\par
00044                 {\cf19 if} (value == description) {\cf19 return};\par
00045 \par
00046                 description = value;\par
00047                 {\cf19 if} (IsRunning) OnDescriptionChanged();\par
00048             \}\par
00049         \}\par
00050 \par
00052         {\cf17 public} {\cf18 bool} IsRunning => Status == SessionStatus.Running || Status == SessionStatus.Managed;\par
00053 \par
00055         {\cf17 public} {\cf18 bool} IsPaused\par
00056         \{\par
00057             {\cf17 get} => isPaused;\par
00058 \par
00059             {\cf17 protected} {\cf17 set}\par
00060             \{\par
00061                 ThrowIfNotStarted();\par
00062                 ThrowIfEnded();\par
00063                 {\cf19 if} (isPaused == value) {\cf19 return};\par
00064 \par
00065                 isPaused = value;\par
00066 \par
00067                 {\cf19 if} (value)\par
00068                 \{\par
00069                     Timer?.Stop();\par
00070                 \}\par
00071                 {\cf19 else}\par
00072                 \{\par
00073                     Timer?.Start();\par
00074                 \}\par
00075 \par
00076                 OnPauseStatusChanged();\par
00077             \}\par
00078         \}\par
00079 \par
00081         {\cf17 public} {\cf17 virtual} {\cf18 bool} IsHidden => {\cf17 false};\par
00082 \par
00084         {\cf17 public} SessionStatus Status\par
00085         \{\par
00086             {\cf17 get} => status;\par
00087 \par
00088             {\cf17 protected} {\cf17 set}\par
00089             \{\par
00090                 ThrowIfEnded();\par
00091                 {\cf19 if} (value == status) {\cf19 return};\par
00092                 {\cf19 if} (value < status) {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "Cannot revert the session's status"});\par
00093 \par
00094                 prvStatus = status;\par
00095                 status = value;\par
00096 \par
00097                 {\cf19 if} (value == SessionStatus.Managed) {\cf19 return};\par
00098 \par
00099                 OnStatusChanged();\par
00100 \par
00101                 {\cf19 if} (value == SessionStatus.Running)\par
00102                 \{\par
00103                     OnSessionStarted();\par
00104                 \}\par
00105                 {\cf19 else} {\cf19 if} (value == SessionStatus.Ended)\par
00106                 \{\par
00107                     OnSessionEnded();\par
00108                 \}\par
00109             \}\par
00110         \}\par
00111 \par
00113         {\cf17 public} SessionEndReason EndReason\par
00114         \{\par
00115             {\cf17 get} => endReason;\par
00116 \par
00117             {\cf17 protected} {\cf17 set}\par
00118             \{\par
00119                 ThrowIfEnded();\par
00120                 endReason = value;\par
00121             \}\par
00122         \}\par
00123 \par
00125         {\cf17 public} Exception Exception\par
00126         \{\par
00127             {\cf17 get} => exception;\par
00128 \par
00129             {\cf17 protected} {\cf17 set}\par
00130             \{\par
00131                 ThrowIfEnded();\par
00132                 exception = value;\par
00133             \}\par
00134         \}\par
00135 \par
00137         {\cf17 public} Stopwatch Timer \{ {\cf17 get}; \}\par
00138 \par
00140         {\cf17 public} List<string> Messages \{ {\cf17 get}; \}\par
00141 \par
00145         {\cf17 protected} List<ISession> Dependencies \{ {\cf17 get}; \}\par
00146 \par
00150         {\cf17 protected} List<ISession> Dependents \{ {\cf17 get}; \}\par
00151 \par
00153         {\cf17 public} {\cf17 event} EventHandler<SessionEventArgs> SessionStarted;\par
00154 \par
00156         {\cf17 public} {\cf17 event} EventHandler<SessionUpdateEventArgs> ProgressChanged;\par
00157 \par
00159         {\cf17 public} {\cf17 event} EventHandler<SessionUpdateEventArgs> DescriptionChanged;\par
00160 \par
00162         {\cf17 public} {\cf17 event} EventHandler<SessionEventArgs> StatusChanged;\par
00163 \par
00165         {\cf17 public} {\cf17 event} EventHandler<SessionEventArgs> SessionEnded;\par
00166 \par
00168         {\cf17 public} {\cf17 event} EventHandler<SessionUpdateEventArgs> SessionPaused;\par
00169 \par
00171         {\cf17 public} {\cf17 event} EventHandler<SessionUpdateEventArgs> SessionResumed;\par
00172 \par
00176         {\cf17 protected} Session()\par
00177         \{\par
00178             Timer = {\cf17 new} Stopwatch();\par
00179             Messages = {\cf17 new} List<string>();\par
00180 \par
00181             Dependencies = {\cf17 new} List<ISession>();\par
00182             Dependents = {\cf17 new} List<ISession>();\par
00183         \}\par
00184 \par
00186         {\cf17 public} async Task StartAsync(ISessionHost sessionHost, CancellationToken cancellationToken)\par
00187         \{\par
00188             ThrowIfEnded();\par
00189 \par
00190             {\cf19 try}\par
00191             \{\par
00192                 cancellationToken.ThrowIfCancellationRequested();\par
00193 \par
00194                 {\cf19 if} (IsRunning)\par
00195                 \{\par
00196                     {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "The session is already running"});\par
00197                 \}\par
00198 \par
00199                 {\cf19 if} (!IsReady(cancellationToken))\par
00200                 \{\par
00201                     {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "You may not start this session at the moment"});\par
00202                 \}\par
00203 \par
00204                 Status = SessionStatus.Running;\par
00205                 Timer.Start();\par
00206 \par
00207                 {\cf18 bool} result = await RunAsync(sessionHost, cancellationToken);\par
00208 \par
00209                 {\cf19 if} (result)\par
00210                 \{\par
00211                     EndReason = SessionEndReason.Completed;\par
00212                 \}\par
00213             \}\par
00214             {\cf19 catch} (OperationCanceledException ocex)\par
00215             \{\par
00216                 EndReason = cancellationToken.IsCancellationRequested ? SessionEndReason.Cancelled : SessionEndReason.Failed;\par
00217                 Exception = ocex;\par
00218             \}\par
00219             {\cf19 catch} (Exception ex)\par
00220             \{\par
00221                 {\cf19 if} (ex is AggregateException aex && aex.InnerException != {\cf17 null})\par
00222                 \{\par
00223                     ex = ex.InnerException;\par
00224                 \}\par
00225 \par
00226                 EndReason = SessionEndReason.Failed;\par
00227                 Exception = ex;\par
00228             \}\par
00229             {\cf19 finally}\par
00230             \{\par
00231                 {\cf19 if} (EndReason == SessionEndReason.Failed)\par
00232                 \{\par
00233                     SetErrorMessage(sessionHost, Exception);\par
00234                 \}\par
00235 \par
00236                 Timer.Stop();\par
00237                 Status = SessionStatus.Ended;\par
00238             \}\par
00239         \}\par
00240 \par
00241         {\cf17 private} {\cf18 void} SetErrorMessage(ISessionHost sessionHost, Exception ex)\par
00242         \{\par
00243             Description = ${\cf22 "\{ex.GetType().Name\}: \{ex.Message\}"};\par
00244             Messages.Add(sessionHost.Verbose ? ex.ToString() : Description);\par
00245         \}\par
00246 \par
00248         {\cf17 public} {\cf17 virtual} {\cf18 void} ContinueWith(ISession session)\par
00249         \{\par
00250             {\cf19 if} (session.Status == SessionStatus.NotStarted)\par
00251             \{\par
00252                 {\cf18 bool} result = session.AddDependency({\cf17 this});\par
00253 \par
00254                 {\cf19 if} (!result)\par
00255                 \{\par
00256                     {\cf19 throw} {\cf17 new} ApplicationException({\cf22 "Cannot add this session as dependency of "} + session);\par
00257                 \}\par
00258 \par
00259                 Dependents.Add(session);\par
00260             \}\par
00261             {\cf19 else}\par
00262             \{\par
00263                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "The session is already started."});\par
00264             \}\par
00265         \}\par
00266 \par
00268         {\cf17 public} {\cf17 virtual} {\cf18 bool} AddDependency(ISession session)\par
00269         \{\par
00270             {\cf19 if} (Status != SessionStatus.NotStarted || Dependencies.Contains(session))\par
00271             \{\par
00272                 {\cf19 return} {\cf17 false};\par
00273             \}\par
00274 \par
00275             Dependencies.Add(session);\par
00276             {\cf19 return} {\cf17 true};\par
00277         \}\par
00278 \par
00280         {\cf17 public} {\cf17 virtual} {\cf18 bool} IsReady(CancellationToken cancellationToken)\par
00281         \{\par
00282             {\cf19 if} (Status == SessionStatus.Ended) {\cf19 return} {\cf17 false};\par
00283 \par
00284             {\cf19 if} (cancellationToken.IsCancellationRequested)\par
00285             \{\par
00286                 SkipSession();\par
00287                 {\cf19 return} {\cf17 false};\par
00288             \}\par
00289 \par
00290             {\cf19 foreach} (ISession session {\cf19 in} Dependencies)\par
00291             \{\par
00292                 {\cf19 if} (session.Status == SessionStatus.Ended)\par
00293                 \{\par
00294                     {\cf19 if} (session.EndReason == SessionEndReason.Completed)\par
00295                     \{\par
00296                         {\cf19 continue};\par
00297                     \}\par
00298 \par
00299                     SkipSession();\par
00300                 \}\par
00301 \par
00302                 {\cf19 return} {\cf17 false};\par
00303             \}\par
00304 \par
00305             {\cf19 return} {\cf17 true};\par
00306         \}\par
00307 \par
00308         {\cf17 private} {\cf18 void} SkipSession()\par
00309         \{\par
00310             EndReason = SessionEndReason.Skipped;\par
00311             Status = SessionStatus.Ended;\par
00312         \}\par
00313 \par
00315         {\cf17 public} {\cf17 virtual} async Task<TResponse> SendRequest<TResponse>(ISessionHost sessionHost, SessionRequest<TResponse> request, CancellationToken cancellationToken)\par
00316         \{\par
00317             IsPaused = {\cf17 true};\par
00318 \par
00319             TResponse response = await sessionHost.OnSessionRequest({\cf17 this}, request, cancellationToken);\par
00320 \par
00321             IsPaused = {\cf17 false};\par
00322 \par
00323             {\cf19 return} response;\par
00324         \}\par
00325 \par
00326         {\cf17 private} SessionUpdateEventArgs CollectSessionUpdateData()\par
00327         \{\par
00328             {\cf19 return} {\cf17 new} SessionUpdateEventArgs()\par
00329             \{\par
00330                 Progress = Progress,\par
00331                 Description = Description,\par
00332                 IsPause = IsPaused,\par
00333             \};\par
00334         \}\par
00335 \par
00336         {\cf17 private} SessionEventArgs CollectSessionData()\par
00337         \{\par
00338             {\cf19 return} {\cf17 new} SessionEventArgs()\par
00339             \{\par
00340                 Progress = Progress,\par
00341                 Description = Description,\par
00342                 IsPause = IsPaused,\par
00343                 PreviousStatus = prvStatus,\par
00344                 Status = Status,\par
00345                 EndReason = EndReason,\par
00346                 Exception = Exception,\par
00347                 Messages = Messages.ToArray()\par
00348             \};\par
00349         \}\par
00350 \par
00354         {\cf17 protected} {\cf18 void} OnSessionStarted() => SessionStarted?.Invoke({\cf17 this}, CollectSessionData());\par
00355 \par
00359         {\cf17 protected} {\cf18 void} OnProgressChanged() => ProgressChanged?.Invoke({\cf17 this}, CollectSessionUpdateData());\par
00360 \par
00364         {\cf17 protected} {\cf18 void} OnDescriptionChanged() => DescriptionChanged?.Invoke({\cf17 this}, CollectSessionUpdateData());\par
00365 \par
00369         {\cf17 protected} {\cf18 void} OnPauseStatusChanged()\par
00370         \{\par
00371             {\cf19 if} (IsPaused)\par
00372             \{\par
00373                 SessionPaused?.Invoke({\cf17 this}, CollectSessionUpdateData());\par
00374             \}\par
00375             {\cf19 else}\par
00376             \{\par
00377                 SessionResumed?.Invoke({\cf17 this}, CollectSessionUpdateData());\par
00378             \}\par
00379         \}\par
00380 \par
00384         {\cf17 protected} {\cf18 void} OnStatusChanged() => StatusChanged?.Invoke({\cf17 this}, CollectSessionData());\par
00385 \par
00389         {\cf17 protected} {\cf18 void} OnSessionEnded() => SessionEnded?.Invoke({\cf17 this}, CollectSessionData());\par
00390 \par
00395         {\cf17 protected} {\cf18 void} ThrowIfNotStarted()\par
00396         \{\par
00397             {\cf19 if} (Status == SessionStatus.NotStarted) {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "The session is not started yet"});\par
00398         \}\par
00399 \par
00404         {\cf17 protected} {\cf18 void} ThrowIfEnded()\par
00405         \{\par
00406             {\cf19 if} (Status == SessionStatus.Ended) {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "The session is ended"});\par
00407         \}\par
00408 \par
00421         {\cf17 protected} {\cf17 abstract} Task<bool> RunAsync(ISessionHost sessionHost, CancellationToken cancellationToken);\par
00422     \}\par
00423 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionContainer.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionContainer.cs}
{\xe \v SessionContainer.cs}
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.SessionContainer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents container to store sessions. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionContainer.cs\par \pard\plain 
{\tc\tcl2 \v SessionContainer.cs}
{\xe \v SessionContainer.cs}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00006     {\cf17 public} {\cf17 partial class }SessionContainer\par
00007     \{\par
00008         readonly {\cf18 object} _addLock = {\cf17 new} object();\par
00009         {\cf17 private} readonly Dictionary<int, SessionHolder> SessionPool = {\cf17 new} Dictionary<int, SessionHolder>();\par
00010         {\cf17 private} readonly List<Task> TaskPool = {\cf17 new} List<Task>();\par
00011         {\cf17 private} ISession[] sessions;\par
00012         {\cf17 private} CancellationTokenSource[] tokenSources;\par
00013         {\cf17 private} ICollection<SessionHolder> holders;\par
00014 \par
00018         {\cf17 public} ISession[] Sessions\par
00019         \{\par
00020             {\cf17 get}\par
00021             \{\par
00022                 sessions ??= SessionPool.Values.Select(x => x.Session).ToArray();\par
00023 \par
00024                 {\cf19 return} sessions;\par
00025             \}\par
00026         \}\par
00027 \par
00031         {\cf17 public} Task[] Tasks => SessionPool.Values.Select(x => x.Task).Concat(TaskPool).Where(x => x != {\cf17 null}).ToArray();\par
00032 \par
00036         {\cf17 public} CancellationTokenSource[] TokenSources\par
00037         \{\par
00038             {\cf17 get}\par
00039             \{\par
00040                 tokenSources ??= SessionPool.Values.Select(x => x.TokenSource).ToArray();\par
00041 \par
00042                 {\cf19 return} tokenSources;\par
00043             \}\par
00044         \}\par
00045 \par
00049         {\cf17 public} ICollection<SessionHolder> Holders\par
00050         \{\par
00051             {\cf17 get}\par
00052             \{\par
00053                 holders ??= SessionPool.Values;\par
00054 \par
00055                 {\cf19 return} holders;\par
00056             \}\par
00057         \}\par
00058 \par
00063         {\cf17 public} {\cf18 int} Add(SessionHolder sessionHolder)\par
00064         \{\par
00065             lock (_addLock)\par
00066             \{\par
00067                 {\cf18 int} rn = SessionPool.Keys.LastOrDefault() + 1;\par
00068                 sessionHolder.Id = rn;\par
00069                 SessionPool[rn] = sessionHolder;\par
00070                 ResetCache();\par
00071                 {\cf19 return} rn;\par
00072             \}\par
00073         \}\par
00074 \par
00081         {\cf17 public} {\cf18 void} AddMonitoringTask(Task task)\par
00082         \{\par
00083             lock (_addLock)\par
00084             \{\par
00085                 TaskPool.Add(task);\par
00086                 ResetCache();\par
00087             \}\par
00088         \}\par
00089 \par
00096         {\cf17 public} {\cf18 void} Remove({\cf18 int} {\cf18 id})\par
00097         \{\par
00098             SessionPool.Remove({\cf18 id});\par
00099             ResetCache();\par
00100         \}\par
00101 \par
00102         {\cf17 private} {\cf18 void} ResetCache()\par
00103         \{\par
00104             sessions = {\cf17 null};\par
00105             tokenSources = {\cf17 null};\par
00106             holders = {\cf17 null};\par
00107         \}\par
00108     \}\par
00109 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionEndReason.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionEndReason.cs}
{\xe \v SessionEndReason.cs}
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SAPTeam.Kryptor.Client.SessionEndReason} \{ {\b SAPTeam.Kryptor.Client.None}
, {\b SAPTeam.Kryptor.Client.Completed}
, {\b SAPTeam.Kryptor.Client.Failed}
, {\b SAPTeam.Kryptor.Client.Cancelled}
, {\b SAPTeam.Kryptor.Client.Skipped}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents reason of session ending. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionEndReason.cs\par \pard\plain 
{\tc\tcl2 \v SessionEndReason.cs}
{\xe \v SessionEndReason.cs}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00006     {\cf17 public} {\cf17 enum} SessionEndReason\par
00007     \{\par
00011         None,\par
00012 \par
00016         Completed,\par
00017 \par
00021         Failed,\par
00022 \par
00026         Cancelled,\par
00027 \par
00031         Skipped,\par
00032     \}\par
00033 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionEventArgs.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionEventArgs.cs}
{\xe \v SessionEventArgs.cs}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.SessionEventArgs}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold session events data. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionEventArgs.cs\par \pard\plain 
{\tc\tcl2 \v SessionEventArgs.cs}
{\xe \v SessionEventArgs.cs}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }SessionEventArgs : SessionUpdateEventArgs\par
00007     \{\par
00011         {\cf17 public} SessionStatus PreviousStatus \{ {\cf17 get}; {\cf17 internal} {\cf17 set}; \}\par
00012 \par
00016         {\cf17 public} SessionStatus Status \{ {\cf17 get}; {\cf17 internal} {\cf17 set}; \}\par
00017 \par
00021         {\cf17 public} SessionEndReason EndReason \{ {\cf17 get}; {\cf17 internal} {\cf17 set}; \}\par
00022 \par
00026         {\cf17 public} Exception Exception \{ {\cf17 get}; {\cf17 internal} {\cf17 set}; \}\par
00027 \par
00031         {\cf17 public} {\cf18 string}[] Messages \{ {\cf17 get}; {\cf17 internal} {\cf17 set}; \}\par
00032     \}\par
00033 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionGroup.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionGroup.cs}
{\xe \v SessionGroup.cs}
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.SessionGroup}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides High-Performance session monitoring solution. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionGroup.cs\par \pard\plain 
{\tc\tcl2 \v SessionGroup.cs}
{\xe \v SessionGroup.cs}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections.Generic;\par
00003 {\cf17 using }System.Diagnostics;\par
00004 {\cf17 using }System.Linq;\par
00005 {\cf17 using }System.Text;\par
00006 {\cf17 using }System.Threading.Tasks;\par
00007 \par
00008 {\cf17 using }static System.Collections.Specialized.BitVector32;\par
00009 \par
00010 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00011 \{\par
00015     {\cf17 public} {\cf17 partial class }SessionGroup : ICollection<SessionHolder>\par
00016     \{\par
00017         {\cf18 object} _lockStatus = {\cf17 new} object();\par
00018         {\cf18 object} _lockStart = {\cf17 new} object();\par
00019         {\cf18 object} _lockEnd = {\cf17 new} object();\par
00020 \par
00021         {\cf18 int} _slotId = 0;\par
00022         {\cf17 private} {\cf18 double} _progress = 0;\par
00023         {\cf18 double}[] _progressArray;\par
00024         {\cf17 private} readonly List<string> messages = {\cf17 new} List<string>();\par
00025 \par
00032         {\cf17 internal} List<SessionHolder> WaitingSessions \{ {\cf17 get}; \} = {\cf17 new} List<SessionHolder>();\par
00033 \par
00037         {\cf17 public} {\cf18 int} Waiting \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00038 \par
00042         {\cf17 public} {\cf18 int} Running \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00043 \par
00047         {\cf17 public} {\cf18 int} Ended \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00048 \par
00052         {\cf17 public} {\cf18 int} Completed \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00053 \par
00057         {\cf17 public} {\cf18 int} Cancelled \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00058 \par
00062         {\cf17 public} {\cf18 int} Failed \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00063 \par
00067         {\cf17 public} {\cf18 int} Skipped \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00068 \par
00072         {\cf17 public} {\cf18 int} Unknown \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00073 \par
00084         {\cf17 public} SessionStatus Status \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00085 \par
00105         {\cf17 public} SessionEndReason EndReason \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00106 \par
00113         {\cf17 public} {\cf18 string}[] Messages => messages.ToArray();\par
00114 \par
00121         {\cf17 public} Stopwatch Timer \{ {\cf17 get}; \} = {\cf17 new} Stopwatch();\par
00122 \par
00126         {\cf17 public} {\cf18 double} Progress => _progress;\par
00127 \par
00132         {\cf17 protected} {\cf18 void} AddHooks(SessionHolder sessionHolder)\par
00133         \{\par
00134             var session = sessionHolder.Session;\par
00135 \par
00136             var slotId = _slotId++;\par
00137             WaitingSessions.Add(sessionHolder);\par
00138             Waiting++;\par
00139 \par
00140             session.StatusChanged += (o, e) => OnSessionStatusChanged(sessionHolder, o, e);\par
00141             session.SessionStarted += OnSessionStarted;\par
00142             session.ProgressChanged += (o, e) => OnSessionProgressChanged(slotId, o, e);\par
00143             session.SessionEnded += OnSessionEnded;\par
00144         \}\par
00145 \par
00146         {\cf17 private} {\cf18 void} OnSessionStatusChanged(SessionHolder sessionHolder, {\cf18 object} sender, SessionEventArgs e)\par
00147         \{\par
00148             lock (_lockStatus)\par
00149             \{\par
00150                 {\cf19 if} (e.PreviousStatus == SessionStatus.NotStarted)\par
00151                 \{\par
00152                     WaitingSessions.Remove(sessionHolder);\par
00153                 \}\par
00154 \par
00155                 {\cf19 if} (e.Status == SessionStatus.Running)\par
00156                 \{\par
00157                     Waiting--;\par
00158                     Running++;\par
00159                 \}\par
00160                 {\cf19 else} {\cf19 if} (e.Status == SessionStatus.Ended && e.PreviousStatus == SessionStatus.Running)\par
00161                 \{\par
00162                     Running--;\par
00163                     Ended++;\par
00164                 \}\par
00165                 {\cf19 else} {\cf19 if} (e.Status == SessionStatus.Ended && e.PreviousStatus == SessionStatus.NotStarted)\par
00166                 \{\par
00167                     Waiting--;\par
00168                     Ended++;\par
00169                 \}\par
00170             \}\par
00171         \}\par
00172 \par
00173         {\cf18 void} OnSessionStarted({\cf18 object} sender, SessionEventArgs e)\par
00174         \{\par
00175             lock (_lockStart)\par
00176             \{\par
00177                 {\cf19 if} (Status != SessionStatus.NotStarted) {\cf19 return};\par
00178 \par
00179                 Status = SessionStatus.Running;\par
00180                 Timer.Start();\par
00181 \par
00182                 IsLocked = {\cf17 true};\par
00183                 _progressArray = {\cf17 new} {\cf18 double}[Count];\par
00184             \}\par
00185         \}\par
00186 \par
00187         {\cf18 void} OnSessionProgressChanged({\cf18 int} slotId, {\cf18 object} sender, SessionUpdateEventArgs e)\par
00188         \{\par
00189             {\cf19 if} (e.Progress <= 0 ||  e.Progress > 100) {\cf19 return};\par
00190 \par
00191             var fragment = e.Progress / Count;\par
00192             Interlocked.Exchange(ref _progress, _progress + fragment - _progressArray[slotId]);\par
00193             _progressArray[slotId] = fragment;\par
00194         \}\par
00195 \par
00196         {\cf18 void} OnSessionEnded({\cf18 object} sender, SessionEventArgs e)\par
00197         \{\par
00198             lock (_lockEnd)\par
00199             \{\par
00200                 {\cf19 if} (e.EndReason == SessionEndReason.Completed) Completed++;\par
00201                 {\cf19 else} {\cf19 if} (e.EndReason == SessionEndReason.Failed) Failed++;\par
00202                 {\cf19 else} {\cf19 if} (e.EndReason == SessionEndReason.Cancelled) Cancelled++;\par
00203                 {\cf19 else} {\cf19 if} (e.EndReason == SessionEndReason.Skipped) Skipped++;\par
00204                 {\cf19 else} Unknown++;\par
00205 \par
00206                 ISession session = (ISession)sender;\par
00207                 Array.ForEach(e.Messages, (x) => messages.Add(${\cf22 "\{session.Name\} -> \{x\}"}));\par
00208 \par
00209                 {\cf19 if} (EndReason == SessionEndReason.None && e.EndReason != SessionEndReason.Completed)\par
00210                 \{\par
00211                     EndReason = e.EndReason;\par
00212                 \}\par
00213 \par
00214                 {\cf19 if} (Waiting == 0 && Running == 0)\par
00215                 \{\par
00216                     {\cf19 if} (EndReason == SessionEndReason.None)\par
00217                     \{\par
00218                         EndReason = SessionEndReason.Completed;\par
00219                     \}\par
00220 \par
00221                     Status = SessionStatus.Ended;\par
00222                 \}\par
00223             \}\par
00224         \}\par
00225     \}\par
00226 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionGroupStorage.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionGroupStorage.cs}
{\xe \v SessionGroupStorage.cs}
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.SessionGroup}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides High-Performance session monitoring solution. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionGroupStorage.cs\par \pard\plain 
{\tc\tcl2 \v SessionGroupStorage.cs}
{\xe \v SessionGroupStorage.cs}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System;\par
00002 {\cf17 using }System.Collections;\par
00003 {\cf17 using }System.Collections.Generic;\par
00004 {\cf17 using }System.Linq;\par
00005 {\cf17 using }System.Text;\par
00006 {\cf17 using }System.Threading.Tasks;\par
00007 \par
00008 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00009 \{\par
00010     {\cf17 public} {\cf17 partial class }SessionGroup\par
00011     \{\par
00012         {\cf18 object} _addLock = {\cf17 new} object();\par
00013 \par
00014         readonly HashSet<SessionHolder> storage = {\cf17 new} HashSet<SessionHolder>();\par
00015 \par
00022         {\cf17 public} {\cf18 bool} IsLocked \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00023 \par
00028         {\cf17 public} {\cf18 void} ThrowIfLocked()\par
00029         \{\par
00030             {\cf19 if} (IsLocked)\par
00031             \{\par
00032                 {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "The session group is locked"});\par
00033             \}\par
00034         \}\par
00035 \par
00037         {\cf17 public} {\cf18 int} Count => storage.Count;\par
00038 \par
00040         {\cf17 public} {\cf18 bool} IsReadOnly => IsLocked;\par
00041 \par
00043         {\cf17 public} {\cf18 void} Add(SessionHolder item)\par
00044         \{\par
00045             ThrowIfLocked();\par
00046 \par
00047             lock (_addLock)\par
00048             \{\par
00049                 {\cf19 if} (item == {\cf17 null}) {\cf19 throw} {\cf17 new} ArgumentNullException(nameof(item));\par
00050 \par
00051                 {\cf19 if} (!item.Session.IsReady(CancellationToken.None))\par
00052                 \{\par
00053                     {\cf19 throw} {\cf17 new} NotSupportedException({\cf22 "Session dependency feature is not supported by SessionGroup"});\par
00054                 \}\par
00055 \par
00056                 {\cf19 if} (item.Session.Status != SessionStatus.NotStarted)\par
00057                 \{\par
00058                     {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "Cannot add an already started session"});\par
00059                 \}\par
00060 \par
00061                 {\cf19 if} (storage.Add(item))\par
00062                 \{\par
00063                     AddHooks(item);\par
00064                 \}\par
00065                 {\cf19 else}\par
00066                 \{\par
00067                     {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "Item is already exists"});\par
00068                 \}\par
00069             \}\par
00070         \}\par
00071 \par
00073         {\cf17 public} {\cf18 void} Clear()\par
00074         \{\par
00075             ThrowIfLocked();\par
00076             storage.Clear();\par
00077         \}\par
00078 \par
00080         {\cf17 public} {\cf18 bool} Contains(SessionHolder item) => storage.Contains(item);\par
00081 \par
00083         {\cf17 public} {\cf18 void} CopyTo(SessionHolder[] array, {\cf18 int} arrayIndex) => storage.CopyTo(array, arrayIndex);\par
00084 \par
00086         {\cf17 public} {\cf18 bool} Remove(SessionHolder item)\par
00087         \{\par
00088             ThrowIfLocked();\par
00089             {\cf19 return} storage.Remove(item);\par
00090         \}\par
00091 \par
00093         {\cf17 public} IEnumerator<SessionHolder> GetEnumerator() => storage.GetEnumerator();\par
00094 \par
00096         IEnumerator IEnumerable.GetEnumerator() => storage.GetEnumerator();\par
00097     \}\par
00098 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionHolder.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionHolder.cs}
{\xe \v SessionHolder.cs}
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.SessionHolder}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to store session and related informations. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionHolder.cs\par \pard\plain 
{\tc\tcl2 \v SessionHolder.cs}
{\xe \v SessionHolder.cs}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }SessionHolder\par
00007     \{\par
00011         {\cf17 public} {\cf18 int} Id \{ {\cf17 get}; {\cf17 internal} {\cf17 set}; \}\par
00012 \par
00016         {\cf17 public} ISession Session \{ {\cf17 get}; \}\par
00017 \par
00021         {\cf17 public} Task Task \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00022 \par
00026         {\cf17 public} CancellationTokenSource TokenSource \{ {\cf17 get}; {\cf17 set}; \}\par
00027 \par
00028         {\cf17 internal} {\cf18 bool} AutoRemove \{ {\cf17 get}; {\cf17 set}; \}\par
00029 \par
00039         {\cf17 public} SessionHolder(ISession session, CancellationTokenSource tokenSource)\par
00040         \{\par
00041             {\cf19 if} (session.Status != SessionStatus.NotStarted)\par
00042             \{\par
00043                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "The session is already started."});\par
00044             \}\par
00045 \par
00046             Session = session;\par
00047             TokenSource = tokenSource;\par
00048         \}\par
00049 \par
00060         {\cf17 public} Task StartTask(ISessionHost sessionHost, {\cf18 bool} throwIfRunning = {\cf17 true})\par
00061         \{\par
00062             {\cf19 if} (Task != {\cf17 null})\par
00063             \{\par
00064                 {\cf19 return} throwIfRunning ? {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "Session is already started."}) : {\cf17 null};\par
00065             \}\par
00066 \par
00067             Task = Session.StartAsync(sessionHost, TokenSource.Token);\par
00068             {\cf19 return} Task;\par
00069         \}\par
00070     \}\par
00071 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionManager.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionManager.cs}
{\xe \v SessionManager.cs}
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.SessionContainer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents container to store sessions. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionManager.cs\par \pard\plain 
{\tc\tcl2 \v SessionManager.cs}
{\xe \v SessionManager.cs}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00004 \{\par
00005     {\cf17 public} {\cf17 partial class }SessionContainer\par
00006     \{\par
00007         {\cf17 private} readonly {\cf18 object} _lock = {\cf17 new} object();\par
00008         {\cf17 private} readonly ISessionHost _sessionHost;\par
00009         {\cf17 private} {\cf18 bool} _cancellationRequested;\par
00010         {\cf17 private} SessionGroup _sessionGroup;\par
00011 \par
00015         {\cf17 public} {\cf18 int} MaxRunningSessions \{ {\cf17 get}; {\cf17 set}; \}\par
00016 \par
00026         {\cf17 public} SessionContainer(ISessionHost sessionHost, {\cf18 int} maxRunningSessions)\par
00027         \{\par
00028             _sessionHost = sessionHost;\par
00029             MaxRunningSessions = maxRunningSessions;\par
00030         \}\par
00031 \par
00045         {\cf17 public} async Task WaitAll(CancellationToken cancellationToken)\par
00046         \{\par
00047             {\cf19 while} (!Sessions.All(x => x.Status == SessionStatus.Ended))\par
00048             \{\par
00049                 {\cf19 if} (cancellationToken.IsCancellationRequested && !_cancellationRequested)\par
00050                 \{\par
00051                     Cancel();\par
00052 \par
00053                     _cancellationRequested = {\cf17 true};\par
00054                 \}\par
00055 \par
00056                 await AsyncCompat.Delay(5);\par
00057             \}\par
00058 \par
00059             cancellationToken.ThrowIfCancellationRequested();\par
00060         \}\par
00061 \par
00072         {\cf17 public} {\cf18 void} WaitForRunningTasks() => Task.WaitAll(Tasks);\par
00073 \par
00077         {\cf17 public} {\cf18 void} Cancel()\par
00078         \{\par
00079             {\cf19 foreach} (CancellationTokenSource token {\cf19 in} TokenSources.Where(x => !x.IsCancellationRequested))\par
00080             \{\par
00081                 token.Cancel();\par
00082             \}\par
00083         \}\par
00084 \par
00101         {\cf17 public} SessionGroup SetSessionGroup(SessionGroup sessionGroup)\par
00102         \{\par
00103             ValidateSessionGroup();\par
00104 \par
00105             {\cf19 if} (_sessionGroup != {\cf17 null})\par
00106             \{\par
00107                 {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "Cannot set new session group while the current one is running"});\par
00108             \}\par
00109 \par
00110             {\cf19 if} (sessionGroup == {\cf17 null})\par
00111             \{\par
00112                 {\cf19 throw} {\cf17 new} ArgumentNullException(nameof(sessionGroup));\par
00113             \}\par
00114             {\cf19 else} {\cf19 if} (sessionGroup.IsLocked)\par
00115             \{\par
00116                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "Cannot use a locked session group"});\par
00117             \}\par
00118 \par
00119             _sessionGroup = sessionGroup;\par
00120             {\cf19 return} sessionGroup;\par
00121         \}\par
00122 \par
00123         {\cf18 void} ValidateSessionGroup()\par
00124         \{\par
00125             {\cf19 if} (_sessionGroup == {\cf17 null}) {\cf19 return};\par
00126 \par
00127             {\cf19 if} (_sessionGroup.Status == SessionStatus.Ended)\par
00128             \{\par
00129                 _sessionGroup = {\cf17 null};\par
00130             \}\par
00131         \}\par
00132 \par
00145         {\cf17 public} {\cf18 void} NewSession(ISession session, {\cf18 bool} autoRemove, {\cf18 bool} autoStart)\par
00146         \{\par
00147             ValidateSessionGroup();\par
00148             _sessionGroup?.ThrowIfLocked();\par
00149 \par
00150             SessionHolder sessionHolder = WrapSession(session, autoRemove);\par
00151 \par
00152             Add(sessionHolder);\par
00153 \par
00154             {\cf19 if} (_sessionGroup != {\cf17 null})\par
00155             \{\par
00156                 _sessionGroup.Add(sessionHolder);\par
00157             \}\par
00158             {\cf19 else} {\cf19 if} (autoStart)\par
00159             \{\par
00160                 StartQueuedSessions();\par
00161             \}\par
00162         \}\par
00163 \par
00174         {\cf17 public} {\cf17 static} SessionHolder WrapSession(ISession session, {\cf18 bool} autoRemove)\par
00175         \{\par
00176             {\cf19 if} (session.Status != SessionStatus.NotStarted)\par
00177             \{\par
00178                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "The session is already started."});\par
00179             \}\par
00180 \par
00181             CancellationTokenSource tokenSource = {\cf17 new} CancellationTokenSource();\par
00182 \par
00183             SessionHolder sessionHolder = {\cf17 new} SessionHolder(session, tokenSource)\par
00184             \{\par
00185                 AutoRemove = autoRemove\par
00186             \};\par
00187 \par
00188             {\cf19 return} sessionHolder;\par
00189         \}\par
00190 \par
00208         {\cf17 public} {\cf18 void} StartQueuedSessions()\par
00209         \{\par
00210             lock (_lock)\par
00211             \{\par
00212                 ValidateSessionGroup();\par
00213 \par
00214                 QueueProcessImpl();\par
00215             \}\par
00216         \}\par
00217 \par
00218         {\cf17 private} {\cf18 void} QueueProcessImpl()\par
00219         \{\par
00220             {\cf18 int} runningCount;\par
00221             List<SessionHolder> waiting;\par
00222 \par
00223             {\cf19 if} (_sessionGroup != {\cf17 null})\par
00224             \{\par
00225                 runningCount = _sessionGroup.Running;\par
00226                 waiting = _sessionGroup.WaitingSessions;\par
00227             \}\par
00228             {\cf19 else}\par
00229             \{\par
00230                 runningCount = Holders.Where(x => x.Session.Status == SessionStatus.Running).Count();\par
00231                 waiting = Holders.Where(x => x.Session.Status == SessionStatus.NotStarted && SafeIsRady(x)).ToList();\par
00232             \}\par
00233 \par
00234             {\cf19 if} (waiting.Count == 0 || runningCount >= MaxRunningSessions) {\cf19 return};\par
00235 \par
00236             {\cf18 int} toBeStarted = Math.Min(MaxRunningSessions - runningCount, waiting.Count);\par
00237             {\cf19 for} ({\cf18 int} i = 0; i < toBeStarted; i++)\par
00238             \{\par
00239                 {\cf19 try}\par
00240                 \{\par
00241                     SessionHolder sessionHolder = waiting[_sessionGroup != {\cf17 null} ? 0 : Math.Min(waiting.Count - 1, i)];\par
00242                     StartManagedSession(sessionHolder);\par
00243                 \}\par
00244                 {\cf19 catch}\par
00245                 \{\par
00246                     {\cf20 // Do not crash the SessionManager for ANY reasons. it may cause unexpected behavior and infinite loops.}\par
00247                     {\cf19 if} (_sessionHost.Verbose)\par
00248                     \{\par
00249                         {\cf19 throw};\par
00250                     \}\par
00251                 \}\par
00252             \}\par
00253         \}\par
00254 \par
00255         {\cf17 private} {\cf17 static} {\cf18 bool} SafeIsRady(SessionHolder holder)\par
00256         \{\par
00257             {\cf18 bool} ready;\par
00258 \par
00259             {\cf19 try}\par
00260             \{\par
00261                 ready = holder.Session.IsReady(holder.TokenSource.Token);\par
00262             \}\par
00263             {\cf19 catch}\par
00264             \{\par
00265                 ready = {\cf17 false};\par
00266             \}\par
00267 \par
00268             {\cf19 return} ready;\par
00269         \}\par
00270 \par
00271         {\cf17 private} {\cf18 void} StartManagedSession(SessionHolder sessionHolder)\par
00272         \{\par
00273             Task task = sessionHolder.StartTask(_sessionHost, {\cf17 true});\par
00274             {\cf19 if} (task != {\cf17 null})\par
00275             \{\par
00276                 task.ContinueWith(x => StartQueuedSessions());\par
00277 \par
00278                 {\cf19 if} (sessionHolder.AutoRemove)\par
00279                 \{\par
00280                     task.ContinueWith(x => Remove(sessionHolder.Id));\par
00281                 \}\par
00282             \}\par
00283         \}\par
00284     \}\par
00285 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionRequest.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionRequest.cs}
{\xe \v SessionRequest.cs}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.SessionRequest< TResponse >}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a class for communicattion between the session and the user. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionRequest.cs\par \pard\plain 
{\tc\tcl2 \v SessionRequest.cs}
{\xe \v SessionRequest.cs}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00009     {\cf17 public} {\cf17 class }SessionRequest<TResponse>\par
00010     \{\par
00014         {\cf17 public} {\cf18 string} Message \{ {\cf17 get}; \}\par
00015 \par
00019         {\cf17 public} TResponse DefaultValue \{ {\cf17 get}; \}\par
00020 \par
00024         {\cf17 public} TResponse Response \{ {\cf17 get}; {\cf17 set}; \}\par
00025 \par
00038         {\cf17 public} SessionRequest({\cf18 string} message, TResponse defaultValue)\par
00039         \{\par
00040             Message = message;\par
00041             DefaultValue = defaultValue;\par
00042         \}\par
00043     \}\par
00044 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionStatus.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionStatus.cs}
{\xe \v SessionStatus.cs}
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SAPTeam.Kryptor.Client.SessionStatus} \{ {\b SAPTeam.Kryptor.Client.NotStarted}
, {\b SAPTeam.Kryptor.Client.Running}
, {\b SAPTeam.Kryptor.Client.Managed}
, {\b SAPTeam.Kryptor.Client.Ended}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents status of the session. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionStatus.cs\par \pard\plain 
{\tc\tcl2 \v SessionStatus.cs}
{\xe \v SessionStatus.cs}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00006     {\cf17 public} {\cf17 enum} SessionStatus\par
00007     \{\par
00011         NotStarted,\par
00012 \par
00016         Running,\par
00017 \par
00021         Managed,\par
00022 \par
00026         Ended,\par
00027     \}\par
00028 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionUpdateEventArgs.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SessionUpdateEventArgs.cs}
{\xe \v SessionUpdateEventArgs.cs}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.SessionUpdateEventArgs}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents class to hold session updates event data. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionUpdateEventArgs.cs\par \pard\plain 
{\tc\tcl2 \v SessionUpdateEventArgs.cs}
{\xe \v SessionUpdateEventArgs.cs}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }SessionUpdateEventArgs : EventArgs\par
00007     \{\par
00011         {\cf17 public} {\cf18 double} Progress \{ {\cf17 get}; {\cf17 internal} {\cf17 set}; \}\par
00012 \par
00016         {\cf17 public} {\cf18 string} Description \{ {\cf17 get}; {\cf17 internal} {\cf17 set}; \}\par
00017 \par
00021         {\cf17 public} {\cf18 bool} IsPause \{ {\cf17 get}; {\cf17 internal} {\cf17 set}; \}\par
00022     \}\par
00023 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Utilities.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Utilities.cs}
{\xe \v Utilities.cs}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Client.Utilities}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides common utilities used by kryptor front ends. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Client}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Utilities.cs\par \pard\plain 
{\tc\tcl2 \v Utilities.cs}
{\xe \v Utilities.cs}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Text.Json;\par
00002 {\cf17 using }System.Text.Json.Serialization;\par
00003 \par
00004 {\cf17 using }SAPTeam.Kryptor.Client.Security;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor.Client\par
00007 \{\par
00011     {\cf17 public} {\cf17 static} {\cf17 class }Utilities\par
00012     \{\par
00013         {\cf17 private} {\cf17 static} readonly JsonSerializerOptions jOptions = {\cf17 new} JsonSerializerOptions()\par
00014         \{\par
00015             WriteIndented = {\cf17 true},\par
00016             DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingDefault,\par
00017         \};\par
00018 \par
00022         {\cf17 public} {\cf17 static} JsonWorker ClientTypesJsonWorker \{ {\cf17 get}; \}\par
00023 \par
00024         {\cf17 static} Utilities() =>\par
00025 {\cf21 #if NET6_0_OR_GREATER}\par
00026             ClientTypesJsonWorker = {\cf17 new} JsonWorker({\cf17 null}, ClientTypesJsonSerializerContext.Default);\par
00027 {\cf21 #else}\par
00028             ClientTypesJsonWorker = {\cf17 new} JsonWorker(jOptions, {\cf17 null});\par
00029 {\cf21 #endif}\par
00030 \par
00046         {\cf17 public} {\cf17 static} KeyStore GenerateKeyStoreFromToken(TransformerToken token, EventHandler<double> progressReport, {\cf18 int} margin = 0)\par
00047         \{\par
00048             ITranformer transformer = Transformers.GetTranformer(token);\par
00049             transformer.ProgressChanged += progressReport;\par
00050 \par
00051             {\cf18 byte}[] buffer = {\cf17 new} {\cf18 byte}[(token.KeySize * 32) + margin];\par
00052             transformer.Generate(buffer, token.Rotate);\par
00053 \par
00054             progressReport(transformer, -1);\par
00055             {\cf19 return} {\cf17 new} KeyStore(buffer);\par
00056         \}\par
00057 \par
00068         {\cf17 public} {\cf17 static} {\cf18 string} GetNewFileName({\cf18 string} path, {\cf18 string} newName)\par
00069         \{\par
00070             {\cf18 string} destination = Path.Combine(path, newName);\par
00071             {\cf18 int} suffix = 2;\par
00072 \par
00073             {\cf19 while} (File.Exists(destination))\par
00074             \{\par
00075                 {\cf18 string} tempName = ${\cf22 "\{Path.GetFileNameWithoutExtension(newName)\} (\{suffix++\})\{Path.GetExtension(newName)\}"};\par
00076 \par
00077                 {\cf19 if} (!File.Exists(Path.Combine(path, tempName)))\par
00078                 \{\par
00079                     destination = Path.Combine(path, tempName);\par
00080                 \}\par
00081             \}\par
00082 \par
00083             {\cf19 return} destination;\par
00084         \}\par
00085 \par
00096         {\cf17 public} {\cf17 static} TimeSpan CalculateRemainingTimeSpan({\cf18 double} progress, {\cf18 long} elapsedMilliseconds) => TimeSpan.FromMilliseconds(({\cf18 int})CalculateRemainingTime(progress, elapsedMilliseconds));\par
00097 \par
00108         {\cf17 public} {\cf17 static} {\cf18 double} CalculateRemainingTime({\cf18 double} progress, {\cf18 long} elapsedMilliseconds)\par
00109         \{\par
00110             {\cf18 double} rProg = Math.Round(progress);\par
00111             {\cf18 double} remTime = progress > 0 ? elapsedMilliseconds / rProg * (100 - rProg) : 0;\par
00112             {\cf19 return} remTime;\par
00113         \}\par
00114 \par
00122         {\cf17 public} {\cf17 static} {\cf18 string} ConvertBytes({\cf18 long} bytes)\par
00123         \{\par
00124             {\cf18 string}[] sizes = \{ {\cf22 "B"}, {\cf22 "KB"}, {\cf22 "MB"}, {\cf22 "GB"}, {\cf22 "TB"}, {\cf22 "PB"}, {\cf22 "EB"}, {\cf22 "ZB"}, {\cf22 "YB"} \};\par
00125             {\cf18 double} len = bytes;\par
00126             {\cf18 int} order = 0;\par
00127 \par
00128             {\cf19 while} (len >= 1024 && order < sizes.Length - 1)\par
00129             \{\par
00130                 order++;\par
00131                 len /= 1024;\par
00132             \}\par
00133 \par
00134             {\cf19 return} ${\cf22 "\{len:0.##\}\{sizes[order]\}"};\par
00135         \}\par
00136 \par
00141         {\cf17 public} {\cf17 static} {\cf18 string} CreateTempFolder()\par
00142         \{\par
00143             {\cf18 string} fPath;\par
00144 \par
00145             {\cf19 while} ({\cf17 true})\par
00146             \{\par
00147                 fPath = Path.Combine(Path.GetTempPath(), Path.GetRandomFileName());\par
00148                 {\cf19 if} (!File.Exists(fPath) && !Directory.Exists(fPath))\par
00149                 \{\par
00150                     {\cf19 break};\par
00151                 \}\par
00152             \}\par
00153 \par
00154             Directory.CreateDirectory(fPath);\par
00155             {\cf19 return} fPath;\par
00156         \}\par
00157 \par
00167         {\cf17 public} {\cf17 static} {\cf18 string} EnsureDirectoryExists({\cf18 string} path)\par
00168         \{\par
00169             {\cf18 string} absPath = Path.GetFullPath(path);\par
00170 \par
00171             {\cf19 if} (!Directory.Exists(absPath))\par
00172             \{\par
00173                 Directory.CreateDirectory(absPath);\par
00174             \}\par
00175 \par
00176             {\cf19 return} absPath;\par
00177         \}\par
00178 \par
00188         {\cf17 public} {\cf17 static} {\cf18 string} EnsureFileExists({\cf18 string} path)\par
00189         \{\par
00190             {\cf18 string} absPath = Path.GetFullPath(path);\par
00191 \par
00192             {\cf19 if} (!File.Exists(absPath))\par
00193             \{\par
00194                 File.Create(absPath).Dispose();\par
00195             \}\par
00196 \par
00197             {\cf19 return} absPath;\par
00198         \}\par
00199 \par
00211         {\cf17 public} {\cf17 static} {\cf18 byte}[] XOR({\cf18 byte}[] a1, {\cf18 byte}[] a2)\par
00212         \{\par
00213             {\cf19 if} (a1.Length == a2.Length)\par
00214             \{\par
00215                 {\cf18 byte}[] result = {\cf17 new} {\cf18 byte}[a1.Length];\par
00216                 {\cf19 for} ({\cf18 int} i = 0; i < a1.Length; i++)\par
00217                 \{\par
00218                     result[i] = (byte)(a1[i] ^ a2[i]);\par
00219                 \}\par
00220 \par
00221                 {\cf19 return} result;\par
00222             \}\par
00223             {\cf19 else}\par
00224             \{\par
00225                 {\cf19 throw} {\cf17 new} ArgumentException();\par
00226             \}\par
00227         \}\par
00228     \}\par
00229 \par
00230 {\cf21 #if NET6_0_OR_GREATER}\par
00231     [JsonSourceGenerationOptions(WriteIndented = {\cf17 true}, DefaultIgnoreCondition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]\par
00232     [JsonSerializable(typeof(WordlistVerificationMetadata))]\par
00233     [JsonSerializable(typeof(List<WordlistVerificationMetadata>))]\par
00234     [JsonSerializable(typeof(KeyChain))]\par
00235     [JsonSerializable(typeof(List<KeyChain>))]\par
00236     [JsonSerializable(typeof(WordlistIndex))]\par
00237     [JsonSerializable(typeof(WordlistIndexLegacy))]\par
00238     {\cf17 internal} {\cf17 partial class }ClientTypesJsonSerializerContext : JsonSerializerContext \{ \}\par
00239 {\cf21 #endif}\par
00240 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoProcess.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CryptoProcess.cs}
{\xe \v CryptoProcess.cs}
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SAPTeam.Kryptor.CryptoProcess}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds data about the crypto process. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoProcess.cs\par \pard\plain 
{\tc\tcl2 \v CryptoProcess.cs}
{\xe \v CryptoProcess.cs}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor\par
00002 \{\par
00006     {\cf17 public} {\cf17 struct }CryptoProcess\par
00007     \{\par
00008         {\cf17 private} {\cf18 bool} _initialized;\par
00009 \par
00013         {\cf17 public} {\cf18 int} ChunkIndex \{ {\cf17 get}; {\cf17 set}; \}\par
00014 \par
00018         {\cf17 public} {\cf18 int} BlockIndex \{ {\cf17 get}; {\cf17 set}; \}\par
00019 \par
00023         {\cf17 public} {\cf18 int} BlockSize \{ {\cf17 get}; {\cf17 set}; \}\par
00024 \par
00028         {\cf17 public} {\cf18 byte}[] BlockHash \{ {\cf17 get}; {\cf17 set}; \}\par
00029 \par
00033         {\cf17 public} Dictionary<string, object> BlockData \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00034 \par
00038         {\cf17 public} Dictionary<string, object> ProcessData \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00039 \par
00043         {\cf17 public} {\cf18 void} InitializeData()\par
00044         \{\par
00045             {\cf19 if} (!_initialized)\par
00046             \{\par
00047                 BlockIndex = 0;\par
00048                 BlockHash = Array.Empty<{\cf18 byte}>();\par
00049 \par
00050                 ChunkIndex = 0;\par
00051 \par
00052                 BlockData = {\cf17 new} Dictionary<string, object>();\par
00053                 ProcessData = {\cf17 new} Dictionary<string, object>();\par
00054 \par
00055                 _initialized = {\cf17 true};\par
00056             \}\par
00057         \}\par
00058 \par
00059         {\cf17 internal} {\cf18 void} NextBlock({\cf18 bool} resetChunk)\par
00060         \{\par
00061             BlockIndex++;\par
00062 \par
00063             BlockData.Clear();\par
00064             BlockHash = Array.Empty<{\cf18 byte}>();\par
00065 \par
00066             {\cf19 if} (resetChunk)\par
00067             \{\par
00068                 ChunkIndex = 0;\par
00069             \}\par
00070         \}\par
00071     \}\par
00072 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoProvider.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CryptoProvider.cs}
{\xe \v CryptoProvider.cs}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.CryptoProvider}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the abstract base class for KES Crypto Providers. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoProvider.cs\par \pard\plain 
{\tc\tcl2 \v CryptoProvider.cs}
{\xe \v CryptoProvider.cs}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.CryptoProviders;\par
00002 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00003 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00004 \par
00005 {\cf17 namespace }SAPTeam.Kryptor\par
00006 \{\par
00010     {\cf17 public} {\cf17 abstract} {\cf17 class }CryptoProvider : ICloneable\par
00011     \{\par
00015         {\cf17 public} {\cf17 virtual} {\cf18 int} DecryptionChunkSize => 32;\par
00016 \par
00020         {\cf17 public} {\cf17 virtual} {\cf18 int} EncryptionChunkSize => 31;\par
00021 \par
00022         {\cf17 private} CryptoProviderConfiguration configuration;\par
00023 \par
00027         {\cf17 public} CryptoProviderConfiguration Configuration\par
00028         \{\par
00029             {\cf17 get} => configuration;\par
00030             {\cf17 private} {\cf17 set}\par
00031             \{\par
00032                 {\cf18 string} selfId = CryptoProviderFactory.GetRegisteredCryptoProviderId(GetType());\par
00033                 {\cf19 if} (value.Id != {\cf17 null} && CryptoProviderFactory.GetRegisteredCryptoProviderId(value.Id) != selfId)\par
00034                 \{\par
00035                     {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "Invalid configuration"});\par
00036                 \}\par
00037 \par
00038                 CryptoProviderConfiguration clone = (CryptoProviderConfiguration)value.Clone();\par
00039                 clone.Id = selfId;\par
00040                 configuration = clone;\par
00041             \}\par
00042         \}\par
00043 \par
00047         {\cf17 public} KeyStore KeyStore \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00048 \par
00055         {\cf17 protected} {\cf17 internal} {\cf17 virtual} {\cf18 void} UpdateHeader(Header header)\par
00056         \{\par
00057             {\cf19 if} (({\cf18 int})header.Verbosity > 2)\par
00058             \{\par
00059                 header.Configuration = Configuration;\par
00060             \}\par
00061         \}\par
00062 \par
00069         {\cf17 internal} CryptoProvider Fork(KeyStore keyStore, CryptoProviderConfiguration configuration = {\cf17 null})\par
00070         \{\par
00071             {\cf19 if} (Configuration != {\cf17 null})\par
00072             \{\par
00073                 {\cf19 throw} {\cf17 new} ApplicationException({\cf22 "Broken crypto provider instance storage"});\par
00074             \}\par
00075 \par
00076             CryptoProvider clone = Clone() as CryptoProvider;\par
00077             clone.ApplyHeader(keyStore, configuration);\par
00078             return clone;\par
00079         \}\par
00080 \par
00090         protected virtual {\cf18 void} ApplyHeader(KeyStore keyStore, CryptoProviderConfiguration configuration = null)\par
00091         \{\par
00092             KeyStore = keyStore;\par
00093 \par
00094             Configuration = configuration ?? {\cf17 new} CryptoProviderConfiguration();\par
00095         \}\par
00096 \par
00108         {\cf17 public} {\cf17 virtual} async Task<byte[]> EncryptBlockAsync({\cf18 byte}[] data, CryptoProcess process, CancellationToken cancellationToken)\par
00109         \{\par
00110             AesHelper.CheckArgument(data, nameof(data));\par
00111 \par
00112             {\cf19 if} (process.BlockIndex == 0 && process.ChunkIndex > 0)\par
00113             \{\par
00114                 process.ChunkIndex = 0;\par
00115             \}\par
00116 \par
00117             process.BlockHash = Configuration.RemoveHash ? Array.Empty<{\cf18 byte}>() : data.Sha256();\par
00118             {\cf18 byte}[] hash = Configuration.DynamicBlockProccessing ? Transformers.Rotate(process.BlockHash, DynamicEncryption.GetDynamicBlockEntropy(KeyStore, process)) : process.BlockHash;\par
00119             List<byte> result = {\cf17 new} List<byte>(hash);\par
00120 \par
00121             {\cf19 foreach} ({\cf18 byte}[] chunk {\cf19 in} data.Chunk(EncryptionChunkSize))\par
00122             \{\par
00123                 IEnumerable<byte> c = await EncryptChunkAsync(chunk, process, cancellationToken);\par
00124                 result.AddRange(Configuration.DynamicBlockProccessing ? Transformers.Rotate(c.ToArray(), DynamicEncryption.GetDynamicChunkEntropy(KeyStore, process)) : c);\par
00125                 process.ChunkIndex++;\par
00126             \}\par
00127 \par
00128             {\cf19 return} result.ToArray();\par
00129         \}\par
00130 \par
00142         {\cf17 public} {\cf17 virtual} async Task<byte[]> DecryptBlockAsync({\cf18 byte}[] data, CryptoProcess process, CancellationToken cancellationToken)\par
00143         \{\par
00144             AesHelper.CheckArgument(data, nameof(data));\par
00145 \par
00146             {\cf19 if} (process.BlockIndex == 0 && process.ChunkIndex > 0)\par
00147             \{\par
00148                 process.ChunkIndex = 0;\par
00149             \}\par
00150 \par
00151             IEnumerable<byte[]> chunks;\par
00152 \par
00153             {\cf19 if} (Configuration.RemoveHash)\par
00154             \{\par
00155                 chunks = data.Chunk(DecryptionChunkSize);\par
00156             \}\par
00157             {\cf19 else}\par
00158             \{\par
00159                 {\cf18 byte}[] _hash = data.Take(32).ToArray();\par
00160                 process.BlockHash = Configuration.DynamicBlockProccessing ? Transformers.Rotate(_hash, DynamicEncryption.GetDynamicBlockEntropy(KeyStore, process) * -1) : _hash;\par
00161 \par
00162                 {\cf20 /* Unmerged change from project 'Kryptor (netstandard2.0)'}\par
00163 {\cf20                 Before:}\par
00164 {\cf20                                 chunks = data.Skip(32).ChunkCompat(DecryptionChunkSize);}\par
00165 {\cf20                 After:}\par
00166 {\cf20                                 chunks = data.Skip(32).Chunk(DecryptionChunkSize);}\par
00167 {\cf20                 */}\par
00168 \par
00169                 {\cf20 /* Unmerged change from project 'Kryptor (net461)'}\par
00170 {\cf20                 Before:}\par
00171 {\cf20                                 chunks = data.Skip(32).ChunkCompat(DecryptionChunkSize);}\par
00172 {\cf20                 After:}\par
00173 {\cf20                                 chunks = data.Skip(32).Chunk(DecryptionChunkSize);}\par
00174 {\cf20                 */}\par
00175                 chunks = data.Skip(32).Chunk(DecryptionChunkSize);\par
00176             \}\par
00177 \par
00178             List<byte> result = {\cf17 new} List<byte>();\par
00179 \par
00180             {\cf19 foreach} ({\cf18 byte}[] chunk {\cf19 in} chunks)\par
00181             \{\par
00182                 result.AddRange(await DecryptChunkAsync(Configuration.DynamicBlockProccessing ? Transformers.Rotate(chunk, DynamicEncryption.GetDynamicChunkEntropy(KeyStore, process) * -1) : chunk, process, cancellationToken));\par
00183                 process.ChunkIndex++;\par
00184             \}\par
00185 \par
00186             {\cf18 byte}[] array = result.ToArray();\par
00187 \par
00188             {\cf19 return} !Configuration.RemoveHash && !process.BlockHash.SequenceEqual(array.Sha256()) ? {\cf19 throw} {\cf17 new} InvalidDataException({\cf22 "Hash mismatch"}) : array;\par
00189         \}\par
00190 \par
00202         {\cf17 protected} {\cf17 abstract} Task<IEnumerable<byte>> EncryptChunkAsync({\cf18 byte}[] chunk, CryptoProcess process, CancellationToken cancellationToken);\par
00203 \par
00215         {\cf17 protected} {\cf17 abstract} Task<IEnumerable<byte>> DecryptChunkAsync({\cf18 byte}[] chunk, CryptoProcess process, CancellationToken cancellationToken);\par
00216 \par
00218         {\cf17 public} {\cf18 object} Clone() => MemberwiseClone();\par
00219     \}\par
00220 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoProviderConfiguration.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CryptoProviderConfiguration.cs}
{\xe \v CryptoProviderConfiguration.cs}
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.CryptoProviderConfiguration}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides standard to hold the crypto providers configuration. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoProviderConfiguration.cs\par \pard\plain 
{\tc\tcl2 \v CryptoProviderConfiguration.cs}
{\xe \v CryptoProviderConfiguration.cs}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }CryptoProviderConfiguration : ICloneable, IEquatable<CryptoProviderConfiguration>\par
00007     \{\par
00011         {\cf17 public} {\cf18 string} Id \{ {\cf17 get}; {\cf17 set}; \}\par
00012 \par
00016         {\cf17 public} {\cf17 virtual} {\cf18 bool} Continuous \{ {\cf17 get}; {\cf17 set}; \}\par
00017 \par
00021         {\cf17 public} {\cf17 virtual} {\cf18 bool} RemoveHash \{ {\cf17 get}; {\cf17 set}; \}\par
00022 \par
00026         {\cf17 public} {\cf17 virtual} {\cf18 bool} DynamicBlockProccessing \{ {\cf17 get}; {\cf17 set}; \}\par
00027 \par
00029         {\cf17 public} {\cf18 object} Clone() => MemberwiseClone();\par
00030 \par
00032         {\cf17 public} {\cf18 bool} Equals(CryptoProviderConfiguration other)\par
00033         \{\par
00034             {\cf19 return} Id == other.Id\par
00035                 && Continuous == other.Continuous\par
00036                 && RemoveHash == other.RemoveHash\par
00037                 && DynamicBlockProccessing == other.DynamicBlockProccessing;\par
00038         \}\par
00039 \par
00041         {\cf17 public} {\cf17 override} {\cf18 bool} Equals({\cf18 object} obj) => obj is CryptoProviderConfiguration other && Equals(other);\par
00042 \par
00044         {\cf17 public} {\cf17 override} {\cf18 int} GetHashCode()\par
00045         \{\par
00046             {\cf19 return} Id.GetHashCode()\par
00047                  & Continuous.GetHashCode()\par
00048                  & RemoveHash.GetHashCode()\par
00049                  & DynamicBlockProccessing.GetHashCode();\par
00050         \}\par
00051     \}\par
00052 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoProviderFactory.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CryptoProviderFactory.cs}
{\xe \v CryptoProviderFactory.cs}
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.CryptoProviderFactory}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents methods to create crypto provider objects. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoProviderFactory.cs\par \pard\plain 
{\tc\tcl2 \v CryptoProviderFactory.cs}
{\xe \v CryptoProviderFactory.cs}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.CryptoProviders;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor\par
00004 \{\par
00008     {\cf17 public} {\cf17 static} {\cf17 class }CryptoProviderFactory\par
00009     \{\par
00010         {\cf17 private} {\cf17 static} readonly {\cf18 bool} allowKryptorPrefix = {\cf17 true};\par
00011         {\cf17 private} {\cf17 static} readonly Dictionary<string, ({\cf18 string} DisplayName, CryptoProvider Instance)> GlobalProviders = {\cf17 new} Dictionary<{\cf18 string}, ({\cf18 string} DisplayName, CryptoProvider Instance)>();\par
00012         {\cf17 private} {\cf17 static} readonly Dictionary<string, string> GlobalHints = {\cf17 new} Dictionary<string, string>();\par
00013 \par
00014         {\cf17 static} CryptoProviderFactory()\par
00015         \{\par
00016             RegisterProvider<StandaloneKey>({\cf22 "kryptor"}, {\cf22 "Standalone Key"}, {\cf22 "SK"}, {\cf22 "1"});\par
00017             RegisterProvider<TransformedKey>({\cf22 "kryptor"}, {\cf22 "Transformed Key"}, {\cf22 "TK"}, {\cf22 "2"});\par
00018             RegisterProvider<MixedVector>({\cf22 "kryptor"}, {\cf22 "Mixed Vector"}, {\cf22 "MV"}, {\cf22 "3"});\par
00019             RegisterProvider<TransformedParameters>({\cf22 "kryptor"}, {\cf22 "Transformed Parameters"}, {\cf22 "TP"}, {\cf22 "4"});\par
00020             RegisterProvider<DynamicEncryption>({\cf22 "kryptor"}, {\cf22 "Dynamic Encryption"}, {\cf22 "DE"}, {\cf22 "5"});\par
00021             allowKryptorPrefix = {\cf17 false};\par
00022         \}\par
00023 \par
00040         {\cf17 public} {\cf17 static} {\cf18 void} RegisterProvider<T>({\cf18 string} prefix, {\cf18 string} displayName, params {\cf18 string}[] hints)\par
00041             where T : CryptoProvider, {\cf17 new}()\par
00042         \{\par
00043             {\cf19 if} (!allowKryptorPrefix && prefix == {\cf22 "kryptor"})\par
00044             \{\par
00045                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "The kryptor prefix is only allowed for internal crypto providers"});\par
00046             \}\par
00047 \par
00048             CryptoProvider instance = {\cf17 new} T();\par
00049             {\cf18 string} name = ${\cf22 "\{prefix\}:\{instance.GetType().Name\}"};\par
00050 \par
00051             {\cf19 if} (!GlobalProviders.ContainsKey(name))\par
00052             \{\par
00053                 GlobalProviders[name] = (displayName, instance);\par
00054 \par
00055                 {\cf19 foreach} ({\cf18 string} hint {\cf19 in} hints)\par
00056                 \{\par
00057                     {\cf18 string} hintName = ${\cf22 "\{prefix\}:\{hint\}"};\par
00058                     {\cf19 if} (!GlobalHints.ContainsKey(hintName))\par
00059                     \{\par
00060                         GlobalHints.Add(hintName, name);\par
00061                     \}\par
00062                     {\cf19 else}\par
00063                     \{\par
00064                         {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "A provider with this hint already registered: "} + hintName);\par
00065                     \}\par
00066                 \}\par
00067             \}\par
00068             {\cf19 else}\par
00069             \{\par
00070                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "A provider with this name already registered: "} + name);\par
00071             \}\par
00072         \}\par
00073 \par
00074         {\cf17 internal} {\cf17 static} {\cf18 string} GetRegisteredCryptoProviderId(Type provider)\par
00075         \{\par
00076             {\cf19 foreach} (KeyValuePair<{\cf18 string}, ({\cf18 string} DisplayName, CryptoProvider Instance)> item in GlobalProviders)\par
00077             \{\par
00078                 {\cf19 if} (item.Value.Instance.GetType() == provider)\par
00079                 \{\par
00080                     {\cf19 return} item.Key;\par
00081                 \}\par
00082             \}\par
00083 \par
00084             {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "This crypto provider is not registered: "} + provider.FullName);\par
00085         \}\par
00086 \par
00093         {\cf17 public} {\cf17 static} IEnumerable<string> GetRegisteredCryptoProviders()\par
00094         \{\par
00095             {\cf19 foreach} ({\cf18 string} {\cf18 id} {\cf19 in} GlobalProviders.Keys)\par
00096             \{\par
00097                 yield {\cf19 return} id;\par
00098             \}\par
00099         \}\par
00100 \par
00109         {\cf17 public} {\cf17 static} {\cf18 string} GetRegisteredCryptoProviderId({\cf18 string} {\cf18 id})\par
00110         \{\par
00111             {\cf19 if} (!{\cf18 id}.Contains({\cf22 ":"}))\par
00112             \{\par
00113                 {\cf18 id} = ${\cf22 "kryptor:\{id\}"};\par
00114             \}\par
00115 \par
00116             {\cf19 return} GlobalProviders.ContainsKey({\cf18 id}) ? id : GlobalHints.ContainsKey({\cf18 id}) ? GlobalHints[id] : {\cf19 throw} {\cf17 new} KeyNotFoundException({\cf18 id});\par
00117         \}\par
00118 \par
00128         {\cf17 public} {\cf17 static} {\cf18 string} GetDisplayName({\cf18 string} {\cf18 id})\par
00129         \{\par
00130             {\cf18 string} realId = GetRegisteredCryptoProviderId({\cf18 id});\par
00131 \par
00132             {\cf18 string} result = GlobalProviders[realId].DisplayName;\par
00133 \par
00134             {\cf19 if} (!realId.StartsWith({\cf22 "kryptor:"}))\par
00135             \{\par
00136                 result += ${\cf22 " (\{realId\})"};\par
00137             \}\par
00138 \par
00139             {\cf19 return} result;\par
00140         \}\par
00141 \par
00149         {\cf17 public} {\cf17 static} Type ResolveProviderById({\cf18 string} {\cf18 id}) => GlobalProviders[GetRegisteredCryptoProviderId({\cf18 id})].Instance.GetType();\par
00150 \par
00163         {\cf17 public} {\cf17 static} CryptoProvider Create(KeyStore keyStore, {\cf18 string} {\cf18 id})\par
00164         \{\par
00165             CryptoProviderConfiguration configuration = {\cf17 new} CryptoProviderConfiguration()\par
00166             \{\par
00167                 Id = id,\par
00168             \};\par
00169 \par
00170             {\cf19 return} Create(keyStore, configuration);\par
00171         \}\par
00172 \par
00185         {\cf17 public} {\cf17 static} CryptoProvider Create(KeyStore keyStore, CryptoProviderConfiguration configuration)\par
00186         \{\par
00187             CryptoProvider provider = GlobalProviders[GetRegisteredCryptoProviderId(configuration.Id)].Instance.Fork(keyStore, configuration);\par
00188 \par
00189             {\cf19 return} provider;\par
00190         \}\par
00191     \}\par
00192 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DynamicEncryption.cs File Reference\par \pard\plain 
{\tc\tcl2 \v DynamicEncryption.cs}
{\xe \v DynamicEncryption.cs}
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.CryptoProviders.DynamicEncryption}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Dynamic Encryption (DE) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a dynamic key and iv generated with attention of all parameters and offers the highest security. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.CryptoProviders}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DynamicEncryption.cs\par \pard\plain 
{\tc\tcl2 \v DynamicEncryption.cs}
{\xe \v DynamicEncryption.cs}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00002 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor.CryptoProviders\par
00005 \{\par
00010     {\cf17 public} {\cf17 sealed} {\cf17 class }DynamicEncryption : CryptoProvider\par
00011     \{\par
00015         {\cf17 public} DynamicEncryption()\par
00016         \{\par
00017 \par
00018         \}\par
00019 \par
00029         {\cf17 public} DynamicEncryption(KeyStore keyStore, CryptoProviderConfiguration configuration = {\cf17 null}) => ApplyHeader(keyStore, configuration);\par
00030 \par
00032         {\cf17 public} {\cf17 override} async Task<byte[]> EncryptBlockAsync({\cf18 byte}[] data, CryptoProcess process, CancellationToken cancellationToken)\par
00033         \{\par
00034             process.ProcessData[${\cf22 "b\{process.BlockIndex\}.sha512"}] = data.Sha512();\par
00035             {\cf19 return} await base.EncryptBlockAsync(data, process, cancellationToken);\par
00036         \}\par
00037 \par
00039         {\cf17 public} {\cf17 override} async Task<byte[]> DecryptBlockAsync({\cf18 byte}[] data, CryptoProcess process, CancellationToken cancellationToken)\par
00040         \{\par
00041             {\cf18 byte}[] decData = await base.DecryptBlockAsync(data, process, cancellationToken);\par
00042             process.ProcessData[${\cf22 "b\{process.BlockIndex\}.sha512"}] = decData.Sha512();\par
00043             {\cf19 return} decData;\par
00044         \}\par
00045 \par
00047         {\cf17 protected} {\cf17 override} async Task<IEnumerable<byte>> EncryptChunkAsync({\cf18 byte}[] chunk, CryptoProcess process, CancellationToken cancellationToken) => await AesHelper.EncryptAesCbcAsync(chunk, CreateDynamicKey(process), CreateMixedIV(KeyStore, process), cancellationToken);\par
00048 \par
00050         {\cf17 protected} {\cf17 override} async Task<IEnumerable<byte>> DecryptChunkAsync({\cf18 byte}[] cipher, CryptoProcess process, CancellationToken cancellationToken) => await AesHelper.DecryptAesCbcAsync(cipher, CreateDynamicKey(process), CreateMixedIV(KeyStore, process), cancellationToken);\par
00051 \par
00052         {\cf17 private} {\cf18 byte}[] CreateDynamicKey(CryptoProcess process)\par
00053         \{\par
00054             {\cf18 byte}[] key1 = KeyStore[Configuration.Continuous ? (process.ChunkIndex + process.BlockIndex) * 7 : (process.ChunkIndex - process.BlockIndex) * 3];\par
00055             {\cf18 byte}[] key2 = KeyStore[process.ChunkIndex - (Configuration.RemoveHash ? key1[4] : process.BlockHash[key1[27] % 32])];\par
00056             {\cf18 byte}[] key3 = KeyStore[process.ChunkIndex + process.BlockSize];\par
00057 \par
00058             {\cf18 byte}[] mKey = process.BlockIndex > 0\par
00059                 ? (({\cf18 byte}[])process.ProcessData[${\cf22 "b\{process.BlockIndex - 1\}.sha512"}]).Concat(key1).Concat(key2).Concat(key3).Concat(process.BlockHash).ToArray()\par
00060                 : key1.Concat(key2).Concat(key3).Concat(process.BlockHash).ToArray();\par
00061 \par
00062             {\cf19 return} mKey.Sha256();\par
00063         \}\par
00064 \par
00065         {\cf17 internal} {\cf17 static} {\cf18 byte}[] CreateMixedIV(KeyStore keyStore, CryptoProcess process)\par
00066         \{\par
00067             {\cf18 int} index = process.ChunkIndex + process.BlockIndex;\par
00068 \par
00069             {\cf19 return} {\cf17 new} {\cf18 byte}[16]\par
00070             \{\par
00071                 keyStore[index * 6][4],\par
00072                 keyStore[index * 2][12],\par
00073                 keyStore[index - 154][7],\par
00074                 keyStore[index + 53][19],\par
00075                 keyStore[(index + 5) * 6][9],\par
00076                 keyStore[index / 4][13],\par
00077                 keyStore[index - 79][23],\par
00078                 keyStore[index + 571][0],\par
00079                 keyStore[index % 3][21],\par
00080                 keyStore[index + 1][16],\par
00081                 keyStore[index - 98][13],\par
00082                 keyStore[index + 65][23],\par
00083                 keyStore[index - 61][8],\par
00084                 keyStore[index + 34][2],\par
00085                 keyStore[index + 79][9],\par
00086                 keyStore[index - 172][6],\par
00087             \};\par
00088         \}\par
00089 \par
00090         {\cf17 internal} {\cf17 static} {\cf18 int} GetDynamicBlockSize(KeyStore keyStore, CryptoProcess process)\par
00091         \{\par
00092             {\cf18 int} index = process.BlockIndex;\par
00093 \par
00094             {\cf18 byte}[] lastBytes = keyStore.Raw[(keyStore.Raw.Length - 5 - index)..^(1 + index)];\par
00095             {\cf19 return} Math.Abs(BitConverter.ToInt32(lastBytes, 0) % 0xC000);\par
00096         \}\par
00097 \par
00098         {\cf17 internal} {\cf17 static} {\cf18 int} GetDynamicBlockEntropy(KeyStore keyStore, CryptoProcess process)\par
00099         \{\par
00100             {\cf18 int} index = process.BlockIndex * 4;\par
00101 \par
00102             {\cf18 byte}[] lastBytes = keyStore.Raw[index..(index + 5)];\par
00103             {\cf19 return} BitConverter.ToInt32(lastBytes, 0) % 0xC000;\par
00104         \}\par
00105 \par
00106         {\cf17 internal} {\cf17 static} {\cf18 int} GetDynamicChunkEntropy(KeyStore keyStore, CryptoProcess process)\par
00107         \{\par
00108             {\cf18 int} index = process.BlockIndex + process.ChunkIndex;\par
00109 \par
00110             {\cf18 byte}[] lastBytes = keyStore.Raw[index..(index + 5)];\par
00111             {\cf19 return} BitConverter.ToInt32(lastBytes, 0) % 0xC000;\par
00112         \}\par
00113     \}\par
00114 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MixedVector.cs File Reference\par \pard\plain 
{\tc\tcl2 \v MixedVector.cs}
{\xe \v MixedVector.cs}
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.CryptoProviders.MixedVector}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Mixed Vector (MV) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a different key and a mixed iv Until all the keys are used, then it continues from the first key and this process continues until the end of encryption. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.CryptoProviders}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MixedVector.cs\par \pard\plain 
{\tc\tcl2 \v MixedVector.cs}
{\xe \v MixedVector.cs}
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.CryptoProviders\par
00004 \{\par
00009     {\cf17 public} {\cf17 sealed} {\cf17 class }MixedVector : CryptoProvider\par
00010     \{\par
00014         {\cf17 public} MixedVector()\par
00015         \{\par
00016 \par
00017         \}\par
00018 \par
00028         {\cf17 public} MixedVector(KeyStore keyStore, CryptoProviderConfiguration configuration = {\cf17 null}) => ApplyHeader(keyStore, configuration);\par
00029 \par
00031         {\cf17 protected} {\cf17 override} async Task<IEnumerable<byte>> EncryptChunkAsync({\cf18 byte}[] chunk, CryptoProcess process, CancellationToken cancellationToken) => await AesHelper.EncryptAesCbcAsync(chunk, KeyStore[process.ChunkIndex], DynamicEncryption.CreateMixedIV(KeyStore, process), cancellationToken);\par
00032 \par
00034         {\cf17 protected} {\cf17 override} async Task<IEnumerable<byte>> DecryptChunkAsync({\cf18 byte}[] cipher, CryptoProcess process, CancellationToken cancellationToken) => await AesHelper.DecryptAesCbcAsync(cipher, KeyStore[process.ChunkIndex], DynamicEncryption.CreateMixedIV(KeyStore, process), cancellationToken);\par
00035     \}\par
00036 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StandaloneKey.cs File Reference\par \pard\plain 
{\tc\tcl2 \v StandaloneKey.cs}
{\xe \v StandaloneKey.cs}
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.CryptoProviders.StandaloneKey}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Standalone Key (SK) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a different key Until all the keys are used, then it continues from the first key and this process continues until the end of encryption. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.CryptoProviders}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StandaloneKey.cs\par \pard\plain 
{\tc\tcl2 \v StandaloneKey.cs}
{\xe \v StandaloneKey.cs}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.CryptoProviders\par
00004 \{\par
00009     {\cf17 public} {\cf17 sealed} {\cf17 class }StandaloneKey : CryptoProvider\par
00010     \{\par
00014         {\cf17 public} StandaloneKey()\par
00015         \{\par
00016 \par
00017         \}\par
00018 \par
00028         {\cf17 public} StandaloneKey(KeyStore keyStore, CryptoProviderConfiguration configuration = {\cf17 null}) => ApplyHeader(keyStore, configuration);\par
00029 \par
00031         {\cf17 protected} {\cf17 override} async Task<IEnumerable<byte>> EncryptChunkAsync({\cf18 byte}[] chunk, CryptoProcess process, CancellationToken cancellationToken) => await AesHelper.EncryptAesEcbAsync(chunk, KeyStore[process.ChunkIndex], cancellationToken);\par
00032 \par
00034         {\cf17 protected} {\cf17 override} async Task<IEnumerable<byte>> DecryptChunkAsync({\cf18 byte}[] cipher, CryptoProcess process, CancellationToken cancellationToken) => await AesHelper.DecryptAesEcbAsync(cipher, KeyStore[process.ChunkIndex], cancellationToken);\par
00035     \}\par
00036 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TransformedKey.cs File Reference\par \pard\plain 
{\tc\tcl2 \v TransformedKey.cs}
{\xe \v TransformedKey.cs}
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.CryptoProviders.TransformedKey}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Transformed Key (TK) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a mix-transformed key. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.CryptoProviders}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TransformedKey.cs\par \pard\plain 
{\tc\tcl2 \v TransformedKey.cs}
{\xe \v TransformedKey.cs}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.CryptoProviders\par
00004 \{\par
00009     {\cf17 public} {\cf17 sealed} {\cf17 class }TransformedKey : CryptoProvider\par
00010     \{\par
00014         {\cf17 public} TransformedKey()\par
00015         \{\par
00016 \par
00017         \}\par
00018 \par
00028         {\cf17 public} TransformedKey(KeyStore keyStore, CryptoProviderConfiguration configuration = {\cf17 null}) => ApplyHeader(keyStore, configuration);\par
00029 \par
00031         {\cf17 protected} {\cf17 override} {\cf18 void} ApplyHeader(KeyStore keyStore, CryptoProviderConfiguration configuration = {\cf17 null})\par
00032         \{\par
00033             base.ApplyHeader(keyStore, configuration);\par
00034 \par
00035             {\cf19 if} (Configuration.RemoveHash)\par
00036             \{\par
00037                 {\cf19 throw} {\cf17 new} NotImplementedException({\cf22 "This crypto provider does not supports remove hash feature."});\par
00038             \}\par
00039         \}\par
00040 \par
00042         {\cf17 protected} {\cf17 override} async Task<IEnumerable<byte>> EncryptChunkAsync({\cf18 byte}[] chunk, CryptoProcess process, CancellationToken cancellationToken) => await AesHelper.EncryptAesEcbAsync(chunk, Transformers.CreateKey(KeyStore, process), cancellationToken);\par
00043 \par
00045         {\cf17 protected} {\cf17 override} async Task<IEnumerable<byte>> DecryptChunkAsync({\cf18 byte}[] cipher, CryptoProcess process, CancellationToken cancellationToken) => await AesHelper.DecryptAesEcbAsync(cipher, Transformers.CreateKey(KeyStore, process), cancellationToken);\par
00046     \}\par
00047 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TransformedParameters.cs File Reference\par \pard\plain 
{\tc\tcl2 \v TransformedParameters.cs}
{\xe \v TransformedParameters.cs}
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.CryptoProviders.TransformedParameters}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides Transformed Parameters (TP) Crypto mechanism. In this way, each 31 bytes of data is encrypted with a mix-transformed key and iv. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.CryptoProviders}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TransformedParameters.cs\par \pard\plain 
{\tc\tcl2 \v TransformedParameters.cs}
{\xe \v TransformedParameters.cs}
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.CryptoProviders\par
00004 \{\par
00009     {\cf17 public} {\cf17 sealed} {\cf17 class }TransformedParameters : CryptoProvider\par
00010     \{\par
00014         {\cf17 public} TransformedParameters()\par
00015         \{\par
00016 \par
00017         \}\par
00018 \par
00028         {\cf17 public} TransformedParameters(KeyStore keyStore, CryptoProviderConfiguration configuration = {\cf17 null}) => ApplyHeader(keyStore, configuration);\par
00029 \par
00031         {\cf17 protected} {\cf17 override} {\cf18 void} ApplyHeader(KeyStore keyStore, CryptoProviderConfiguration configuration = {\cf17 null})\par
00032         \{\par
00033             base.ApplyHeader(keyStore, configuration);\par
00034 \par
00035             {\cf19 if} (Configuration.RemoveHash)\par
00036             \{\par
00037                 {\cf19 throw} {\cf17 new} NotImplementedException({\cf22 "This crypto provider does not supports remove hash feature."});\par
00038             \}\par
00039         \}\par
00040 \par
00042         {\cf17 protected} {\cf17 override} async Task<IEnumerable<byte>> EncryptChunkAsync({\cf18 byte}[] chunk, CryptoProcess process, CancellationToken cancellationToken) => await AesHelper.EncryptAesCbcAsync(chunk, Transformers.CreateKey(KeyStore, process), Transformers.CreateIV(KeyStore, process), cancellationToken);\par
00043 \par
00045         {\cf17 protected} {\cf17 override} async Task<IEnumerable<byte>> DecryptChunkAsync({\cf18 byte}[] cipher, CryptoProcess process, CancellationToken cancellationToken) => await AesHelper.DecryptAesCbcAsync(cipher, Transformers.CreateKey(KeyStore, process), Transformers.CreateIV(KeyStore, process), cancellationToken);\par
00046     \}\par
00047 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoExtensions.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CryptoExtensions.cs}
{\xe \v CryptoExtensions.cs}
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Extensions.CryptoExtensions}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents methods to compute hashes and other crypto tranforms. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Extensions}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoExtensions.cs\par \pard\plain 
{\tc\tcl2 \v CryptoExtensions.cs}
{\xe \v CryptoExtensions.cs}
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Security.Cryptography;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Extensions\par
00004 \{\par
00008     {\cf17 public} {\cf17 static} {\cf17 class }CryptoExtensions\par
00009     \{\par
00015         {\cf17 public} {\cf17 static} {\cf18 byte}[] Sha256({\cf17 this} {\cf18 byte}[] buffer)\par
00016         \{\par
00017             {\cf17 using} (SHA256 sha256 = SHA256.Create())\par
00018             \{\par
00019                 {\cf19 return} sha256.ComputeHash(buffer);\par
00020             \}\par
00021         \}\par
00022 \par
00029         {\cf17 public} {\cf17 static} {\cf18 byte}[] Sha256({\cf17 this} Stream stream, {\cf18 bool} startFromOrigin = {\cf17 true})\par
00030         \{\par
00031             {\cf18 long} curPos = stream.Position;\par
00032 \par
00033             {\cf19 if} (startFromOrigin && stream.CanSeek)\par
00034             \{\par
00035                 stream.Seek(0, SeekOrigin.Begin);\par
00036             \}\par
00037 \par
00038             {\cf18 byte}[] hash;\par
00039 \par
00040             {\cf17 using} (SHA256 sha256 = SHA256.Create())\par
00041             \{\par
00042                 hash = sha256.ComputeHash(stream);\par
00043             \}\par
00044 \par
00045             {\cf19 if} (startFromOrigin && stream.CanSeek)\par
00046             \{\par
00047                 stream.Seek(curPos, SeekOrigin.Begin);\par
00048             \}\par
00049 \par
00050             {\cf19 return} hash;\par
00051         \}\par
00052 \par
00058         {\cf17 public} {\cf17 static} {\cf18 byte}[] Sha384({\cf17 this} {\cf18 byte}[] buffer)\par
00059         \{\par
00060             {\cf17 using} (SHA384 sha384 = SHA384.Create())\par
00061             \{\par
00062                 {\cf19 return} sha384.ComputeHash(buffer);\par
00063             \}\par
00064         \}\par
00065 \par
00071         {\cf17 public} {\cf17 static} {\cf18 byte}[] Sha512({\cf17 this} {\cf18 byte}[] buffer)\par
00072         \{\par
00073             {\cf17 using} (SHA512 sha512 = SHA512.Create())\par
00074             \{\par
00075                 {\cf19 return} sha512.ComputeHash(buffer);\par
00076             \}\par
00077         \}\par
00078 \par
00085         {\cf17 public} {\cf17 static} {\cf18 byte}[] HmacSha256({\cf17 this} {\cf18 byte}[] buffer, {\cf18 byte}[] key)\par
00086         \{\par
00087             {\cf17 using} (HMACSHA256 hmacSha256 = {\cf17 new} HMACSHA256(key))\par
00088             \{\par
00089                 {\cf19 return} hmacSha256.ComputeHash(buffer);\par
00090             \}\par
00091         \}\par
00092 \par
00099         {\cf17 public} {\cf17 static} {\cf18 byte}[] HmacSha384({\cf17 this} {\cf18 byte}[] buffer, {\cf18 byte}[] key)\par
00100         \{\par
00101             {\cf17 using} (HMACSHA384 hmacSha384 = {\cf17 new} HMACSHA384(key))\par
00102             \{\par
00103                 {\cf19 return} hmacSha384.ComputeHash(buffer);\par
00104             \}\par
00105         \}\par
00106 \par
00113         {\cf17 public} {\cf17 static} {\cf18 byte}[] HmacSha512({\cf17 this} {\cf18 byte}[] buffer, {\cf18 byte}[] key)\par
00114         \{\par
00115             {\cf17 using} (HMACSHA512 hmacSha512 = {\cf17 new} HMACSHA512(key))\par
00116             \{\par
00117                 {\cf19 return} hmacSha512.ComputeHash(buffer);\par
00118             \}\par
00119         \}\par
00120     \}\par
00121 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EnumerableExtensions.cs File Reference\par \pard\plain 
{\tc\tcl2 \v EnumerableExtensions.cs}
{\xe \v EnumerableExtensions.cs}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Extensions.EnumerableExtensions}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents extension methods for IEnumerable<T> collections. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Extensions}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EnumerableExtensions.cs\par \pard\plain 
{\tc\tcl2 \v EnumerableExtensions.cs}
{\xe \v EnumerableExtensions.cs}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Extensions\par
00002 \{\par
00006     {\cf17 public} {\cf17 static} {\cf17 class }EnumerableExtensions\par
00007     \{\par
00008 {\cf21 #if !NET6_0_OR_GREATER}\par
00034         {\cf17 public} {\cf17 static} IEnumerable<TSource[]> Chunk<TSource>({\cf17 this} IEnumerable<TSource> source, {\cf18 int} size)\par
00035         \{\par
00036             {\cf19 return} source == {\cf17 null}\par
00037                 ? {\cf19 throw} {\cf17 new} ArgumentNullException({\cf22 "source"})\par
00038                 : size < 1 ? throw new ArgumentOutOfRangeException({\cf22 "size"}) : ChunkIterator(source, size);\par
00039         \}\par
00040 {\cf21 #endif}\par
00041 \par
00052         {\cf17 public} {\cf17 static} {\cf18 int} LocatePattern<T>({\cf17 this} IEnumerable<T> src, IEnumerable<T> pattern)\par
00053         \{\par
00054             {\cf19 for} ({\cf18 int} i = 0; i < src.Count(); i++)\par
00055             \{\par
00056                 {\cf19 if} (src.Skip(i).Take(pattern.Count()).SequenceEqual(pattern))\par
00057                 \{\par
00058                     {\cf19 return} i;\par
00059                 \}\par
00060             \}\par
00061 \par
00062             {\cf19 return} -1;\par
00063         \}\par
00064 \par
00065         {\cf17 private} {\cf17 static} IEnumerable<TSource[]> ChunkIterator<TSource>(IEnumerable<TSource> source, {\cf18 int} size)\par
00066         \{\par
00067             {\cf17 using} (IEnumerator<TSource> e = source.GetEnumerator())\par
00068             \{\par
00069                 {\cf19 while} (e.MoveNext())\par
00070                 \{\par
00071                     TSource[] chunk = {\cf17 new} TSource[size];\par
00072                     chunk[0] = e.Current;\par
00073 \par
00074                     {\cf18 int} i = 1;\par
00075                     {\cf19 for} (; i < chunk.Length && e.MoveNext(); i++)\par
00076                     \{\par
00077                         chunk[i] = e.Current;\par
00078                     \}\par
00079 \par
00080                     {\cf19 if} (i == chunk.Length)\par
00081                     \{\par
00082                         yield {\cf19 return} chunk;\par
00083                     \}\par
00084                     {\cf19 else}\par
00085                     \{\par
00086                         Array.Resize(ref chunk, i);\par
00087                         yield {\cf19 return} chunk;\par
00088                         yield {\cf19 break};\par
00089                     \}\par
00090                 \}\par
00091             \}\par
00092         \}\par
00093     \}\par
00094 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InternalExtensions.cs File Reference\par \pard\plain 
{\tc\tcl2 \v InternalExtensions.cs}
{\xe \v InternalExtensions.cs}
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Extensions.InternalExtensions}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Extensions}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InternalExtensions.cs\par \pard\plain 
{\tc\tcl2 \v InternalExtensions.cs}
{\xe \v InternalExtensions.cs}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Text;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Extensions\par
00004 \{\par
00005     {\cf17 internal} {\cf17 static} {\cf17 class }InternalExtensions\par
00006     \{\par
00007         {\cf17 internal} {\cf17 static} {\cf18 byte}[] Encode({\cf17 this} {\cf18 string} src) => Encoding.UTF8.GetBytes(src);\par
00008 \par
00009         {\cf17 internal} {\cf17 static} {\cf18 string} Decode({\cf17 this} {\cf18 byte}[] src) => Encoding.UTF8.GetString(src);\par
00010 \par
00011         {\cf17 internal} {\cf17 static} {\cf18 string} Base64Encode({\cf17 this} {\cf18 byte}[] src) => Convert.ToBase64String(src);\par
00012 \par
00013         {\cf17 internal} {\cf17 static} {\cf18 string} Base64Encode({\cf17 this} {\cf18 string} src) => src.Encode().Base64Encode();\par
00014 \par
00015         {\cf17 internal} {\cf17 static} {\cf18 byte}[] Base64EncodeToByte({\cf17 this} {\cf18 string} src) => src.Base64Encode().Encode();\par
00016 \par
00017         {\cf17 internal} {\cf17 static} {\cf18 byte}[] Base64EncodeToByte({\cf17 this} {\cf18 byte}[] src) => src.Base64Encode().Encode();\par
00018 \par
00019         {\cf17 internal} {\cf17 static} {\cf18 byte}[] Base64Decode({\cf17 this} {\cf18 string} src) => Convert.FromBase64String(src);\par
00020 \par
00021         {\cf17 internal} {\cf17 static} {\cf18 byte}[] Base64Decode({\cf17 this} {\cf18 byte}[] src) => src.Decode().Base64Decode();\par
00022 \par
00023         {\cf17 internal} {\cf17 static} {\cf18 string} Base64DecodeToString({\cf17 this} {\cf18 byte}[] src) => src.Base64Decode().Decode();\par
00024 \par
00025         {\cf17 internal} {\cf17 static} {\cf18 string} Base64DecodeToString({\cf17 this} {\cf18 string} src) => src.Base64Decode().Decode();\par
00026     \}\par
00027 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoRandom.cs File Reference\par \pard\plain 
{\tc\tcl2 \v CryptoRandom.cs}
{\xe \v CryptoRandom.cs}
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Generators.CryptoRandom}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A random number generator based on the RNGCryptoServiceProvider. Adapted from the "Tales from the CryptoRandom" article in MSDN Magazine (September 2007) but with explicit guarantee to be thread safe. Note that this implementation also includes an optional (enabled by default) random buffer which provides a significant speed boost as it greatly reduces the amount of calls into unmanaged land. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Generators}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CryptoRandom.cs\par \pard\plain 
{\tc\tcl2 \v CryptoRandom.cs}
{\xe \v CryptoRandom.cs}
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Diagnostics.CodeAnalysis;\par
00002 {\cf17 using }System.Security.Cryptography;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor.Generators\par
00005 \{\par
00013     {\cf17 public} {\cf17 class }CryptoRandom : Random, IGenerator\par
00014     \{\par
00015         {\cf17 private} readonly RandomNumberGenerator _rng = RandomNumberGenerator.Create();\par
00016 \par
00017         {\cf17 private} {\cf18 byte}[] _buffer;\par
00018 \par
00019         {\cf17 private} {\cf18 int} _bufferPosition;\par
00020         {\cf17 private} readonly {\cf18 int} _bufferPoolSize = 1024;\par
00021 \par
00025         {\cf17 public} {\cf17 static} CryptoRandom Instance \{ {\cf17 get}; \} = {\cf17 new} CryptoRandom();\par
00026 \par
00033         {\cf17 public} {\cf18 bool} IsRandomPoolEnabled \{ {\cf17 get}; {\cf17 private} {\cf17 set}; \}\par
00034 \par
00036         {\cf17 public} {\cf17 event} EventHandler<double> ProgressChanged;\par
00037 \par
00042         {\cf17 public} CryptoRandom() : this(true) \{ \}\par
00043 \par
00051         [SuppressMessage({\cf22 "Style"}, {\cf22 "IDE0060:Remove unused parameter"}, Justification = {\cf22 "Cannot remove this parameter as we implement the full API of System.Random"})]\par
00052         {\cf17 public} CryptoRandom({\cf18 int} ignoredSeed) : this(true) \{ \}\par
00053 \par
00059         {\cf17 public} CryptoRandom({\cf18 bool} enableRandomPool) => IsRandomPoolEnabled = enableRandomPool;\par
00060 \par
00061         {\cf17 private} {\cf18 void} InitBuffer()\par
00062         \{\par
00063             {\cf19 if} (IsRandomPoolEnabled)\par
00064             \{\par
00065                 {\cf19 if} (_buffer == {\cf17 null} || _buffer.Length != _bufferPoolSize)\par
00066                     _buffer = {\cf17 new} {\cf18 byte}[_bufferPoolSize];\par
00067             \}\par
00068             {\cf19 else}\par
00069             \{\par
00070                 {\cf19 if} (_buffer == {\cf17 null} || _buffer.Length != 4)\par
00071                     _buffer = {\cf17 new} {\cf18 byte}[4];\par
00072             \}\par
00073 \par
00074             _rng.GetBytes(_buffer);\par
00075             _bufferPosition = 0;\par
00076         \}\par
00077 \par
00079         {\cf17 public} {\cf18 void} Generate({\cf18 byte}[] buffer)\par
00080         \{\par
00081             ProgressChanged?.Invoke({\cf17 this}, -1);\par
00082 \par
00083             NextBytes(buffer);\par
00084 \par
00085             ProgressChanged?.Invoke({\cf17 this}, 100);\par
00086         \}\par
00087 \par
00094 \par
00095         {\cf20 /* Unmerged change from project 'Kryptor (net461)'}\par
00096 {\cf20         Before:}\par
00097 {\cf20                 public override int Next()}\par
00098 {\cf20                 \{}\par
00099 {\cf20                     // Mask away the sign bit so that we always return nonnegative integers}\par
00100 {\cf20         After:}\par
00101 {\cf20                 public override int Next() =>}\par
00102 {\cf20                     // Mask away the sign bit so that we always return nonnegative integers}\par
00103 {\cf20         */}\par
00104         {\cf17 public} {\cf17 override} {\cf18 int} Next() =>\par
00105             {\cf20 // Mask away the sign bit so that we always return nonnegative integers}\par
00106             (int)GetRandomUInt32() & 0x7FFFFFFF;\par
00107 \par
00118         {\cf17 public} {\cf17 override} {\cf18 int} Next({\cf18 int} maxValue) => maxValue < 0 ? {\cf19 throw} {\cf17 new} ArgumentOutOfRangeException({\cf22 "maxValue"}) : Next(0, maxValue);\par
00119 \par
00131         {\cf17 public} {\cf17 override} {\cf18 int} Next({\cf18 int} minValue, {\cf18 int} maxValue)\par
00132         \{\par
00133             {\cf19 if} (minValue > maxValue)\par
00134                 {\cf19 throw} {\cf17 new} ArgumentOutOfRangeException({\cf22 "minValue"});\par
00135 \par
00136             {\cf19 if} (minValue == maxValue)\par
00137                 {\cf19 return} minValue;\par
00138 \par
00139             {\cf18 long} diff = maxValue - minValue;\par
00140 \par
00141             {\cf19 while} ({\cf17 true})\par
00142             \{\par
00143                 uint rand = GetRandomUInt32();\par
00144 \par
00145                 {\cf18 long} max = 1 + (long)uint.MaxValue;\par
00146                 {\cf18 long} remainder = max % diff;\par
00147 \par
00148                 {\cf19 if} (rand < max - remainder)\par
00149                     {\cf19 return} ({\cf18 int})(minValue + (rand % diff));\par
00150             \}\par
00151         \}\par
00152 \par
00159         {\cf17 public} {\cf17 override} {\cf18 double} NextDouble() => GetRandomUInt32() / (1.0 + uint.MaxValue);\par
00160 \par
00168         {\cf17 public} {\cf17 override} {\cf18 void} NextBytes({\cf18 byte}[] buffer)\par
00169         \{\par
00170             {\cf19 if} (buffer == {\cf17 null})\par
00171                 {\cf19 throw} {\cf17 new} ArgumentNullException({\cf22 "buffer"});\par
00172 \par
00173             lock ({\cf17 this})\par
00174             \{\par
00175                 {\cf19 if} (IsRandomPoolEnabled && _buffer == {\cf17 null})\par
00176                     InitBuffer();\par
00177 \par
00178                 {\cf20 // Can we fit the requested number of bytes in the buffer?}\par
00179                 {\cf19 if} (IsRandomPoolEnabled && _buffer.Length >= buffer.Length)\par
00180                 \{\par
00181                     {\cf18 int} count = buffer.Length;\par
00182 \par
00183                     EnsureRandomBuffer(count);\par
00184 \par
00185                     Buffer.BlockCopy(_buffer, _bufferPosition, buffer, 0, count);\par
00186 \par
00187                     _bufferPosition += count;\par
00188                 \}\par
00189                 {\cf19 else}\par
00190                 \{\par
00191                     {\cf20 // Draw bytes directly from the RNGCryptoProvider}\par
00192                     _rng.GetBytes(buffer);\par
00193                 \}\par
00194             \}\par
00195         \}\par
00196 \par
00200         {\cf17 private} uint GetRandomUInt32()\par
00201         \{\par
00202             lock ({\cf17 this})\par
00203             \{\par
00204                 EnsureRandomBuffer(4);\par
00205 \par
00206                 uint rand = BitConverter.ToUInt32(_buffer, _bufferPosition);\par
00207 \par
00208                 _bufferPosition += 4;\par
00209 \par
00210                 {\cf19 return} rand;\par
00211             \}\par
00212         \}\par
00213 \par
00218         {\cf17 private} {\cf18 void} EnsureRandomBuffer({\cf18 int} requiredBytes)\par
00219         \{\par
00220             {\cf19 if} (_buffer == {\cf17 null})\par
00221                 InitBuffer();\par
00222 \par
00223             {\cf19 if} (requiredBytes > _buffer.Length)\par
00224                 {\cf19 throw} {\cf17 new} ArgumentOutOfRangeException({\cf22 "requiredBytes"}, {\cf22 "cannot be greater than random buffer"});\par
00225 \par
00226             {\cf19 if} ((_buffer.Length - _bufferPosition) < requiredBytes)\par
00227                 InitBuffer();\par
00228         \}\par
00229     \}\par
00230 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EntroX.cs File Reference\par \pard\plain 
{\tc\tcl2 \v EntroX.cs}
{\xe \v EntroX.cs}
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Generators.EntroX}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random data reinforced by the entropies. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Generators}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EntroX.cs\par \pard\plain 
{\tc\tcl2 \v EntroX.cs}
{\xe \v EntroX.cs}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Security.Cryptography;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Generators\par
00004 \{\par
00008     {\cf17 public} {\cf17 class }EntroX : IGenerator\par
00009     \{\par
00010         {\cf17 private} {\cf17 static} readonly {\cf18 byte}[] entropy = {\cf17 new} {\cf18 byte}[8192];\par
00011         {\cf17 private} {\cf17 static} readonly CryptoRandom crng = {\cf17 new} CryptoRandom();\par
00012         {\cf17 private} {\cf17 static} readonly SHA512 _sha512;\par
00013 \par
00015         {\cf17 public} {\cf17 event} EventHandler<double> ProgressChanged;\par
00016 \par
00017         {\cf17 static} EntroX()\par
00018         \{\par
00019             {\cf20 // Initialize entropy with some random data.}\par
00020             crng.NextBytes(entropy);\par
00021 \par
00022             _sha512 = SHA512.Create();\par
00023 \par
00024             Instance = {\cf17 new} EntroX();\par
00025         \}\par
00026 \par
00030         {\cf17 public} {\cf17 static} EntroX Instance \{ {\cf17 get}; \}\par
00031 \par
00038         {\cf17 public} EntroX(params {\cf18 byte}[][] entropies)\par
00039         \{\par
00040             {\cf19 foreach} ({\cf18 byte}[] data {\cf19 in} entropies)\par
00041             \{\par
00042                 AddEntropyInternal(data);\par
00043             \}\par
00044 \par
00045             UpdateEntropy();\par
00046         \}\par
00047 \par
00049         {\cf17 public} {\cf18 void} Generate({\cf18 byte}[] buffer)\par
00050         \{\par
00051             TransformEntropy();\par
00052 \par
00053             {\cf18 double} totalProgress = 0;\par
00054             {\cf18 int} tries = 1;\par
00055             {\cf18 int} pos = 0;\par
00056             {\cf19 while} (pos < buffer.Length)\par
00057             \{\par
00058                 {\cf19 if} (tries % 10 == 0)\par
00059                 \{\par
00060                     TransformEntropy();\par
00061                 \}\par
00062 \par
00063                 {\cf18 byte}[] data = _sha512.ComputeHash(entropy).Concat(QueryEntropy(24, 96)).ToArray();\par
00064                 Array.Copy(data, 0, buffer, pos, Math.Min(data.Length, buffer.Length - pos));\par
00065                 pos += data.Length;\par
00066                 totalProgress += (double)data.Length / buffer.Length;\par
00067                 ProgressChanged?.Invoke({\cf17 this}, totalProgress * 100);\par
00068 \par
00069                 tries++;\par
00070             \}\par
00071 \par
00072             UpdateEntropy();\par
00073 \par
00074         \}\par
00075 \par
00076         {\cf17 private} {\cf17 static} {\cf18 void} TransformEntropy()\par
00077         \{\par
00078             {\cf18 int} i = 0;\par
00079             {\cf19 while} (i < entropy.Length)\par
00080             \{\par
00081                 {\cf18 byte}[] tData = QueryEntropy(86, 384);\par
00082                 tData.CopyTo(entropy, i);\par
00083                 i += tData.Length;\par
00084             \}\par
00085 \par
00086             UpdateEntropy();\par
00087         \}\par
00088 \par
00089         {\cf17 private} {\cf17 static} {\cf18 byte}[] QueryEntropy({\cf18 int} min, {\cf18 int} max)\par
00090         \{\par
00091             {\cf18 byte}[] picked = {\cf17 new} {\cf18 byte}[crng.Next(min, max)];\par
00092             {\cf18 int} j = 0;\par
00093 \par
00094             {\cf19 while} (j < picked.Length)\par
00095             \{\par
00096                 picked[j] = entropy[crng.Next(entropy.Length)];\par
00097                 j++;\par
00098             \}\par
00099 \par
00100             UpdateEntropy();\par
00101 \par
00102             {\cf18 byte}[] tData = _sha512.ComputeHash(picked);\par
00103             {\cf19 return} tData;\par
00104         \}\par
00105 \par
00112         {\cf17 public} {\cf17 static} {\cf18 void} AddEntropy({\cf18 byte}[] data)\par
00113         \{\par
00114             AddEntropyInternal(data);\par
00115             UpdateEntropy();\par
00116         \}\par
00117 \par
00118         {\cf17 private} {\cf17 static} {\cf18 void} AddEntropyInternal({\cf18 byte}[] data)\par
00119         \{\par
00120             {\cf19 foreach} ({\cf18 byte} i {\cf19 in} data)\par
00121             \{\par
00122                 {\cf18 int} n = crng.Next(entropy.Length);\par
00123                 entropy[n] = i;\par
00124             \}\par
00125         \}\par
00126 \par
00127         {\cf17 private} {\cf17 static} {\cf18 void} UpdateEntropy()\par
00128         \{\par
00129             {\cf18 int} i = 0;\par
00130             {\cf18 int} max = crng.Next(6, 12);\par
00131             {\cf19 while} (i <= max)\par
00132             \{\par
00133                 AddEntropyInternal(_sha512.ComputeHash(entropy));\par
00134                 i++;\par
00135             \}\par
00136         \}\par
00137     \}\par
00138 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generica.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Generica.cs}
{\xe \v Generica.cs}
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Generators.Generica}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates bytes array populated from specified seed. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Generators}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generica.cs\par \pard\plain 
{\tc\tcl2 \v Generica.cs}
{\xe \v Generica.cs}
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Security.Cryptography;\par
00002 {\cf17 using }System.Text;\par
00003 \par
00004 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor.Generators\par
00007 \{\par
00011     {\cf17 public} {\cf17 class }Generica : ITranformer\par
00012     \{\par
00013         {\cf17 private} readonly {\cf18 string} _seed;\par
00014         {\cf17 private} readonly {\cf18 byte}[] _salt;\par
00015 \par
00016         {\cf17 private} readonly {\cf18 int} _sCount;\par
00017         {\cf17 private} readonly SHA256 _sha256;\par
00018         {\cf17 private} readonly SHA384 _sha384;\par
00019         {\cf17 private} readonly SHA512 _sha512;\par
00020 \par
00022         {\cf17 public} {\cf17 event} EventHandler<double> ProgressChanged;\par
00023 \par
00033         {\cf17 public} Generica({\cf18 byte}[] seed, {\cf18 byte}[] salt)\par
00034         \{\par
00035             _sha256 = SHA256.Create();\par
00036             _sha384 = SHA384.Create();\par
00037             _sha512 = SHA512.Create();\par
00038 \par
00039             _seed = BitConverter.ToString(_sha512.ComputeHash(Transformers.Mix(Transformers.ToInt32(seed, seed[12 % seed.Length] * salt[3 % salt.Length]), seed, salt).ToArray())).Replace({\cf22 "-"}, {\cf22 ""});\par
00040             _salt = _sha384.ComputeHash(salt);\par
00041             _sCount = _seed.Length;\par
00042         \}\par
00043 \par
00045         {\cf17 public} {\cf18 void} Generate({\cf18 byte}[] buffer, {\cf18 int} rotate)\par
00046         \{\par
00047             {\cf18 double} totalProgress = 0;\par
00048 \par
00049             {\cf19 if} (rotate < 1)\par
00050             \{\par
00051                 rotate = Transformers.ToAbsInt32(_salt, (buffer.Length % 41) + _seed[28] + _salt[0]) % 100;\par
00052             \}\par
00053 \par
00054             {\cf18 byte}[] tl = {\cf17 new} {\cf18 byte}[5]\par
00055             \{\par
00056                 (byte)(buffer.Length * 6 % 256),\par
00057                 (byte)Math.Abs((buffer.Length - _sCount) * rotate % 256),\par
00058                 (byte)(buffer.Length * 124 % 256),\par
00059                 (byte)((buffer.Length + rotate) * 75 % 128),\par
00060                 (byte)(buffer.Length * 13 % 64),\par
00061             \};\par
00062 \par
00063             tl = _sha384.ComputeHash(Transformers.Mix((buffer.Length + rotate) * _seed[6], tl, _salt));\par
00064 \par
00065             {\cf18 byte}[] hashes = {\cf17 new} {\cf18 byte}[3][]\par
00066             \{\par
00067                 _sha512.ComputeHash(Encode(Enumerable.Repeat(ChangeCase(_seed, (_salt[26] * _salt[7]) + (buffer.Length % 13)), Math.Max(buffer.Length % 10, 1)).SelectMany(x => x).ToArray())),\par
00068                 _sha384.ComputeHash(Encode({\cf17 new} {\cf18 string}(_seed.Chunk(_sCount / 2).Last()).PadRight(_sCount * 2, Convert.ToString(_sha512.ComputeHash(tl)).Replace({\cf22 "-"}, {\cf22 ""})[5]).PadLeft(_sCount * 5, Convert.ToString(_sha384.ComputeHash(tl.Base64EncodeToByte())).Replace({\cf22 "-"}, {\cf22 ""})[6]))),\par
00069                 _sha256.ComputeHash(Encode(ChangeCase(Convert.ToBase64String(Encode(_seed)), _seed[19] + (buffer.Length % 7))))\par
00070             \}.SelectMany(x => x).OrderBy(x => x * 9 % 24).ToArray();\par
00071 \par
00072             {\cf18 byte}[] vm = _sha384.ComputeHash(hashes.Select(x => ({\cf18 byte})(x * 7 % 256)).ToArray());\par
00073             {\cf18 byte}[] vf = _sha512.ComputeHash(hashes).Concat(_sha256.ComputeHash(ChangeCase(tl.Base64Encode(), _salt[39] + (buffer.Length % 11)).Base64EncodeToByte()).Base64EncodeToByte()).ToArray();\par
00074             {\cf18 byte}[] vt = _sha256.ComputeHash(vf.Concat(_sha384.ComputeHash(hashes.Select(x => ({\cf18 byte})(((x * 11 / 4 * 6) + 5) % 256)).ToArray())).ToArray());\par
00075 \par
00076             {\cf18 int} i = 0;\par
00077 \par
00078             {\cf19 while} (i < buffer.Length)\par
00079             \{\par
00080                 vt = _sha384.ComputeHash(_sha512.ComputeHash(vt)\par
00081                                                 .Concat(_sha384.ComputeHash({\cf17 new} {\cf18 byte}[] \{ (byte)(Math.Abs(buffer.Length - i) % 256) \}))\par
00082                                                 .Concat(vf.Take(Math.Abs(buffer.Length - i) % 64))\par
00083                                                 .Concat(vm.Take((i + 2) * 3 % 48))\par
00084                                                 .ToArray());\par
00085 \par
00086                 {\cf19 for} ({\cf18 int} j = 0; j < rotate; j++)\par
00087                 \{\par
00088                     vt = _sha256.ComputeHash(Transformers.Mix(i > 0 && j > 0 ? (i * j) + _seed[43] + _seed[9] + _salt[34] : (_seed[15] * rotate) + buffer.Length, _sha384.ComputeHash(vt), _salt).ToArray());\par
00089                 \}\par
00090 \par
00091                 Array.Copy(vt, 0, buffer, i, Math.Min(vt.Length, buffer.Length - i));\par
00092 \par
00093                 totalProgress += (double)vt.Length / buffer.Length;\par
00094                 ProgressChanged?.Invoke({\cf17 this}, totalProgress * 100);\par
00095 \par
00096                 i += vt.Length;\par
00097             \}\par
00098         \}\par
00099 \par
00100         {\cf17 private} {\cf18 string} ChangeCase({\cf18 string} src, {\cf18 int} seed)\par
00101         \{\par
00102             {\cf18 int} c = 0;\par
00103 \par
00104             {\cf18 char}[] clone = src.ToArray();\par
00105             Transformers.Shuffle(clone, seed);\par
00106 \par
00107             {\cf19 return} {\cf17 new} string(clone.Select(x =>\par
00108             \{\par
00109                 return c++ % 2 == 0 ? x.ToString().ToUpper()[0] : x;\par
00110             \}).ToArray());\par
00111         \}\par
00112 \par
00113         {\cf17 private} {\cf17 static} {\cf18 byte}[] Encode({\cf18 char}[] src) => Encoding.UTF8.GetBytes(src);\par
00114 \par
00115         {\cf17 private} {\cf17 static} {\cf18 byte}[] Encode({\cf18 string} src) => Encoding.UTF8.GetBytes(src);\par
00116     \}\par
00117 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LiteEn.cs File Reference\par \pard\plain 
{\tc\tcl2 \v LiteEn.cs}
{\xe \v LiteEn.cs}
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Generators.LiteEn}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates bytes array populated from specified seed, with fast speed designed for network transmissions. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Generators}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LiteEn.cs\par \pard\plain 
{\tc\tcl2 \v LiteEn.cs}
{\xe \v LiteEn.cs}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Security.Cryptography;\par
00002 \par
00003 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00004 \par
00005 {\cf17 namespace }SAPTeam.Kryptor.Generators\par
00006 \{\par
00010     {\cf17 public} {\cf17 class }LiteEn : ITranformer\par
00011     \{\par
00012         {\cf17 private} readonly {\cf18 string} _seed;\par
00013         {\cf17 private} readonly {\cf18 byte}[] _salt;\par
00014 \par
00015         {\cf17 private} readonly {\cf18 int} _sCount;\par
00016         {\cf17 private} readonly SHA256 _sha256;\par
00017         {\cf17 private} readonly SHA384 _sha384;\par
00018         {\cf17 private} readonly SHA512 _sha512;\par
00019 \par
00021         {\cf17 public} {\cf17 event} EventHandler<double> ProgressChanged;\par
00022 \par
00032         {\cf17 public} LiteEn({\cf18 byte}[] seed, {\cf18 byte}[] salt)\par
00033         \{\par
00034             _sha256 = SHA256.Create();\par
00035             _sha384 = SHA384.Create();\par
00036             _sha512 = SHA512.Create();\par
00037 \par
00038             _seed = BitConverter.ToString(_sha512.ComputeHash(seed.Concat(salt).ToArray())).Replace({\cf22 "-"}, {\cf22 ""});\par
00039             _salt = _sha384.ComputeHash(salt);\par
00040             _sCount = _seed.Length;\par
00041         \}\par
00042 \par
00044         {\cf17 public} {\cf18 void} Generate({\cf18 byte}[] buffer, {\cf18 int} rotate)\par
00045         \{\par
00046             {\cf18 double} totalProgress = 0;\par
00047 \par
00048             {\cf19 if} (rotate < 1)\par
00049             \{\par
00050                 rotate = Transformers.ToAbsInt32(_salt, (buffer.Length % 41) + _seed[28] + _salt[0]) % 10;\par
00051             \}\par
00052 \par
00053             {\cf18 byte}[] tl = {\cf17 new} {\cf18 byte}[5]\par
00054             \{\par
00055                 (byte)(buffer.Length * 6 % 256),\par
00056                 (byte)Math.Abs((buffer.Length - _sCount) * rotate % 256),\par
00057                 (byte)(buffer.Length * 124 % 256),\par
00058                 (byte)((buffer.Length + rotate) * 75 % 128),\par
00059                 (byte)(buffer.Length * 13 % 64),\par
00060             \};\par
00061 \par
00062             {\cf18 byte}[] tl2 = _sha384.ComputeHash(Transformers.Mix((buffer.Length + rotate) * _seed[17], tl, _salt));\par
00063 \par
00064             {\cf18 byte}[] vf = _sha512.ComputeHash(tl).Concat(_sha256.ComputeHash(ChangeCase(tl2.Base64Encode(), _salt[23] + (buffer.Length % 14)).Base64EncodeToByte()).Base64EncodeToByte()).ToArray();\par
00065             {\cf18 byte}[] vt = _sha256.ComputeHash(vf.Concat(_sha384.ComputeHash(tl2.Select(x => ({\cf18 byte})(x * 6 % 256)).ToArray())).ToArray());\par
00066 \par
00067             {\cf18 int} i = 0;\par
00068 \par
00069             {\cf19 while} (i < buffer.Length)\par
00070             \{\par
00071                 vt = _sha384.ComputeHash(_sha512.ComputeHash(vt));\par
00072 \par
00073                 {\cf19 for} ({\cf18 int} j = 0; j < rotate; j++)\par
00074                 \{\par
00075                     vt = _sha256.ComputeHash(_sha384.ComputeHash(vt).Concat(_salt).ToArray());\par
00076                 \}\par
00077 \par
00078                 Array.Copy(vt, 0, buffer, i, Math.Min(vt.Length, buffer.Length - i));\par
00079 \par
00080                 totalProgress += (double)vt.Length / buffer.Length;\par
00081                 ProgressChanged?.Invoke({\cf17 this}, totalProgress * 100);\par
00082 \par
00083                 i += vt.Length;\par
00084             \}\par
00085         \}\par
00086 \par
00087         {\cf17 private} {\cf18 string} ChangeCase({\cf18 string} src, {\cf18 int} seed)\par
00088         \{\par
00089             {\cf18 int} c = 0;\par
00090 \par
00091             {\cf18 char}[] clone = src.ToArray();\par
00092             Transformers.Shuffle(clone, seed);\par
00093 \par
00094             {\cf19 return} {\cf17 new} string(clone.Select(x =>\par
00095             \{\par
00096                 return c++ % 2 == 0 ? x.ToString().ToUpper()[0] : x;\par
00097             \}).ToArray());\par
00098         \}\par
00099     \}\par
00100 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SafeRng.cs File Reference\par \pard\plain 
{\tc\tcl2 \v SafeRng.cs}
{\xe \v SafeRng.cs}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Generators.SafeRng}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random bytes array with additional safety. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Generators}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SafeRng.cs\par \pard\plain 
{\tc\tcl2 \v SafeRng.cs}
{\xe \v SafeRng.cs}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Generators\par
00002 \{\par
00006     {\cf17 public} {\cf17 class }SafeRng : IGenerator\par
00007     \{\par
00008         {\cf17 private} {\cf17 static} readonly CryptoRandom random = {\cf17 new} CryptoRandom();\par
00009 \par
00011         {\cf17 public} {\cf17 event} EventHandler<double> ProgressChanged;\par
00012 \par
00016         {\cf17 public} {\cf17 static} SafeRng Instance \{ {\cf17 get}; \} = {\cf17 new} SafeRng();\par
00017 \par
00019         {\cf17 public} {\cf18 void} Generate({\cf18 byte}[] buffer)\par
00020         \{\par
00021             {\cf18 double} totalProgress = 0;\par
00022             {\cf18 int} sampleSize = 256;\par
00023 \par
00024             List<byte[]> result = {\cf17 new} List<byte[]>();\par
00025             {\cf18 int} tries = 0;\par
00026             {\cf18 int} totalTries = 0;\par
00027 \par
00028             {\cf19 for} ({\cf18 int} i = 0; i < buffer.Length; i += sampleSize)\par
00029             \{\par
00030                 {\cf18 byte}[] sample = {\cf17 new} {\cf18 byte}[sampleSize];\par
00031                 random.NextBytes(sample);\par
00032                 Transformers.Shuffle(sample, buffer.Length + totalTries + i);\par
00033 \par
00034                 {\cf20 // Ignore keys with 10 or more duplicated items.}\par
00035                 {\cf19 if} (result.All((b) => b.Intersect(sample).Count() < 10) || tries > 100)\par
00036                 \{\par
00037                     result.Add(sample);\par
00038 \par
00039                     totalProgress += (double)sampleSize / buffer.Length;\par
00040                     ProgressChanged?.Invoke({\cf17 this}, totalProgress * 100);\par
00041 \par
00042                     tries = 0;\par
00043                 \}\par
00044                 {\cf19 else}\par
00045                 \{\par
00046                     tries++;\par
00047                     i -= sampleSize;\par
00048                 \}\par
00049 \par
00050                 totalTries++;\par
00051             \}\par
00052 \par
00053             ProgressChanged?.Invoke({\cf17 this}, -1);\par
00054             result.SelectMany((k) => k).Take(buffer.Length).ToArray().CopyTo(buffer, 0);\par
00055         \}\par
00056     \}\par
00057 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UnixRandom.cs File Reference\par \pard\plain 
{\tc\tcl2 \v UnixRandom.cs}
{\xe \v UnixRandom.cs}
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Generators.UnixRandom}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generates random data with unix standard /dev/random character device. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Generators}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UnixRandom.cs\par \pard\plain 
{\tc\tcl2 \v UnixRandom.cs}
{\xe \v UnixRandom.cs}
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Runtime.InteropServices;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Generators\par
00004 \{\par
00008     {\cf17 public} {\cf17 class }UnixRandom : IGenerator\par
00009     \{\par
00011         {\cf17 public} {\cf17 event} EventHandler<double> ProgressChanged;\par
00012 \par
00017         {\cf17 public} UnixRandom()\par
00018         \{\par
00019             {\cf19 if} (RuntimeInformation.IsOSPlatform(OSPlatform.Windows) || !File.Exists({\cf22 "/dev/random"}))\par
00020             \{\par
00021                 {\cf19 throw} {\cf17 new} PlatformNotSupportedException();\par
00022             \}\par
00023         \}\par
00024 \par
00026         {\cf17 public} {\cf18 void} Generate({\cf18 byte}[] buffer)\par
00027         \{\par
00028             ProgressChanged?.Invoke({\cf17 this}, -1);\par
00029 \par
00030             {\cf17 using} (FileStream file = File.OpenRead({\cf22 "/dev/random"}))\par
00031             \{\par
00032                 file.Read(buffer, 0, buffer.Length);\par
00033             \}\par
00034 \par
00035             ProgressChanged?.Invoke({\cf17 this}, 100);\par
00036         \}\par
00037     \}\par
00038 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Header.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Header.cs}
{\xe \v Header.cs}
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Header}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the data header. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Header.cs\par \pard\plain 
{\tc\tcl2 \v Header.cs}
{\xe \v Header.cs}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Text.Json;\par
00002 {\cf17 using }System.Text.Json.Serialization;\par
00003 \par
00004 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor\par
00007 \{\par
00011     {\cf17 public} {\cf17 class }Header\par
00012     \{\par
00013         {\cf17 private} {\cf17 static} readonly {\cf18 byte}[] StartHeaderPattern = {\cf17 new} {\cf18 byte}[] \{ 2, 97, 7, 64, 159, 37, 46, 128 \};\par
00014         {\cf17 private} {\cf17 static} readonly {\cf18 byte}[] EndHeaderPattern = {\cf17 new} {\cf18 byte}[] \{ 97, 7, 64, 159, 37, 46, 128, 3 \};\par
00015 \par
00016 {\cf21 #if NET6_0_OR_GREATER}\par
00023         {\cf17 protected} {\cf17 virtual} JsonSerializerContext JsonSerializerContext => SourceGenerationHeaderContext.Default;\par
00024 {\cf21 #endif}\par
00025 \par
00029         {\cf17 public} Version Version \{ {\cf17 get}; {\cf17 set}; \}\par
00030 \par
00034         {\cf17 public} Version EngineVersion \{ {\cf17 get}; {\cf17 set}; \}\par
00035 \par
00039         {\cf17 public} HeaderVerbosity Verbosity \{ {\cf17 get}; {\cf17 set}; \}\par
00040 \par
00044         {\cf17 public} {\cf18 int} BlockSize \{ {\cf17 get}; {\cf17 set}; \}\par
00045 \par
00049         {\cf17 public} CryptoProviderConfiguration Configuration \{ {\cf17 get}; {\cf17 set}; \}\par
00050 \par
00054         {\cf17 public} Dictionary<string, string> Extra \{ {\cf17 get}; {\cf17 set}; \}\par
00055 \par
00061         {\cf17 public} {\cf18 byte}[] CreatePayload()\par
00062         \{\par
00063             {\cf18 string} js = ToJson({\cf17 this});\par
00064             {\cf18 byte}[] b64 = js.Base64EncodeToByte();\par
00065             {\cf18 byte}[] payload = StartHeaderPattern.Concat(b64)\par
00066                                                .Concat(EndHeaderPattern)\par
00067                                                .ToArray();\par
00068 \par
00069             {\cf19 return} payload.Length > 8192\par
00070                 ? {\cf19 throw} {\cf17 new} OverflowException(${\cf22 "Header payload size is out of allowed range \{payload\} > 8192"})\par
00071                 : payload;\par
00072         \}\par
00073 \par
00083         {\cf17 public} {\cf17 static} T ReadHeader<T>(Stream stream)\par
00084             where T : Header, {\cf17 new}()\par
00085         \{\par
00086             stream.Seek(0, SeekOrigin.Begin);\par
00087 \par
00088             {\cf18 byte}[] buffer = {\cf17 new} {\cf18 byte}[Math.Min(1024, stream.Length)];\par
00089 \par
00090             {\cf18 int} startPos = -1;\par
00091             {\cf18 int} endPos = -1;\par
00092             {\cf18 int} startIndex = 0;\par
00093             {\cf18 int} tries = 0;\par
00094 \par
00095             {\cf19 while} ({\cf17 true})\par
00096             \{\par
00097                 tries++;\par
00098 \par
00099                 {\cf20 // Get 1KB of data to search for header.}\par
00100                 stream.Read(buffer, 0, buffer.Length);\par
00101 \par
00102                 {\cf19 if} (startPos == -1)\par
00103                 \{\par
00104                     {\cf18 int} ts = buffer.LocatePattern(StartHeaderPattern);\par
00105                     {\cf19 if} (ts != -1)\par
00106                     \{\par
00107                         startPos = ts + StartHeaderPattern.Length;\par
00108                         startIndex = tries - 1;\par
00109                     \}\par
00110                 \}\par
00111 \par
00112                 {\cf19 if} (startPos > -1 && endPos == -1)\par
00113                 \{\par
00114                     {\cf18 int} te = buffer.LocatePattern(EndHeaderPattern);\par
00115                     {\cf19 if} (te != -1)\par
00116                     \{\par
00117                         endPos = te;\par
00118                     \}\par
00119                 \}\par
00120 \par
00121                 {\cf19 if} ((startPos == -1 && tries > 2) || (endPos == -1 && tries > 8 + startIndex))\par
00122                 \{\par
00123                     stream.Seek(0, SeekOrigin.Begin);\par
00124 \par
00125                     {\cf19 return} {\cf17 new} T()\par
00126                     \{\par
00127                         Verbosity = HeaderVerbosity.Empty\par
00128                     \};\par
00129                 \}\par
00130 \par
00131                 {\cf19 if} (startPos > -1 && endPos > -1)\par
00132                 \{\par
00133                     {\cf19 break};\par
00134                 \}\par
00135             \}\par
00136 \par
00137             stream.Seek(startPos, SeekOrigin.Begin);\par
00138 \par
00139             {\cf18 byte}[] dataBuffer = {\cf17 new} {\cf18 byte}[endPos - startPos];\par
00140             stream.Read(dataBuffer, 0, dataBuffer.Length);\par
00141 \par
00142             T header = ReadJson<T>(dataBuffer.Base64DecodeToString());\par
00143 \par
00144             {\cf18 int} detail = 0;\par
00145             {\cf19 if} (header.Version != {\cf17 null} && header.EngineVersion != {\cf17 null})\par
00146             \{\par
00147                 detail++;\par
00148 \par
00149                 {\cf19 if} (header.BlockSize > 0)\par
00150                 \{\par
00151                     detail++;\par
00152 \par
00153                     {\cf19 if} (header.Configuration != {\cf17 null})\par
00154                     \{\par
00155                         detail++;\par
00156                     \}\par
00157                 \}\par
00158             \}\par
00159 \par
00160             header.Verbosity = (HeaderVerbosity)detail;\par
00161 \par
00162             stream.Seek(endPos + EndHeaderPattern.Length, SeekOrigin.Begin);\par
00163 \par
00164             {\cf19 return} header;\par
00165         \}\par
00166 \par
00167         {\cf17 private} {\cf17 static} readonly JsonSerializerOptions jOptions = {\cf17 new} JsonSerializerOptions()\par
00168         \{\par
00169             DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingDefault,\par
00170         \};\par
00171 \par
00172 {\cf21 #if NET6_0_OR_GREATER}\par
00173         {\cf17 private} {\cf17 static} {\cf18 string} ToJson(Header obj) => JsonWorker.ToJson(obj, obj.JsonSerializerContext);\par
00174 \par
00175         {\cf17 private} {\cf17 static} T ReadJson<T>({\cf18 string} json)\par
00176             where T : Header, {\cf17 new}() => JsonWorker.ReadJson<T>(json, {\cf17 new} T().JsonSerializerContext);\par
00177 {\cf21 #else}\par
00178         {\cf17 private} {\cf17 static} {\cf18 string} ToJson(Header obj) => JsonWorker.ToJson(obj, jOptions);\par
00179 \par
00180         {\cf17 private} {\cf17 static} T ReadJson<T>({\cf18 string} json)\par
00181             where T : Header, {\cf17 new}() => JsonWorker.ReadJson<T>(json, jOptions);\par
00182 {\cf21 #endif}\par
00183     \}\par
00184 \par
00185 {\cf21 #if NET6_0_OR_GREATER}\par
00186     [JsonSourceGenerationOptions(GenerationMode = JsonSourceGenerationMode.Metadata, WriteIndented = {\cf17 false}, DefaultIgnoreCondition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]\par
00187     [JsonSerializable(typeof(Header))]\par
00188     {\cf17 internal} {\cf17 partial class }SourceGenerationHeaderContext : JsonSerializerContext\par
00189     \{\par
00190     \}\par
00191 {\cf21 #endif}\par
00192 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HeaderVerbosity.cs File Reference\par \pard\plain 
{\tc\tcl2 \v HeaderVerbosity.cs}
{\xe \v HeaderVerbosity.cs}
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SAPTeam.Kryptor.HeaderVerbosity} \{ {\b SAPTeam.Kryptor.Empty} = 0
, {\b SAPTeam.Kryptor.Minimum} = 1
, {\b SAPTeam.Kryptor.Normal} = 2
, {\b SAPTeam.Kryptor.Maximum} = 3
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Specifies the level of details included in header. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HeaderVerbosity.cs\par \pard\plain 
{\tc\tcl2 \v HeaderVerbosity.cs}
{\xe \v HeaderVerbosity.cs}
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor\par
00002 \{\par
00006     {\cf17 public} {\cf17 enum} HeaderVerbosity\par
00007     \{\par
00011         Empty = 0,\par
00012 \par
00016         Minimum = 1,\par
00017 \par
00021         Normal = 2,\par
00022 \par
00026         Maximum = 3,\par
00027     \}\par
00028 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AesHelper.cs File Reference\par \pard\plain 
{\tc\tcl2 \v AesHelper.cs}
{\xe \v AesHelper.cs}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Helpers.AesHelper}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides static methods to encrypt and decrypt data with AES algorithm. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Helpers}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AesHelper.cs\par \pard\plain 
{\tc\tcl2 \v AesHelper.cs}
{\xe \v AesHelper.cs}
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Security.Cryptography;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor.Helpers\par
00004 \{\par
00008     {\cf17 public} {\cf17 static} {\cf17 class }AesHelper\par
00009     \{\par
00010         {\cf17 internal} {\cf17 static} {\cf18 void} CheckArgument({\cf18 byte}[] arg, {\cf18 string} paramName, {\cf18 int} size = 0)\par
00011         \{\par
00012             {\cf19 if} (arg == {\cf17 null})\par
00013             \{\par
00014                 {\cf19 throw} {\cf17 new} ArgumentNullException(paramName);\par
00015             \}\par
00016             {\cf19 else} {\cf19 if} (arg.Length == 0)\par
00017             \{\par
00018                 {\cf19 throw} {\cf17 new} ArgumentException(${\cf22 "\{paramName\} argument is empty"});\par
00019             \}\par
00020             {\cf19 else} {\cf19 if} (size > 0 && arg.Length != size)\par
00021             \{\par
00022                 {\cf19 throw} {\cf17 new} ArgumentException(${\cf22 "The expected size for \{paramName\} is \{size\}"});\par
00023             \}\par
00024         \}\par
00025 \par
00039         {\cf17 public} {\cf17 static} async Task<byte[]> EncryptAesEcbAsync({\cf18 byte}[] data, {\cf18 byte}[] key, CancellationToken cancellationToken)\par
00040         \{\par
00041             CheckArgument(data, nameof(data));\par
00042             CheckArgument(key, nameof(key), 32);\par
00043 \par
00044             {\cf17 using} (Aes aesAlg = Aes.Create())\par
00045             \{\par
00046                 aesAlg.Key = key;\par
00047                 aesAlg.Mode = CipherMode.ECB; {\cf20 // Use ECB mode}\par
00048                 aesAlg.Padding = PaddingMode.PKCS7;\par
00049 \par
00050                 ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\par
00051 \par
00052                 {\cf17 using} (MemoryStream msEncrypt = {\cf17 new} MemoryStream())\par
00053                 \{\par
00054                     {\cf17 using} (CryptoStream csEncrypt = {\cf17 new} CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\par
00055                     \{\par
00056                         await AsyncCompat.WriteAsync(csEncrypt, data, 0, data.Length, cancellationToken);\par
00057                     \}\par
00058 \par
00059                     {\cf19 return} msEncrypt.ToArray();\par
00060                 \}\par
00061             \}\par
00062         \}\par
00063 \par
00077         {\cf17 public} {\cf17 static} async Task<byte[]> DecryptAesEcbAsync({\cf18 byte}[] data, {\cf18 byte}[] key, CancellationToken cancellationToken)\par
00078         \{\par
00079             CheckArgument(data, nameof(data));\par
00080             CheckArgument(key, nameof(key), 32);\par
00081 \par
00082             {\cf17 using} (Aes aesAlg = Aes.Create())\par
00083             \{\par
00084                 aesAlg.Key = key;\par
00085                 aesAlg.Mode = CipherMode.ECB; {\cf20 // Use ECB mode}\par
00086                 aesAlg.Padding = PaddingMode.PKCS7;\par
00087 \par
00088                 ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\par
00089 \par
00090                 {\cf17 using} (MemoryStream msDecrypt = {\cf17 new} MemoryStream(data))\par
00091                 \{\par
00092                     {\cf17 using} (CryptoStream csDecrypt = {\cf17 new} CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\par
00093                     \{\par
00094                         {\cf17 using} (MemoryStream tempMemory = {\cf17 new} MemoryStream())\par
00095                         \{\par
00096                             {\cf19 try}\par
00097                             \{\par
00098                                 {\cf18 byte}[] buffer = {\cf17 new} {\cf18 byte}[1024];\par
00099                                 {\cf18 int} readBytes = 0;\par
00100                                 {\cf19 while} ((readBytes = csDecrypt.Read(buffer, 0, buffer.Length)) > 0)\par
00101                                 \{\par
00102                                     await AsyncCompat.WriteAsync(tempMemory, buffer, 0, readBytes, cancellationToken);\par
00103                                 \}\par
00104 \par
00105                                 {\cf19 return} tempMemory.ToArray();\par
00106                             \}\par
00107                             {\cf19 catch} (CryptographicException)\par
00108                             \{\par
00109                                 {\cf19 throw} {\cf17 new} InvalidDataException({\cf22 "Cannot decrypt data."});\par
00110                             \}\par
00111                         \}\par
00112                     \}\par
00113                 \}\par
00114             \}\par
00115         \}\par
00116 \par
00133         {\cf17 public} {\cf17 static} async Task<byte[]> EncryptAesCbcAsync({\cf18 byte}[] data, {\cf18 byte}[] key, {\cf18 byte}[] iv, CancellationToken cancellationToken)\par
00134         \{\par
00135             CheckArgument(key, nameof(key), 32);\par
00136             CheckArgument(iv, nameof(iv), 16);\par
00137 \par
00138             {\cf17 using} (Aes aesAlg = Aes.Create())\par
00139             \{\par
00140                 aesAlg.Key = key;\par
00141                 aesAlg.IV = iv;\par
00142                 aesAlg.Mode = CipherMode.CBC; {\cf20 // Use CBC mode}\par
00143                 aesAlg.Padding = PaddingMode.PKCS7;\par
00144 \par
00145                 ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);\par
00146 \par
00147                 {\cf17 using} (MemoryStream msEncrypt = {\cf17 new} MemoryStream())\par
00148                 \{\par
00149                     {\cf17 using} (CryptoStream csEncrypt = {\cf17 new} CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))\par
00150                     \{\par
00151                         await AsyncCompat.WriteAsync(csEncrypt, data, 0, data.Length, cancellationToken);\par
00152                     \}\par
00153 \par
00154                     {\cf19 return} msEncrypt.ToArray();\par
00155                 \}\par
00156             \}\par
00157         \}\par
00158 \par
00175         {\cf17 public} {\cf17 static} async Task<byte[]> DecryptAesCbcAsync({\cf18 byte}[] data, {\cf18 byte}[] key, {\cf18 byte}[] iv, CancellationToken cancellationToken)\par
00176         \{\par
00177             CheckArgument(key, nameof(key), 32);\par
00178             CheckArgument(iv, nameof(iv), 16);\par
00179 \par
00180             {\cf17 using} (Aes aesAlg = Aes.Create())\par
00181             \{\par
00182                 aesAlg.Key = key;\par
00183                 aesAlg.IV = iv;\par
00184                 aesAlg.Mode = CipherMode.CBC; {\cf20 // Use CBC mode}\par
00185                 aesAlg.Padding = PaddingMode.PKCS7;\par
00186 \par
00187                 ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);\par
00188 \par
00189                 {\cf17 using} (MemoryStream msDecrypt = {\cf17 new} MemoryStream(data))\par
00190                 \{\par
00191                     {\cf17 using} (CryptoStream csDecrypt = {\cf17 new} CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))\par
00192                     \{\par
00193                         {\cf17 using} (MemoryStream tempMemory = {\cf17 new} MemoryStream())\par
00194                         \{\par
00195                             {\cf19 try}\par
00196                             \{\par
00197                                 {\cf18 byte}[] buffer = {\cf17 new} {\cf18 byte}[1024];\par
00198                                 {\cf18 int} readBytes = 0;\par
00199                                 {\cf19 while} ((readBytes = csDecrypt.Read(buffer, 0, buffer.Length)) > 0)\par
00200                                 \{\par
00201                                     await AsyncCompat.WriteAsync(tempMemory, buffer, 0, readBytes, cancellationToken);\par
00202                                 \}\par
00203 \par
00204                                 {\cf19 return} tempMemory.ToArray();\par
00205                             \}\par
00206                             {\cf19 catch} (CryptographicException)\par
00207                             \{\par
00208                                 {\cf19 throw} {\cf17 new} InvalidDataException({\cf22 "Cannot decrypt data."});\par
00209                             \}\par
00210                         \}\par
00211                     \}\par
00212                 \}\par
00213             \}\par
00214         \}\par
00215     \}\par
00216 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AsyncCompat.cs File Reference\par \pard\plain 
{\tc\tcl2 \v AsyncCompat.cs}
{\xe \v AsyncCompat.cs}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Helpers.AsyncCompat}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides methods to use in async-challenging situations. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Helpers}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AsyncCompat.cs\par \pard\plain 
{\tc\tcl2 \v AsyncCompat.cs}
{\xe \v AsyncCompat.cs}
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Helpers\par
00002 \{\par
00009     {\cf17 public} {\cf17 static} {\cf17 class }AsyncCompat\par
00010     \{\par
00014         {\cf17 public} {\cf17 static} {\cf18 bool} IsAsyncCompatible \{ {\cf17 get}; {\cf17 set}; \}\par
00015 \par
00016         {\cf17 static} AsyncCompat()\par
00017         \{\par
00018             IsAsyncCompatible = {\cf17 true};\par
00019         \}\par
00020 \par
00027         {\cf17 public} {\cf17 static} async Task Delay({\cf18 int} ms) => await Delay(ms, CancellationToken.None);\par
00028 \par
00038         {\cf17 public} {\cf17 static} async Task Delay({\cf18 int} ms, CancellationToken cancellationToken)\par
00039         \{\par
00040             {\cf19 if} (IsAsyncCompatible)\par
00041                 await Task.Delay(ms, cancellationToken);\par
00042             {\cf19 else}\par
00043             \{\par
00044                 Thread.Sleep(ms);\par
00045             \}\par
00046         \}\par
00047 \par
00063         {\cf17 public} {\cf17 static} async Task WriteAsync(Stream stream, {\cf18 byte}[] buffer, {\cf18 int} offset, {\cf18 int} count) => await WriteAsync(stream, buffer, offset, count, CancellationToken.None);\par
00064 \par
00083         {\cf17 public} {\cf17 static} async Task WriteAsync(Stream stream, {\cf18 byte}[] buffer, {\cf18 int} offset, {\cf18 int} count, CancellationToken cancellationToken)\par
00084         \{\par
00085             {\cf19 if} (IsAsyncCompatible)\par
00086                 await stream.WriteAsync(buffer, offset, count, cancellationToken);\par
00087             {\cf19 else}\par
00088             \{\par
00089                 stream.Write(buffer, offset, count);\par
00090             \}\par
00091         \}\par
00092 \par
00108         {\cf17 public} {\cf17 static} async Task ReadAsync(Stream stream, {\cf18 byte}[] buffer, {\cf18 int} offset, {\cf18 int} count) => await ReadAsync(stream, buffer, offset, count, CancellationToken.None);\par
00109 \par
00128         {\cf17 public} {\cf17 static} async Task ReadAsync(Stream stream, {\cf18 byte}[] buffer, {\cf18 int} offset, {\cf18 int} count, CancellationToken cancellationToken)\par
00129         \{\par
00130             {\cf19 if} (IsAsyncCompatible)\par
00131                 await stream.ReadAsync(buffer, offset, count, cancellationToken);\par
00132             {\cf19 else}\par
00133             \{\par
00134                 stream.Read(buffer, offset, count);\par
00135             \}\par
00136         \}\par
00137 \par
00147         {\cf17 public} {\cf17 static} async Task<string> ReadLineAsync(TextReader textReader)\par
00148         \{\par
00149             {\cf19 if} (IsAsyncCompatible)\par
00150             \{\par
00151                 {\cf19 return} await textReader.ReadLineAsync();\par
00152             \}\par
00153             {\cf19 else}\par
00154             \{\par
00155                 {\cf19 return} textReader.ReadLine();\par
00156             \}\par
00157         \}\par
00158     \}\par
00159 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IProgressReport.cs File Reference\par \pard\plain 
{\tc\tcl2 \v IProgressReport.cs}
{\xe \v IProgressReport.cs}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b SAPTeam.Kryptor.Helpers.IProgressReport}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents interface to report progress of works. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor.Helpers}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IProgressReport.cs\par \pard\plain 
{\tc\tcl2 \v IProgressReport.cs}
{\xe \v IProgressReport.cs}
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 namespace }SAPTeam.Kryptor.Helpers\par
00002 \{\par
00006     {\cf17 public} {\cf17 interface }IProgressReport\par
00007     \{\par
00014         {\cf17 event} EventHandler<double> ProgressChanged;\par
00015     \}\par
00016 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IGenerator.cs File Reference\par \pard\plain 
{\tc\tcl2 \v IGenerator.cs}
{\xe \v IGenerator.cs}
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b SAPTeam.Kryptor.IGenerator}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents standard to generate random output. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IGenerator.cs\par \pard\plain 
{\tc\tcl2 \v IGenerator.cs}
{\xe \v IGenerator.cs}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor\par
00004 \{\par
00008     {\cf17 public} {\cf17 interface }IGenerator : IProgressReport\par
00009     \{\par
00016         {\cf18 void} Generate({\cf18 byte}[] buffer);\par
00017     \}\par
00018 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ITranformer.cs File Reference\par \pard\plain 
{\tc\tcl2 \v ITranformer.cs}
{\xe \v ITranformer.cs}
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b SAPTeam.Kryptor.ITranformer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents standard to transform specified inputs to a reproducible output. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ITranformer.cs\par \pard\plain 
{\tc\tcl2 \v ITranformer.cs}
{\xe \v ITranformer.cs}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00002 \par
00003 {\cf17 namespace }SAPTeam.Kryptor\par
00004 \{\par
00008     {\cf17 public} {\cf17 interface }ITranformer : IProgressReport\par
00009     \{\par
00019         {\cf18 void} Generate({\cf18 byte}[] buffer, {\cf18 int} rotate);\par
00020     \}\par
00021 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
JsonWorker.cs File Reference\par \pard\plain 
{\tc\tcl2 \v JsonWorker.cs}
{\xe \v JsonWorker.cs}
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.JsonWorker}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents methods to work with json serialization and deserialization with full support for AOT. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
JsonWorker.cs\par \pard\plain 
{\tc\tcl2 \v JsonWorker.cs}
{\xe \v JsonWorker.cs}
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Text.Json;\par
00002 {\cf17 using }System.Text.Json.Serialization;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor\par
00005 \{\par
00009     {\cf17 public} {\cf17 class }JsonWorker\par
00010     \{\par
00011         {\cf17 private} readonly JsonSerializerOptions options;\par
00012         {\cf17 private} readonly JsonSerializerContext context;\par
00013 \par
00023         {\cf17 public} JsonWorker(JsonSerializerOptions options = {\cf17 null}, JsonSerializerContext context = {\cf17 null})\par
00024         \{\par
00025             this.options = options;\par
00026             this.context = context;\par
00027         \}\par
00028 \par
00029 {\cf21 #if NET6_0_OR_GREATER}\par
00039         {\cf17 public} {\cf18 string} ToJson({\cf18 object} obj) => JsonSerializer.Serialize(obj, obj.GetType(), context);\par
00040 \par
00053         {\cf17 public} T ReadJson<T>({\cf18 string} json)\par
00054             where T : {\cf17 class }=> JsonSerializer.Deserialize(json, typeof(T), context) as T;\par
00055 {\cf21 #else}\par
00065 \par
00066         {\cf17 public} {\cf18 string} ToJson({\cf18 object} obj) => JsonSerializer.Serialize(obj, obj.GetType(), options);\par
00067 \par
00080         {\cf17 public} T ReadJson<T>({\cf18 string} json)\par
00081             where T : {\cf17 class }=> JsonSerializer.Deserialize(json, typeof(T), options) as T;\par
00082 {\cf21 #endif}\par
00083 \par
00084 {\cf21 #if NET6_0_OR_GREATER}\par
00100         {\cf17 public} {\cf17 static} {\cf18 string} ToJson({\cf18 object} obj, JsonSerializerContext context) => JsonSerializer.Serialize(obj, obj.GetType(), context);\par
00101 \par
00120         {\cf17 public} {\cf17 static} T ReadJson<T>({\cf18 string} json, JsonSerializerContext context)\par
00121             where T : {\cf17 class }=> JsonSerializer.Deserialize(json, typeof(T), context) as T;\par
00122 {\cf21 #else}\par
00135         {\cf17 public} {\cf17 static} {\cf18 string} ToJson({\cf18 object} obj, JsonSerializerOptions options) => JsonSerializer.Serialize(obj, obj.GetType(), options);\par
00136 \par
00152         {\cf17 public} {\cf17 static} T ReadJson<T>({\cf18 string} json, JsonSerializerOptions options)\par
00153             where T : {\cf17 class }=> JsonSerializer.Deserialize(json, typeof(T), options) as T;\par
00154 {\cf21 #endif}\par
00155     \}\par
00156 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Kes.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Kes.cs}
{\xe \v Kes.cs}
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Kes}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides methods to encrypt and decrypt data using the {\b Kryptor} Encryption Standard (KES). }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Kes.cs\par \pard\plain 
{\tc\tcl2 \v Kes.cs}
{\xe \v Kes.cs}
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Data;\par
00002 {\cf17 using }System.Reflection;\par
00003 \par
00004 {\cf17 using }SAPTeam.Kryptor.CryptoProviders;\par
00005 {\cf17 using }SAPTeam.Kryptor.Helpers;\par
00006 \par
00007 {\cf17 namespace }SAPTeam.Kryptor\par
00008 \{\par
00012     {\cf17 public} {\cf17 class }Kes : IProgressReport\par
00013     \{\par
00014 {\cf21         #region Size Parameters}\par
00015 \par
00019         {\cf17 public} {\cf17 const} {\cf18 int} DefaultBlockSize = 0x8000;\par
00020 \par
00024         {\cf17 public} {\cf18 int} BlockSize \{ {\cf17 get}; {\cf17 set}; \} = DefaultBlockSize;\par
00025 \par
00029         {\cf17 public} {\cf18 int} GetDecryptionBufferSize(CryptoProcess process = {\cf19 default}) => (process.BlockSize > 0 ? process.BlockSize : BlockSize) * Provider.DecryptionChunkSize;\par
00030 \par
00034         {\cf17 public} {\cf18 int} GetEncryptionBufferSize(CryptoProcess process = {\cf19 default}) => ((process.BlockSize > 0 ? process.BlockSize : BlockSize) - (Provider.Configuration.RemoveHash ? 0 : 1)) * Provider.EncryptionChunkSize;\par
00035 \par
00036 {\cf21         #endregion}\par
00037 \par
00041         {\cf17 public} {\cf17 static} Version Version => {\cf17 new} Version(0, 16, 0, 0);\par
00042 \par
00046         {\cf17 public} {\cf17 static} Version MinimumSupportedVersion => {\cf17 new} Version(0, 14, 0, 0);\par
00047 \par
00051         {\cf17 public} CryptoProvider Provider \{ {\cf17 get}; {\cf17 set}; \}\par
00052 \par
00054         {\cf17 public} {\cf17 event} EventHandler<double> ProgressChanged;\par
00055 \par
00068         {\cf17 public} Kes(KeyStore keyStore, CryptoProviderConfiguration configuration, {\cf18 int} blockSize = {\cf19 default}) : this(blockSize) => Provider = CryptoProviderFactory.Create(keyStore, configuration);\par
00069 \par
00079         {\cf17 public} Kes(CryptoProvider provider, {\cf18 int} blockSize = {\cf19 default}) : this(blockSize) => Provider = provider;\par
00080 \par
00087         {\cf17 public} Kes({\cf18 int} blockSize = {\cf19 default})\par
00088         \{\par
00089             {\cf19 if} (blockSize > 0)\par
00090             \{\par
00091                 BlockSize = blockSize;\par
00092             \}\par
00093         \}\par
00094 \par
00095         {\cf17 private} {\cf18 void} UpdateHeader(Header header)\par
00096         \{\par
00097             {\cf19 if} (({\cf18 int})header.Verbosity > 0)\par
00098             \{\par
00099                 header.Version = Version;\par
00100                 header.EngineVersion = {\cf17 new} Version(Assembly.GetAssembly(typeof(Kes)).GetCustomAttribute<AssemblyFileVersionAttribute>().Version);\par
00101 \par
00102                 {\cf19 if} (({\cf18 int})header.Verbosity > 1)\par
00103                 \{\par
00104                     header.BlockSize = BlockSize;\par
00105                 \}\par
00106             \}\par
00107         \}\par
00108 \par
00118         {\cf17 public} async Task EncryptAsync(Stream source, Stream dest) => await EncryptAsync(source, dest, {\cf17 null}, CancellationToken.None);\par
00119 \par
00132         {\cf17 public} async Task EncryptAsync(Stream source, Stream dest, CancellationToken cancellationToken) => await EncryptAsync(source, dest, {\cf17 null}, cancellationToken);\par
00133 \par
00146         {\cf17 public} async Task EncryptAsync(Stream source, Stream dest, Header header) => await EncryptAsync(source, dest, header, CancellationToken.None);\par
00147 \par
00163         {\cf17 public} async Task EncryptAsync(Stream source, Stream dest, Header header, CancellationToken cancellationToken)\par
00164         \{\par
00165             {\cf20 // If there is no header, create a header with normal details.}\par
00166             {\cf19 if} (header == {\cf17 null})\par
00167             \{\par
00168                 Dictionary<string, string> extra = {\cf17 new} Dictionary<string, string>\par
00169                 \{\par
00170                     [{\cf22 "client"}] = {\cf22 "kryptor-core"}\par
00171                 \};\par
00172 \par
00173                 header = {\cf17 new} Header()\par
00174                 \{\par
00175                     Verbosity = HeaderVerbosity.Normal,\par
00176                     Extra = extra,\par
00177                 \};\par
00178             \}\par
00179 \par
00180             UpdateHeader(header);\par
00181             Provider.UpdateHeader(header);\par
00182 \par
00183             {\cf19 if} (header.Verbosity > 0)\par
00184             \{\par
00185                 {\cf18 byte}[] hArray = header.CreatePayload();\par
00186                 await AsyncCompat.WriteAsync(dest, hArray, 0, hArray.Length, cancellationToken);\par
00187             \}\par
00188 \par
00189             await ProcessDataAsync(source, dest, {\cf17 true}, cancellationToken);\par
00190         \}\par
00191 \par
00201         {\cf17 public} async Task DecryptAsync(Stream source, Stream dest) => await DecryptAsync(source, dest, CancellationToken.None);\par
00202 \par
00215         {\cf17 public} async Task DecryptAsync(Stream source, Stream dest, CancellationToken cancellationToken)\par
00216         \{\par
00217             Header header = Header.ReadHeader<Header>(source);\par
00218 \par
00219             {\cf19 if} (header.Version != {\cf17 null} && (header.Version < MinimumSupportedVersion || header.Version > Version))\par
00220             \{\par
00221                 {\cf19 if} (header.EngineVersion != {\cf17 null})\par
00222                 \{\par
00223                     {\cf19 throw} {\cf17 new} InvalidOperationException(${\cf22 "Encryptor api version is not supported. You must use kryptor engine v\{header.EngineVersion\}"});\par
00224                 \}\par
00225                 {\cf19 else}\par
00226                 \{\par
00227                     {\cf19 throw} {\cf17 new} InvalidOperationException({\cf22 "Encryptor api version is not supported."});\par
00228                 \}\par
00229             \}\par
00230 \par
00231             await ProcessDataAsync(source, dest, {\cf17 false}, cancellationToken);\par
00232         \}\par
00233 \par
00234         {\cf17 private} async Task ProcessDataAsync(Stream source, Stream dest, {\cf18 bool} doEncrypt, CancellationToken cancellationToken)\par
00235         \{\par
00236             CryptoProcess process = {\cf17 new} CryptoProcess();\par
00237             process.InitializeData();\par
00238 \par
00239             Func<CryptoProcess, int> blockSizeCallback;\par
00240             Func<byte[], CryptoProcess, Task<byte[]>> cryptoCallback;\par
00241             {\cf18 int} chunckSize;\par
00242 \par
00243             {\cf19 if} (doEncrypt)\par
00244             \{\par
00245                 blockSizeCallback = GetEncryptionBufferSize;\par
00246                 cryptoCallback = EncryptBlockAsync;\par
00247                 chunckSize = Provider.EncryptionChunkSize;\par
00248             \}\par
00249             {\cf19 else}\par
00250             \{\par
00251                 blockSizeCallback = GetDecryptionBufferSize;\par
00252                 cryptoCallback = DecryptBlockAsync;\par
00253                 chunckSize = Provider.DecryptionChunkSize;\par
00254             \}\par
00255 \par
00256             {\cf18 double} step = (double)(({\cf18 double})chunckSize / (source.Length - source.Position)) * 100;\par
00257             {\cf18 int} counter = 0;\par
00258             {\cf18 int} blockSize;\par
00259             {\cf18 long} i = 0;\par
00260             ProgressChanged?.Invoke({\cf17 this}, 0);\par
00261 \par
00262             {\cf19 try}\par
00263             \{\par
00264                 {\cf19 while} (i < source.Length)\par
00265                 \{\par
00266                     process.BlockSize = Provider.Configuration.DynamicBlockProccessing ? DynamicEncryption.GetDynamicBlockSize(Provider.KeyStore, process) : BlockSize;\par
00267                     blockSize = blockSizeCallback(process);\par
00268                     {\cf18 int} actualSize = (int)Math.Min(source.Length - source.Position, blockSize);\par
00269 \par
00270                     {\cf18 byte}[] slice = {\cf17 new} {\cf18 byte}[actualSize];\par
00271                     await AsyncCompat.ReadAsync(source, slice, 0, slice.Length, cancellationToken);\par
00272                     {\cf18 byte}[] eSlice = await cryptoCallback(slice, process);\par
00273                     await AsyncCompat.WriteAsync(dest, eSlice, 0, eSlice.Length, cancellationToken);\par
00274 \par
00275                     counter += blockSize / chunckSize;\par
00276                     {\cf18 double} prog = step * counter;\par
00277                     ProgressChanged?.Invoke({\cf17 this}, Math.Min(prog, 100));\par
00278 \par
00279                     process.NextBlock(!Provider.Configuration.Continuous);\par
00280                     i += blockSize;\par
00281                 \}\par
00282             \}\par
00283             {\cf19 catch} (ArgumentOutOfRangeException)\par
00284             \{\par
00285                 {\cf19 throw} {\cf17 new} DataException({\cf22 "Small keystore size"});\par
00286             \}\par
00287         \}\par
00288 \par
00294         {\cf17 public} async Task<byte[]> EncryptBlockAsync({\cf18 byte}[] data) => await EncryptBlockAsync(data, CancellationToken.None);\par
00295 \par
00304         {\cf17 public} async Task<byte[]> EncryptBlockAsync({\cf18 byte}[] data, CancellationToken cancellationToken)\par
00305         \{\par
00306             CryptoProcess process = {\cf17 new} CryptoProcess();\par
00307             process.InitializeData();\par
00308             {\cf19 return} await EncryptBlockAsync(data, process, cancellationToken);\par
00309         \}\par
00310 \par
00319         {\cf17 public} async Task<byte[]> EncryptBlockAsync({\cf18 byte}[] data, CryptoProcess process) => await EncryptBlockAsync(data, process, CancellationToken.None);\par
00320 \par
00332         {\cf17 public} async Task<byte[]> EncryptBlockAsync({\cf18 byte}[] data, CryptoProcess process, CancellationToken cancellationToken)\par
00333         \{\par
00334             {\cf19 if} (data.Length > GetEncryptionBufferSize(process))\par
00335             \{\par
00336                 {\cf19 throw} {\cf17 new} ArgumentException(${\cf22 "Max allowed size for input buffer is :\{GetEncryptionBufferSize(process)\}"});\par
00337             \}\par
00338 \par
00339             {\cf18 byte}[] result = await Provider.EncryptBlockAsync(data, process, cancellationToken);\par
00340 \par
00341             {\cf19 return} result.Length > GetDecryptionBufferSize(process)\par
00342                 ? {\cf19 throw} {\cf17 new} OverflowException({\cf22 "Resulting buffer size is larger than the allowed size"})\par
00343                 : result;\par
00344         \}\par
00345 \par
00351         {\cf17 public} async Task<byte[]> DecryptBlockAsync({\cf18 byte}[] data) => await DecryptBlockAsync(data, CancellationToken.None);\par
00352 \par
00361         {\cf17 public} async Task<byte[]> DecryptBlockAsync({\cf18 byte}[] data, CancellationToken cancellationToken)\par
00362         \{\par
00363             CryptoProcess proc = {\cf17 new} CryptoProcess();\par
00364             proc.InitializeData();\par
00365             {\cf19 return} await DecryptBlockAsync(data, proc, cancellationToken);\par
00366         \}\par
00367 \par
00376         {\cf17 public} async Task<byte[]> DecryptBlockAsync({\cf18 byte}[] data, CryptoProcess process) => await DecryptBlockAsync(data, process, CancellationToken.None);\par
00377 \par
00389         {\cf17 public} async Task<byte[]> DecryptBlockAsync({\cf18 byte}[] data, CryptoProcess process, CancellationToken cancellationToken)\par
00390         \{\par
00391             {\cf19 if} (data.Length > GetDecryptionBufferSize(process))\par
00392             \{\par
00393                 {\cf19 throw} {\cf17 new} ArgumentException(${\cf22 "Max allowed size for input buffer is :\{GetDecryptionBufferSize(process)\}"});\par
00394             \}\par
00395 \par
00396             {\cf18 byte}[] result = await Provider.DecryptBlockAsync(data, process, cancellationToken);\par
00397 \par
00398             {\cf19 return} result.Length > GetEncryptionBufferSize(process)\par
00399                 ? {\cf19 throw} {\cf17 new} OverflowException({\cf22 "Resulting buffer size is larger than the allowed size"})\par
00400                 : result;\par
00401         \}\par
00402     \}\par
00403 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStore.cs File Reference\par \pard\plain 
{\tc\tcl2 \v KeyStore.cs}
{\xe \v KeyStore.cs}
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SAPTeam.Kryptor.KeyStore}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores keys for the {\b Kes} class. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
KeyStore.cs\par \pard\plain 
{\tc\tcl2 \v KeyStore.cs}
{\xe \v KeyStore.cs}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00002 {\cf17 using }SAPTeam.Kryptor.Generators;\par
00003 \par
00004 {\cf17 namespace }SAPTeam.Kryptor\par
00005 \{\par
00009     {\cf17 public} readonly {\cf17 struct }KeyStore\par
00010     \{\par
00011         {\cf17 private} {\cf17 static} readonly CryptoRandom random = {\cf17 new} CryptoRandom();\par
00012 \par
00022         {\cf17 public} {\cf18 byte}[] {\cf17 this}[{\cf18 int} index] => Keys[Math.Abs(index) % Keys.Length];\par
00023 \par
00027         {\cf17 public} {\cf18 byte}[][] Keys \{ {\cf17 get}; \}\par
00028 \par
00032         {\cf17 public} {\cf18 byte}[] Raw \{ {\cf17 get}; \}\par
00033 \par
00037         {\cf17 public} {\cf18 byte}[] Fingerprint \{ {\cf17 get}; \}\par
00038 \par
00045         {\cf17 public} KeyStore({\cf18 byte}[] bytes)\par
00046         \{\par
00047             {\cf19 if} (bytes == {\cf17 null}) {\cf19 throw} {\cf17 new} ArgumentNullException(nameof(bytes));\par
00048             {\cf19 if} (bytes.Length == 0) {\cf19 throw} {\cf17 new} ArgumentException(${\cf22 "The keys array is empty"});\par
00049 \par
00050             Raw = bytes;\par
00051             Keys = Raw.Chunk(32).Where(x => x.Length == 32).ToArray();\par
00052 \par
00053             Fingerprint = Transformers.Pick(Raw.Sha512(), 12, Raw.Length + Raw[4] + Raw[Raw.Length - 5] + Raw.Length + Raw[14] + Raw[Raw.Length - 10]).ToArray().Sha256().Take(20).ToArray();\par
00054         \}\par
00055 \par
00065         [Obsolete({\cf22 "Use IGenerator classes such as CryptoRandom or UnixRandom"})]\par
00066         {\cf17 public} {\cf17 static} KeyStore Generate({\cf18 int} count = 0)\par
00067         \{\par
00068             {\cf19 if} (count <= 0)\par
00069             \{\par
00070                 count = GetRandomOddNumber();\par
00071             \}\par
00072 \par
00073             {\cf18 byte}[] result = {\cf17 new} {\cf18 byte}[count * 32];\par
00074             {\cf17 new} SafeRng().Generate(result);\par
00075 \par
00076             {\cf19 return} {\cf17 new} KeyStore(result);\par
00077         \}\par
00078 \par
00083         {\cf17 public} {\cf17 static} {\cf18 int} GetRandomOddNumber()\par
00084         \{\par
00085             {\cf18 int} count = random.Next(257, 2047);\par
00086             {\cf19 if} (count % 2 == 0)\par
00087             \{\par
00088                 count++;\par
00089             \}\par
00090 \par
00091             {\cf19 return} count;\par
00092         \}\par
00093     \}\par
00094 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transformers.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Transformers.cs}
{\xe \v Transformers.cs}
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SAPTeam.Kryptor.Transformers}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains methods to transform vlues. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Transformers.cs\par \pard\plain 
{\tc\tcl2 \v Transformers.cs}
{\xe \v Transformers.cs}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Security.Cryptography;\par
00002 \par
00003 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00004 {\cf17 using }SAPTeam.Kryptor.Generators;\par
00005 \par
00006 {\cf17 namespace }SAPTeam.Kryptor\par
00007 \{\par
00011     {\cf17 public} {\cf17 static} {\cf17 class }Transformers\par
00012     \{\par
00020         {\cf17 public} {\cf17 static} ITranformer GetTranformer(TransformerToken token)\par
00021         \{\par
00022             {\cf19 switch} (token.TransformerName)\par
00023             \{\par
00024                 {\cf19 case} {\cf22 "generica"}:\par
00025                 {\cf19 case} {\cf22 "gen"}:\par
00026                 {\cf19 case} {\cf22 "g"}:\par
00027                     {\cf19 return} {\cf17 new} Generica(token.SecretKey, token.Salt ?? GenerateSalt(token));\par
00028                 {\cf19 case} {\cf22 "liteen"}:\par
00029                 {\cf19 case} {\cf22 "lite"}:\par
00030                 {\cf19 case} {\cf22 "l"}:\par
00031                     {\cf19 return} {\cf17 new} LiteEn(token.SecretKey, token.Salt ?? GenerateSalt(token));\par
00032                 {\cf19 default}:\par
00033                     {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "Invalid transformer name: "} + token.TransformerName);\par
00034             \}\par
00035         \}\par
00036 \par
00037         {\cf17 private} {\cf17 static} {\cf18 byte}[] GenerateSalt(TransformerToken token) => Pick(token.SecretKey.Sha256(), 16, token.Rotate > 0 ? token.KeySize * token.Rotate : token.KeySize).ToArray();\par
00038 \par
00045         {\cf17 public} {\cf17 static} T[] Rotate<T>(T[] array, {\cf18 int} positions)\par
00046         \{\par
00047             {\cf18 int} length = array.Length;\par
00048             {\cf19 if} (length == 0)\par
00049             \{\par
00050                 {\cf19 return} Array.Empty<T>(); {\cf20 // Nothing to rotate}\par
00051             \}\par
00052 \par
00053             {\cf20 // Normalize the rotation amount (handle negative values and large rotations)}\par
00054             positions = ((positions % length) + length) % length;\par
00055 \par
00056             {\cf20 // Create a temporary array to store rotated elements}\par
00057             T[] rotatedArray = {\cf17 new} T[length];\par
00058 \par
00059             {\cf20 // Copy elements after rotation to the temporary array}\par
00060             {\cf19 for} ({\cf18 int} i = 0; i < length; i++)\par
00061             \{\par
00062                 {\cf18 int} newIndex = (i + positions) % length;\par
00063                 rotatedArray[newIndex] = array[i];\par
00064             \}\par
00065 \par
00066             {\cf19 return} rotatedArray;\par
00067         \}\par
00068 \par
00077         {\cf17 public} {\cf17 static} IEnumerable<T> Pick<T>(IEnumerable<T> collection, {\cf18 int} count, {\cf18 int} seed)\par
00078         \{\par
00079             T[] array = collection.ToArray();\par
00080             Shuffle(array, seed);\par
00081 \par
00082             {\cf20 // Take the first 'count' items from the shuffled array}\par
00083             {\cf19 return} array.Take(Math.Min(count, array.Length));\par
00084         \}\par
00085 \par
00093         {\cf17 public} {\cf17 static} T[] Mix<T>({\cf18 int} seed, params IEnumerable<T>[] collections)\par
00094         \{\par
00095             List<T> combinedList = {\cf17 new} List<T>();\par
00096 \par
00097             {\cf19 foreach} (IEnumerable<T> collection {\cf19 in} collections)\par
00098             \{\par
00099                 combinedList.AddRange(collection);\par
00100             \}\par
00101 \par
00102             T[] combinedArray = combinedList.ToArray();\par
00103 \par
00104             Shuffle(combinedArray, seed);\par
00105 \par
00106             {\cf19 return} combinedArray;\par
00107         \}\par
00108 \par
00115         {\cf17 public} {\cf17 static} {\cf18 void} Shuffle<T>(T[] array, {\cf18 int} seed)\par
00116         \{\par
00117             {\cf17 using} (SHA256 sha256 = SHA256.Create())\par
00118             \{\par
00119                 {\cf18 int} n = array.Length;\par
00120 \par
00121                 {\cf19 for} ({\cf18 int} i = n - 1; i > 0; i--)\par
00122                 \{\par
00123                     {\cf20 // Compute a hash-based random index}\par
00124                     {\cf18 byte}[] hashBytes = sha256.ComputeHash(BitConverter.GetBytes(seed + i));\par
00125                     {\cf18 int} j = Math.Abs(BitConverter.ToInt32(hashBytes, 0)) % (i + 1);\par
00126 \par
00127                     {\cf20 // Swap elements}\par
00128                     (array[j], array[i]) = (array[i], array[j]);\par
00129                 \}\par
00130             \}\par
00131         \}\par
00132 \par
00139         {\cf17 public} {\cf17 static} {\cf18 int} ToAbsInt32(IEnumerable<byte> collection, {\cf18 int} seed) => Math.Abs(ToInt32(collection, seed));\par
00140 \par
00147         {\cf17 public} {\cf17 static} {\cf18 int} ToInt32(IEnumerable<byte> collection, {\cf18 int} seed) => BitConverter.ToInt32(Pick(collection, 4, seed).ToArray(), 0);\par
00148 \par
00155         {\cf17 public} {\cf17 static} {\cf18 long} ToInt64(IEnumerable<byte> collection, {\cf18 int} seed) => BitConverter.ToInt64(Pick(collection, 8, seed).ToArray(), 0);\par
00156 \par
00167         {\cf17 public} {\cf17 static} {\cf18 byte}[] CreateKey(KeyStore keyStore, CryptoProcess process)\par
00168         \{\par
00169             {\cf18 int} seed = ToAbsInt32(process.BlockHash, process.BlockIndex + process.ChunkIndex);\par
00170             IEnumerable<byte> sets = Pick(keyStore.Keys, (seed % 8) + 1, seed).SelectMany(x => x);\par
00171 \par
00172             {\cf18 byte}[] mixed = Mix(seed, sets);\par
00173             IEnumerable<byte> key = Pick(mixed, 32, seed);\par
00174 \par
00175             {\cf19 return} key.ToArray();\par
00176         \}\par
00177 \par
00188         {\cf17 public} {\cf17 static} {\cf18 byte}[] CreateIV(KeyStore keyStore, CryptoProcess process) => Pick(keyStore.Keys, 1, (process.BlockHash[5] % (process.BlockHash[19] + 4)) - process.ChunkIndex).First().Take(16).ToArray();\par
00189     \}\par
00190 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TransformerToken.cs File Reference\par \pard\plain 
{\tc\tcl2 \v TransformerToken.cs}
{\xe \v TransformerToken.cs}
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SAPTeam.Kryptor.TransformerToken}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parses and holds transformer token data. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b SAPTeam.Kryptor}\par
}
\par \pard\plain 

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdremboss\brdrw15\brsp20 \adjustright \par}
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TransformerToken.cs\par \pard\plain 
{\tc\tcl2 \v TransformerToken.cs}
{\xe \v TransformerToken.cs}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 using }System.Text.RegularExpressions;\par
00002 \par
00003 {\cf17 using }SAPTeam.Kryptor.Extensions;\par
00004 \par
00005 {\cf17 namespace }SAPTeam.Kryptor\par
00006 \{\par
00010     {\cf17 public} {\cf17 struct }TransformerToken\par
00011     \{\par
00012         {\cf17 private} {\cf17 static} readonly {\cf18 string} pattern = {\cf22 @"^(?<TransformerName>\\w+):(?<SecretKey>\\w+):(?<KeySize>\\d+)(?::(?<Salt>\\w+))?(?:-(?<Rotate>\\d+))?$"};\par
00013         {\cf17 private} {\cf17 static} readonly Regex regex = {\cf17 new} Regex(pattern);\par
00014 \par
00018         {\cf17 public} {\cf18 string} TransformerName \{ {\cf17 get}; {\cf17 set}; \}\par
00019 \par
00023         {\cf17 public} {\cf18 byte}[] SecretKey \{ {\cf17 get}; {\cf17 set}; \}\par
00024 \par
00028         {\cf17 public} {\cf18 int} KeySize \{ {\cf17 get}; {\cf17 set}; \}\par
00029 \par
00033         {\cf17 public} {\cf18 byte}[] Salt \{ {\cf17 get}; {\cf17 set}; \}\par
00034 \par
00038         {\cf17 public} {\cf18 int} Rotate \{ {\cf17 get}; {\cf17 set}; \}\par
00039 \par
00050         {\cf17 public} {\cf17 static} TransformerToken Parse({\cf18 string} token)\par
00051         \{\par
00052             Match match = regex.Match(token);\par
00053 \par
00054             {\cf19 if} (match.Success)\par
00055             \{\par
00056                 {\cf20 // Extract the named groups}\par
00057                 {\cf18 string} transformerName = match.Groups[{\cf22 "TransformerName"}].Value.Trim().ToLower();\par
00058                 {\cf18 byte}[] secretKey = match.Groups[{\cf22 "SecretKey"}].Value.Trim().Encode();\par
00059                 {\cf18 int} keySize = {\cf18 int}.Parse(match.Groups[{\cf22 "KeySize"}].Value.Trim());\par
00060                 {\cf18 byte}[] salt = !{\cf18 string}.IsNullOrEmpty(match.Groups[{\cf22 "Salt"}].Value.Trim()) ? match.Groups[{\cf22 "Salt"}].Value.Trim().Encode() : {\cf17 null};\par
00061                 {\cf18 int} rotate = !{\cf18 string}.IsNullOrEmpty(match.Groups[{\cf22 "Rotate"}].Value.Trim()) ? {\cf18 int}.Parse(match.Groups[{\cf22 "Rotate"}].Value.Trim()) : 0;\par
00062 \par
00063                 {\cf19 return} {\cf17 new} TransformerToken()\par
00064                 \{\par
00065                     TransformerName = transformerName,\par
00066                     SecretKey = secretKey,\par
00067                     KeySize = keySize,\par
00068                     Salt = salt,\par
00069                     Rotate = rotate\par
00070                 \};\par
00071             \}\par
00072             {\cf19 else}\par
00073             \{\par
00074                 {\cf19 throw} {\cf17 new} ArgumentException({\cf22 "Input does not match the expected format."});\par
00075             \}\par
00076         \}\par
00077 \par
00085         {\cf17 public} {\cf17 static} {\cf18 bool} IsValid({\cf18 string} token)\par
00086         \{\par
00087             Match match = regex.Match(token);\par
00088 \par
00089             {\cf19 return} match.Success;\par
00090         \}\par
00091 \par
00096         {\cf17 public} readonly {\cf18 bool} IsValid() => TransformerName != {\cf17 null} && SecretKey != {\cf17 null} && KeySize > 0;\par
00097 \par
00102         {\cf17 public} readonly ITranformer GetTranformer() => Transformers.GetTranformer({\cf17 this});\par
00103 \par
00113         {\cf17 public} readonly KeyStore GenerateKeyStore({\cf18 int} margin)\par
00114         \{\par
00115             ITranformer transformer = GetTranformer();\par
00116 \par
00117             {\cf18 byte}[] buffer = {\cf17 new} {\cf18 byte}[(KeySize * 32) + margin];\par
00118             transformer.Generate(buffer, Rotate);\par
00119 \par
00120             {\cf19 return} {\cf17 new} KeyStore(buffer);\par
00121         \}\par
00122     \}\par
00123 \}\par
}

\pard\plain \sect\sbknone
{\pard\widctlpar\brdrb\brdrs\brdrw75\brsp20 \adjustright \par}
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
